{"version":3,"file":"splide-extension-video.js","sources":["../../src/js/node_modules/@splidejs/splide/src/js/utils/type/type.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/array/toArray/toArray.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/array/index.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/arrayLike/slice/slice.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/arrayLike/find/find.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/addClass/addClass.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/append/append.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/matches/matches.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/children/children.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/child/child.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/object/forOwn/forOwn.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/object/assign/assign.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/object/merge/merge.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/create/create.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/style/style.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/display/display.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/remove/remove.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/queryAll/queryAll.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/dom/removeClass/removeClass.ts","../../src/js/node_modules/@splidejs/splide/src/js/constants/project.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/error/error/error.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/math/math/math.ts","../../src/js/node_modules/@splidejs/splide/src/js/utils/math/clamp/clamp.ts","../../src/js/node_modules/@splidejs/splide/dist/js/splide.esm.js","../../src/js/src/js/constants/classes.ts","../../src/js/src/js/constants/data-attributes.ts","../../src/js/src/js/constants/defaults.ts","../../src/js/src/js/constants/events.ts","../../src/js/src/js/constants/states.ts","../../src/js/src/js/classes/AbstractVideoPlayer.ts","../../src/js/src/js/players/html/HTMLVideoPlayer.ts","../../src/js/node_modules/@vimeo/player/dist/player.es.js","../../src/js/src/js/players/vimeo/VimeoPlayer.ts","../../src/js/src/js/players/youtube/YouTubeIframeAPILoader.ts","../../src/js/src/js/players/youtube/YouTubePlayer.ts","../../src/js/node_modules/@splidejs/splide/src/js/constants/classes.ts","../../src/js/src/js/constants/i18n.ts","../../src/js/src/js/classes/PlayerUI.ts","../../src/js/src/js/classes/Player.ts","../../src/js/src/js/extensions/Video/Video.ts","../../src/js/src/js/build/default.ts"],"sourcesContent":["/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\r\nexport function isObject( subject: unknown ): subject is object {\r\n  return ! isNull( subject ) && typeof subject === 'object';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\r\nexport function isArray<T>( subject: unknown ): subject is T[] {\r\n  return Array.isArray( subject );\r\n}\r\n\r\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\r\nexport function isFunction( subject: unknown ): subject is ( ...args: any[] ) => any {\r\n  return typeof subject === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\r\nexport function isString( subject: unknown ): subject is string {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\r\nexport function isUndefined( subject: unknown ): subject is undefined {\r\n  return typeof subject === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\r\nexport function isNull( subject: unknown ): subject is null {\r\n  return subject === null;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\r\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\r\n  return subject instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLButtonElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\r\n */\r\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\r\n  return subject instanceof HTMLButtonElement;\r\n}\r\n","import { isArray } from '../../type/type';\r\n\r\n\r\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\r\nexport function toArray<T>( value: T | T[] ): T[] {\r\n  return isArray( value ) ? value : [ value ];\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n","export { empty }    from './empty/empty';\r\nexport { forEach }  from './forEach/forEach';\r\nexport { includes } from './includes/includes';\r\nexport { push }     from './push/push';\r\nexport { toArray }  from './toArray/toArray';\r\n\r\nexport const arrayProto = Array.prototype;\r\n","import { arrayProto } from '../../array';\r\n\r\n\r\n/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return arrayProto.slice.call( arrayLike, start, end );\r\n}\r\n","import { slice } from '../slice/slice';\r\n\r\n\r\n/**\r\n * The find method for an array or array-like object, works in IE.\r\n * This method is not performant for a huge array.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param predicate - The predicate function to test each element in the object.\r\n *\r\n * @return A found value if available, or otherwise `undefined`.\r\n */\r\nexport function find<T>(\r\n  arrayLike: ArrayLike<T>,\r\n  predicate: ( value: T, index: number, array: T[] ) => any\r\n): T | undefined {\r\n  return slice( arrayLike ).filter( predicate )[ 0 ];\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\r\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\r\n  if ( elm ) {\r\n    forEach( classes, name => {\r\n      if ( name ) {\r\n        elm.classList[ add ? 'add' : 'remove' ]( name );\r\n      }\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\r\nexport function addClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\r\nexport function append( parent: Element, children: Node | Node[] ): void {\r\n  forEach( children, parent.appendChild.bind( parent ) );\r\n}\r\n","import { isHTMLElement } from '../../type/type';\n\n\n/**\n * Checks if the element can be selected by the provided selector or not.\n *\n * @param elm      - An element to check.\n * @param selector - A selector to test.\n *\n * @return `true` if the selector matches the element, or otherwise `false`.\n */\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\n}\n","import { slice } from '../../arrayLike';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\r\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector: string ): E[] {\r\n  return parent ? slice( parent.children ).filter( child => matches( child, selector ) ) as E[] : [];\r\n}\r\n","import { children } from '../children/children';\r\n\r\n\r\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\r\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\r\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\r\n}\r\n","/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes the value and key as arguments.\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>(\n  object: T,\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\n  right?: boolean\n): T {\n  if ( object ) {\n    let keys = Object.keys( object );\n    keys = right ? keys.reverse() : keys;\n\n    for ( let i = 0; i < keys.length; i++ ) {\n      const key = keys[ i ];\n\n      if ( key !== '__proto__' ) {\n        if ( iteratee( object[ key ], key ) === false ) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n","import { slice } from '../../arrayLike';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Assign U to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - An object to assign.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assign<T, U> = Omit<T, keyof U> & U;\r\n\r\nexport function assign<T extends object>( object: T ): T;\r\n\r\n// There is a way to type arguments recursively, but these fixed definitions are enough for this project.\r\nexport function assign<T extends object, U extends object>( object: T, source: U ): Assign<T, U>;\r\n\r\nexport function assign<T extends object, U1 extends object, U2 extends object>(\r\n  object: T, source1: U1, source2: U2\r\n): Assign<Assign<T, U1>, U2>;\r\n\r\nexport function assign<T extends object, U1 extends object, U2 extends object, U3 extends object>(\r\n  object: T, source1: U1, source2: U2, source3: U3\r\n): Assign<Assign<Assign<T, U1>, U2>, U3>;\r\n\r\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n * `undefined` in source objects will be skipped.\r\n *\r\n * @param object - An object to assign properties to.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\r\nexport function assign<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      object[ key ] = source[ key ];\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { isArray, isObject } from '../../type/type';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Merges U to T.\r\n *\r\n * @typeParam T - An object to merge U into.\r\n * @typeParam U - An object to merge properties from.\r\n *\r\n * @return A merged object type.\r\n */\r\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\r\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\r\n    ? U[ K ] extends any[]\r\n      ? T[ K ] extends any[]\r\n        ? Array<T[ K ][ number ] | U[ K ][ number ]>\r\n        : U[ K ]\r\n      : T[ K ] extends object\r\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Cast<A, object> : never\r\n        : U[ K ]\r\n    : U[ K ];\r\n} & Omit<U, keyof T>;\r\n\r\ntype Cast<T, U> = T extends U ? T : U;\r\n\r\n/**\r\n * Recursively merges source properties to the object.\r\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\r\n *\r\n * @param object - An object to merge properties to.\r\n * @param source - A source object to merge properties from.\r\n *\r\n * @return A new object with merged properties.\r\n */\r\nexport function merge<T extends object, U extends object>( object: T, source: U ): Merge<T, U> {\r\n  forOwn( source, ( value, key ) => {\r\n    if ( isArray( value ) ) {\r\n      object[ key ] = value.slice();\r\n    } else if ( isObject( value ) ) {\r\n      object[ key ] = merge( isObject( object[ key ] ) ? object[ key ] : {}, value );\r\n    } else {\r\n      object[ key ] = value;\r\n    }\r\n  } );\r\n\r\n  return object as Merge<T, U>;\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elm   - An element.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\r\nexport function removeAttribute( elm: Element, attrs: string | string[] ): void {\r\n  if ( elm ) {\r\n    forEach( attrs, attr => {\r\n      elm.removeAttribute( attr );\r\n    } );\r\n  }\r\n}\r\n","import { forOwn } from '../../object';\r\nimport { isNull, isObject } from '../../type/type';\r\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\r\n\r\n\r\nexport function setAttribute( elm: Element, attr: string, value: string | number | boolean ): void;\r\nexport function setAttribute( elm: Element, attrs: Record<string, string | number | boolean> ): void;\r\n\r\nexport function setAttribute(\r\n  elm: Element,\r\n  attrs: string | Record<string, string | number | boolean>,\r\n  value?: string | number | boolean\r\n): void {\r\n  if ( isObject( attrs ) ) {\r\n    forOwn( attrs, ( value, name ) => {\r\n      setAttribute( elm, name, value );\r\n    } );\r\n  } else {\r\n    isNull( value ) ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { addClass } from '../addClass/addClass';\r\nimport { append } from '../append/append';\r\nimport { setAttribute } from '../setAttribute/setAttribute';\r\n\r\n\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string | string[],\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ];\r\n\r\nexport function create(\r\n  tag: string,\r\n  attrs?: Record<string, string | number | boolean> | string | string[],\r\n  parent?: HTMLElement\r\n): HTMLElement;\r\n\r\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ] {\r\n  const elm = document.createElement( tag );\r\n\r\n  if ( attrs ) {\r\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\r\n  }\r\n\r\n  parent && append( parent, elm );\r\n\r\n  return elm;\r\n}\r\n","import { isNull, isUndefined } from '../../type/type';\n\n\nexport function style<K extends keyof CSSStyleDeclaration>(\n  elm: HTMLElement,\n  prop: K,\n): CSSStyleDeclaration[ K ];\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n): string;\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value: string | number\n): void;\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elm   - An element to apply styles to.\n * @param prop  - An object literal with styles or a property name.\n * @param value - A value to set.\n */\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value?: string | number\n): string | void {\n  if ( isUndefined( value ) ) {\n    return getComputedStyle( elm )[ prop ];\n  }\n\n  if ( ! isNull( value ) ) {\n    const { style } = elm;\n    value = `${ value }`;\n\n    if ( style[ prop ] !== value ) {\n      style[ prop ] = value;\n    }\n  }\n}\n","import { style } from '../style/style';\n\n\n/**\n * Sets the `display` CSS value to the element.\n *\n * @param elm     - An element to set a new value to.\n * @param display - A new `display` value.\n */\nexport function display( elm: HTMLElement, display: string ): void {\n  style( elm, 'display', display );\n}\n","/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\r\nexport function getAttribute( elm: Element, attr: string ): string {\r\n  return elm.getAttribute( attr );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\r\nexport function remove( nodes: Node | Node[] ): void {\r\n  forEach( nodes, node => {\r\n    if ( node && node.parentNode ) {\r\n      node.parentNode.removeChild( node );\r\n    }\r\n  } );\r\n}\r\n","import { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\r\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector: string ): E[] {\r\n  return slice<E>( parent.querySelectorAll( selector ) );\r\n}\r\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Displays the error message on the console.\r\n *\r\n * @param message - A message.\r\n */\r\nexport function error( message: string ): void {\r\n  console.error( `[${ PROJECT_CODE }] ${ message }` );\r\n}\r\n","export const { min, max, floor, ceil, abs } = Math;\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/*!\n * Splide.js\n * Version  : 3.6.11\n * License  : MIT\n * Copyright: 2022 Naotoshi Fujita\n */\nconst PROJECT_CODE = \"splide\";\nconst DATA_ATTRIBUTE = `data-${PROJECT_CODE}`;\n\nconst CREATED = 1;\nconst MOUNTED = 2;\nconst IDLE = 3;\nconst MOVING = 4;\nconst DESTROYED = 5;\nconst STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED\n};\n\nconst DEFAULT_EVENT_PRIORITY = 10;\nconst DEFAULT_USER_EVENT_PRIORITY = 20;\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === \"object\";\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isFunction(subject) {\n  return typeof subject === \"function\";\n}\nfunction isString(subject) {\n  return typeof subject === \"string\";\n}\nfunction isUndefined(subject) {\n  return typeof subject === \"undefined\";\n}\nfunction isNull(subject) {\n  return subject === null;\n}\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push(...toArray(items));\n  return array;\n}\n\nconst arrayProto = Array.prototype;\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, (name) => {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, (node) => {\n    const parent = ref.parentNode;\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter((child) => matches(child, selector)) : [];\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    let keys = Object.keys(object);\n    keys = right ? keys.reverse() : keys;\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key !== \"__proto__\") {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach((source) => {\n    forOwn(source, (value, key) => {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object, source) {\n  forOwn(source, (value, key) => {\n    if (isArray(value)) {\n      object[key] = value.slice();\n    } else if (isObject(value)) {\n      object[key] = merge(isObject(object[key]) ? object[key] : {}, value);\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n}\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, (attr) => {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, (value2, name) => {\n      setAttribute(elm, name, value2);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  const elm = document.createElement(tag);\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n  if (!isNull(value)) {\n    const { style: style2 } = elm;\n    value = `${value}`;\n    if (style2[prop] !== value) {\n      style2[prop] = value;\n    }\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({ preventScroll: true });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, (node) => {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction measure(parent, value) {\n  if (isString(value)) {\n    const div = create(\"div\", { style: `width: ${value}; position: absolute;` }, parent);\n    value = rect(div).width;\n    remove(div);\n  }\n  return value;\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? `${value}px` : \"\";\n}\n\nfunction assert(condition, message = \"\") {\n  if (!condition) {\n    throw new Error(`[${PROJECT_CODE}] ${message}`);\n  }\n}\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n\nconst noop = () => {\n};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nconst { min, max, floor, ceil, abs } = Math;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  const minimum = min(minOrMax, maxOrMin);\n  const maximum = max(minOrMax, maxOrMin);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  const minimum = min(x, y);\n  const maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, (replacement) => {\n    string = string.replace(\"%s\", `${replacement}`);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? `0${number}` : `${number}`;\n}\n\nconst ids = {};\nfunction uniqueId(prefix) {\n  return `${prefix}${pad(ids[prefix] = (ids[prefix] || 0) + 1)}`;\n}\n\nfunction EventBus() {\n  let handlers = {};\n  function on(events, callback, key, priority = DEFAULT_EVENT_PRIORITY) {\n    forEachEvent(events, (event, namespace) => {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        _event: event,\n        _callback: callback,\n        _namespace: namespace,\n        _priority: priority,\n        _key: key\n      }).sort((handler1, handler2) => handler1._priority - handler2._priority);\n    });\n  }\n  function off(events, key) {\n    forEachEvent(events, (event, namespace) => {\n      const eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter((handler) => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      });\n    });\n  }\n  function offBy(key) {\n    forOwn(handlers, (eventHandlers, event) => {\n      off(event, key);\n    });\n  }\n  function emit(event) {\n    (handlers[event] || []).forEach((handler) => {\n      handler._callback.apply(handler, slice(arguments, 1));\n    });\n  }\n  function destroy() {\n    handlers = {};\n  }\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(\" \").split(\" \").forEach((eventNS) => {\n      const fragments = eventNS.split(\".\");\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy\n  };\n}\n\nconst EVENT_MOUNTED = \"mounted\";\nconst EVENT_READY = \"ready\";\nconst EVENT_MOVE = \"move\";\nconst EVENT_MOVED = \"moved\";\nconst EVENT_SHIFTED = \"shifted\";\nconst EVENT_CLICK = \"click\";\nconst EVENT_ACTIVE = \"active\";\nconst EVENT_INACTIVE = \"inactive\";\nconst EVENT_VISIBLE = \"visible\";\nconst EVENT_HIDDEN = \"hidden\";\nconst EVENT_SLIDE_KEYDOWN = \"slide:keydown\";\nconst EVENT_REFRESH = \"refresh\";\nconst EVENT_UPDATED = \"updated\";\nconst EVENT_RESIZE = \"resize\";\nconst EVENT_RESIZED = \"resized\";\nconst EVENT_REPOSITIONED = \"repositioned\";\nconst EVENT_DRAG = \"drag\";\nconst EVENT_DRAGGING = \"dragging\";\nconst EVENT_DRAGGED = \"dragged\";\nconst EVENT_SCROLL = \"scroll\";\nconst EVENT_SCROLLED = \"scrolled\";\nconst EVENT_DESTROY = \"destroy\";\nconst EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nconst EVENT_ARROWS_UPDATED = \"arrows:updated\";\nconst EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nconst EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nconst EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nconst EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nconst EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nconst EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nconst EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n\nfunction EventInterface(Splide2) {\n  const { event } = Splide2;\n  const key = {};\n  let listeners = [];\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  function off(events) {\n    event.off(events, key);\n  }\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners.push([target, event2, callback, options]);\n      target.addEventListener(event2, callback, options);\n    });\n  }\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, (target, event2) => {\n      listeners = listeners.filter((listener) => {\n        if (listener[0] === target && listener[1] === event2 && (!callback || listener[2] === callback)) {\n          target.removeEventListener(event2, listener[2], listener[3]);\n          return false;\n        }\n        return true;\n      });\n    });\n  }\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, (target) => {\n      if (target) {\n        events.split(\" \").forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  function destroy() {\n    listeners = listeners.filter((data) => unbind(data[0], data[1]));\n    event.offBy(key);\n  }\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy\n  };\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  const { now } = Date;\n  let startTime;\n  let rate = 0;\n  let id;\n  let paused = true;\n  let count = 0;\n  function update() {\n    if (!paused) {\n      const elapsed = now() - startTime;\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n      if (rate === 1) {\n        onInterval();\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n      raf(update);\n    }\n  }\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  function pause() {\n    paused = true;\n  }\n  function rewind() {\n    startTime = now();\n    rate = 0;\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  function set(time) {\n    interval = time;\n  }\n  function isPaused() {\n    return paused;\n  }\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    set,\n    isPaused\n  };\n}\n\nfunction State(initialState) {\n  let state = initialState;\n  function set(value) {\n    state = value;\n  }\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n  return { set, is };\n}\n\nfunction Throttle(func, duration) {\n  let interval;\n  function throttled() {\n    if (!interval) {\n      interval = RequestInterval(duration || 0, () => {\n        func.apply(this, arguments);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n  return throttled;\n}\n\nfunction Options(Splide2, Components2, options) {\n  const throttledObserve = Throttle(observe);\n  let initialOptions;\n  let points;\n  let currPoint;\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide2.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n    initialOptions = merge({}, options);\n    const { breakpoints } = options;\n    if (breakpoints) {\n      const isMin = options.mediaQuery === \"min\";\n      points = Object.keys(breakpoints).sort((n, m) => isMin ? +m - +n : +n - +m).map((point) => [\n        point,\n        matchMedia(`(${isMin ? \"min\" : \"max\"}-width:${point}px)`)\n      ]);\n      observe();\n    }\n  }\n  function mount() {\n    if (points) {\n      addEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener(\"resize\", throttledObserve);\n    }\n  }\n  function observe() {\n    const item = find(points, (item2) => item2[1].matches) || [];\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  function onMatch(point) {\n    const newOptions = options.breakpoints[point] || initialOptions;\n    if (newOptions.destroy) {\n      Splide2.options = initialOptions;\n      Splide2.destroy(newOptions.destroy === \"completely\");\n    } else {\n      if (Splide2.state.is(DESTROYED)) {\n        destroy(true);\n        Splide2.mount();\n      }\n      Splide2.options = newOptions;\n    }\n  }\n  return {\n    setup,\n    mount,\n    destroy\n  };\n}\n\nconst RTL = \"rtl\";\nconst TTB = \"ttb\";\n\nconst ORIENTATION_MAP = {\n  marginRight: [\"marginBottom\", \"marginLeft\"],\n  autoWidth: [\"autoHeight\"],\n  fixedWidth: [\"fixedHeight\"],\n  paddingLeft: [\"paddingTop\", \"paddingRight\"],\n  paddingRight: [\"paddingBottom\", \"paddingLeft\"],\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [\"ArrowUp\", \"ArrowRight\"],\n  ArrowRight: [\"ArrowDown\", \"ArrowLeft\"]\n};\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly) {\n    const { direction } = options;\n    const index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n  return {\n    resolve,\n    orient\n  };\n}\n\nconst CLASS_ROOT = PROJECT_CODE;\nconst CLASS_SLIDER = `${PROJECT_CODE}__slider`;\nconst CLASS_TRACK = `${PROJECT_CODE}__track`;\nconst CLASS_LIST = `${PROJECT_CODE}__list`;\nconst CLASS_SLIDE = `${PROJECT_CODE}__slide`;\nconst CLASS_CLONE = `${CLASS_SLIDE}--clone`;\nconst CLASS_CONTAINER = `${CLASS_SLIDE}__container`;\nconst CLASS_ARROWS = `${PROJECT_CODE}__arrows`;\nconst CLASS_ARROW = `${PROJECT_CODE}__arrow`;\nconst CLASS_ARROW_PREV = `${CLASS_ARROW}--prev`;\nconst CLASS_ARROW_NEXT = `${CLASS_ARROW}--next`;\nconst CLASS_PAGINATION = `${PROJECT_CODE}__pagination`;\nconst CLASS_PAGINATION_PAGE = `${CLASS_PAGINATION}__page`;\nconst CLASS_PROGRESS = `${PROJECT_CODE}__progress`;\nconst CLASS_PROGRESS_BAR = `${CLASS_PROGRESS}__bar`;\nconst CLASS_AUTOPLAY = `${PROJECT_CODE}__autoplay`;\nconst CLASS_PLAY = `${PROJECT_CODE}__play`;\nconst CLASS_PAUSE = `${PROJECT_CODE}__pause`;\nconst CLASS_SPINNER = `${PROJECT_CODE}__spinner`;\nconst CLASS_INITIALIZED = \"is-initialized\";\nconst CLASS_ACTIVE = \"is-active\";\nconst CLASS_PREV = \"is-prev\";\nconst CLASS_NEXT = \"is-next\";\nconst CLASS_VISIBLE = \"is-visible\";\nconst CLASS_LOADING = \"is-loading\";\nconst STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\nconst CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction Elements(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const elements = {};\n  const slides = [];\n  let classes;\n  let slider;\n  let track;\n  let list;\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  function mount() {\n    on(EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2);\n    on(EVENT_UPDATED, update);\n  }\n  function destroy() {\n    [root, track, list].forEach((elm) => {\n      removeAttribute(elm, \"style\");\n    });\n    empty(slides);\n    removeClass(root, classes);\n  }\n  function refresh() {\n    destroy();\n    setup();\n  }\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  function collect() {\n    slider = child(root, `.${CLASS_SLIDER}`);\n    track = query(root, `.${CLASS_TRACK}`);\n    list = child(track, `.${CLASS_LIST}`);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, `.${CLASS_SLIDE}:not(.${CLASS_CLONE})`));\n    const autoplay = find(`.${CLASS_AUTOPLAY}`);\n    const arrows = find(`.${CLASS_ARROWS}`);\n    assign(elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      autoplay,\n      prev: query(arrows, `.${CLASS_ARROW_PREV}`),\n      next: query(arrows, `.${CLASS_ARROW_NEXT}`),\n      bar: query(find(`.${CLASS_PROGRESS}`), `.${CLASS_PROGRESS_BAR}`),\n      play: query(autoplay, `.${CLASS_PLAY}`),\n      pause: query(autoplay, `.${CLASS_PAUSE}`)\n    });\n  }\n  function identify() {\n    const id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || `${id}-track`;\n    list.id = list.id || `${id}-list`;\n  }\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  function getClasses() {\n    return [\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE\n    ];\n  }\n  return assign(elements, {\n    setup,\n    mount,\n    destroy\n  });\n}\n\nconst ROLE = \"role\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_CURRENT = \"aria-current\";\nconst ARIA_LABEL = \"aria-label\";\nconst ARIA_HIDDEN = \"aria-hidden\";\nconst TAB_INDEX = \"tabindex\";\nconst DISABLED = \"disabled\";\nconst ARIA_ORIENTATION = \"aria-orientation\";\nconst ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  ARIA_ORIENTATION,\n  TAB_INDEX,\n  DISABLED\n];\n\nconst SLIDE = \"slide\";\nconst LOOP = \"loop\";\nconst FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface(Splide2);\n  const { Components, root, options } = Splide2;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const styles = getAttribute(slide, \"style\");\n  const isClone = slideIndex > -1;\n  const container = child(slide, `.${CLASS_CONTAINER}`);\n  const focusableNodes = options.focusableNodes && queryAll(slide, options.focusableNodes);\n  let destroyed;\n  function mount() {\n    if (!isClone) {\n      slide.id = `${root.id}-slide${pad(index + 1)}`;\n    }\n    bind(slide, \"click keydown\", (e) => {\n      emit(e.type === \"click\" ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, self, e);\n    });\n    on([EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_SHIFTED, EVENT_MOVED, EVENT_SCROLLED], update);\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation);\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove);\n    }\n  }\n  function destroy() {\n    destroyed = true;\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n  }\n  function initNavigation() {\n    const idx = isClone ? slideIndex : index;\n    const label = format(options.i18n.slideX, idx + 1);\n    const controls = Splide2.splides.map((target) => target.splide.root.id).join(\" \");\n    setAttribute(slide, ARIA_LABEL, label);\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, \"menuitem\");\n    updateActivity(isActive());\n  }\n  function onMove() {\n    if (!destroyed) {\n      update();\n    }\n  }\n  function update() {\n    if (!destroyed) {\n      const { index: currIndex } = Splide2;\n      updateActivity(isActive());\n      updateVisibility(isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, self);\n    }\n  }\n  function updateVisibility(visible) {\n    const hidden = !visible && (!isActive() || isClone);\n    setAttribute(slide, ARIA_HIDDEN, hidden || null);\n    setAttribute(slide, TAB_INDEX, !hidden && options.slideFocus ? 0 : null);\n    if (focusableNodes) {\n      focusableNodes.forEach((node) => {\n        setAttribute(node, TAB_INDEX, hidden ? -1 : null);\n      });\n    }\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, self);\n    }\n  }\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n  function isActive() {\n    const { index: curr } = Splide2;\n    return curr === index || options.cloneStatus && curr === slideIndex;\n  }\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n    const trackRect = rect(Components.Elements.track);\n    const slideRect = rect(slide);\n    const left = resolve(\"left\");\n    const right = resolve(\"right\");\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n  function isWithin(from, distance) {\n    let diff = abs(from - index);\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n    return diff <= distance;\n  }\n  const self = {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    update,\n    style: style$1,\n    isWithin\n  };\n  return self;\n}\n\nfunction Slides(Splide2, Components2, options) {\n  const { on, emit, bind } = EventInterface(Splide2);\n  const { slides, list } = Components2.Elements;\n  const Slides2 = [];\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      Slides2.sort((Slide1, Slide2) => Slide1.index - Slide2.index);\n    });\n  }\n  function init() {\n    slides.forEach((slide, index) => {\n      register(slide, index, -1);\n    });\n  }\n  function destroy() {\n    forEach$1((Slide2) => {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function update() {\n    forEach$1((Slide2) => {\n      Slide2.update();\n    });\n  }\n  function register(slide, index, slideIndex) {\n    const object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n  }\n  function get(excludeClones) {\n    return excludeClones ? filter((Slide2) => !Slide2.isClone) : Slides2;\n  }\n  function getIn(page) {\n    const { Controller } = Components2;\n    const index = Controller.toIndex(page);\n    const max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter((Slide2) => between(Slide2.index, index, index + max - 1));\n  }\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  function add(items, index) {\n    forEach(items, (slide) => {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n      if (isHTMLElement(slide)) {\n        const ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  function remove$1(matcher) {\n    remove(filter(matcher).map((Slide2) => Slide2.slide));\n    emit(EVENT_REFRESH);\n  }\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : (Slide2) => isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index));\n  }\n  function style(prop, value, useContainer) {\n    forEach$1((Slide2) => {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n  function observeImages(elm, callback) {\n    const images = queryAll(elm, \"img\");\n    let { length } = images;\n    if (length) {\n      images.forEach((img) => {\n        bind(img, \"load error\", () => {\n          if (!--length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n  return {\n    mount,\n    destroy,\n    update,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter,\n    style,\n    getLength,\n    isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const { root, track, list } = Components2.Elements;\n  const { getAt } = Slides;\n  let vertical;\n  let rootRect;\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  function init() {\n    rootRect = null;\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize();\n  }\n  function resize() {\n    const newRect = rect(root);\n    if (!rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      Slides.style(resolve(\"marginRight\"), unit(options.gap));\n      Slides.style(\"width\", cssSlideWidth() || null);\n      setSlidesHeight();\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n    }\n  }\n  function setSlidesHeight() {\n    Slides.style(\"height\", cssSlideHeight() || null, true);\n  }\n  function cssPadding(right) {\n    const { padding } = options;\n    const prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  function cssTrackHeight() {\n    let height = \"\";\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = `calc(${height} - ${cssPadding(false)} - ${cssPadding(true)})`;\n    }\n    return height;\n  }\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  function cssSlideWidth() {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? \"\" : cssSlideSize() : cssHeight());\n  }\n  function cssSlideSize() {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n  function slideSize(index, withoutGap) {\n    const Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  function totalSize(index, withoutGap) {\n    const Slide = getAt(index);\n    if (Slide) {\n      const right = rect(Slide.slide)[resolve(\"right\")];\n      const left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n    return 0;\n  }\n  function sliderSize() {\n    return totalSize(Splide2.length - 1, true) - totalSize(-1, true);\n  }\n  function getGap() {\n    const Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(`padding${right ? \"Right\" : \"Left\"}`))) || 0;\n  }\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding\n  };\n}\n\nfunction Clones(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Elements, Slides } = Components2;\n  const { resolve } = Components2.Direction;\n  const clones = [];\n  let cloneCount;\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      emit(EVENT_RESIZE);\n    }\n  }\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function observe() {\n    if (cloneCount < computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  function generate(count) {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n      push(slides.slice(-count), slides.slice(0, count)).forEach((Slide, index) => {\n        const isHead = index < count;\n        const clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  function cloneDeep(elm, index) {\n    const clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = `${Splide2.root.id}-clone${pad(index + 1)}`;\n    return clone;\n  }\n  function computeCloneCount() {\n    let { clones: clones2 } = options;\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (!clones2) {\n      const fixedSize = measure(Elements.list, options[resolve(\"fixedWidth\")]);\n      const fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      const baseCount = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage;\n      clones2 = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n    return clones2;\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components2.Layout;\n  const { resolve, orient } = Components2.Direction;\n  const { list, track } = Components2.Elements;\n  let Transition;\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  function destroy() {\n    removeAttribute(list, \"style\");\n  }\n  function reposition() {\n    if (!isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      emit(EVENT_REPOSITIONED);\n    }\n  }\n  function move(dest, index, prev, callback) {\n    if (!isBusy()) {\n      const { set } = Splide2.state;\n      const position = getPosition();\n      if (dest !== index) {\n        Transition.cancel();\n        translate(shift(position, dest > index), true);\n      }\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Transition.start(index, () => {\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        if (options.trimSpace === \"move\" && dest !== prev && position === getPosition()) {\n          Components2.Controller.go(dest > prev ? \">\" : \"<\", false, callback);\n        } else {\n          callback && callback();\n        }\n      });\n    }\n  }\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      const destination = preventLoop ? position : loop(position);\n      list.style.transform = `translate${resolve(\"X\")}(${destination}px)`;\n      position !== destination && emit(EVENT_SHIFTED);\n    }\n  }\n  function loop(position) {\n    if (Splide2.is(LOOP)) {\n      const diff = orient(position - getPosition());\n      const exceededMin = exceededLimit(false, position) && diff < 0;\n      const exceededMax = exceededLimit(true, position) && diff > 0;\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n    return position;\n  }\n  function shift(position, backwards) {\n    const excess = position - getLimit(backwards);\n    const size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n  function cancel() {\n    translate(getPosition());\n    Transition.cancel();\n  }\n  function toIndex(position) {\n    const Slides = Components2.Slides.get();\n    let index = 0;\n    let minDistance = Infinity;\n    for (let i = 0; i < Slides.length; i++) {\n      const slideIndex = Slides[i].index;\n      const distance = abs(toPosition(slideIndex, true) - position);\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n    return index;\n  }\n  function toPosition(index, trimming) {\n    const position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  function getPosition() {\n    const left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n    return position;\n  }\n  function offset(index) {\n    const { focus } = options;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n  function isBusy() {\n    return Splide2.state.is(MOVING) && options.waitForTransition;\n  }\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    const exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    const exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n  return {\n    mount,\n    destroy,\n    move,\n    jump,\n    translate,\n    shift,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    exceededLimit\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit } = Move;\n  const { isEnough, getLength } = Components2.Slides;\n  const isLoop = Splide2.is(LOOP);\n  const isSlide = Splide2.is(SLIDE);\n  let currIndex = options.start || 0;\n  let prevIndex = currIndex;\n  let slideCount;\n  let perMove;\n  let perPage;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init, DEFAULT_EVENT_PRIORITY - 1);\n  }\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    currIndex = clamp(currIndex, 0, slideCount - 1);\n  }\n  function go(control, allowSameIndex, callback) {\n    const dest = parse(control);\n    if (options.useScroll) {\n      scroll(dest, true, true, options.speed, callback);\n    } else {\n      const index = loop(dest);\n      if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n  function scroll(destination, useIndex, snap, duration, callback) {\n    const dest = useIndex ? destination : toDest(destination);\n    Components2.Scroll.scroll(useIndex || snap ? Move.toPosition(dest, true) : destination, duration, () => {\n      setIndex(Move.toIndex(Move.getPosition()));\n      callback && callback();\n    });\n  }\n  function parse(control) {\n    let index = currIndex;\n    if (isString(control)) {\n      const [, indicator, number] = control.match(/([+\\-<>])(\\d+)?/) || [];\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +`${indicator}${+number || 1}`, currIndex, true);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, getEnd());\n    }\n    return index;\n  }\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  function getAdjacent(prev, destination) {\n    const number = perMove || (hasFocus() ? 1 : perPage);\n    const dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex);\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : getEnd();\n      }\n    }\n    return destination ? dest : loop(dest);\n  }\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      const end = getEnd();\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove || hasFocus() ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!incremental && dest !== from) {\n          dest = perMove ? dest : toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n    return dest;\n  }\n  function getEnd() {\n    let end = slideCount - perPage;\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n    return max(end, 0);\n  }\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n    return index;\n  }\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n    return index;\n  }\n  function toDest(destination) {\n    const closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, getEnd()) : closest;\n  }\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n  return {\n    mount,\n    go,\n    scroll,\n    getNext,\n    getPrev,\n    getAdjacent,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    toDest,\n    hasFocus\n  };\n}\n\nconst XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nconst PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nconst SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components2;\n  let wrapper = Elements.arrows;\n  let prev = Elements.prev;\n  let next = Elements.next;\n  let created;\n  const arrows = {};\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n    if (prev && next) {\n      if (!arrows.prev) {\n        const { id } = Elements.track;\n        setAttribute(prev, ARIA_CONTROLS, id);\n        setAttribute(next, ARIA_CONTROLS, id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? \"none\" : \"\");\n      }\n    }\n  }\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  function listen() {\n    const { go } = Controller;\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, \"click\", () => {\n      go(\">\", true);\n    });\n    bind(prev, \"click\", () => {\n      go(\"<\", true);\n    });\n  }\n  function createArrows() {\n    wrapper = create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(options.arrows === \"slider\" && Elements.slider || Splide2.root));\n  }\n  function createArrow(prev2) {\n    const arrow = `<button class=\"${classes.arrow} ${prev2 ? classes.prev : classes.next}\" type=\"button\"><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${options.arrowPath || PATH}\" />`;\n    return parseHtml(arrow);\n  }\n  function update() {\n    const index = Splide2.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n  return {\n    arrows,\n    mount,\n    destroy\n  };\n}\n\nconst INTERVAL_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-interval`;\n\nfunction Autoplay(Splide2, Components2, options) {\n  const { on, bind, emit } = EventInterface(Splide2);\n  const interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), update);\n  const { isPaused } = interval;\n  const { Elements } = Components2;\n  let hovered;\n  let focused;\n  let paused;\n  function mount() {\n    const { autoplay } = options;\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n      if (autoplay !== \"pause\") {\n        play();\n      }\n    }\n  }\n  function initButton(forPause) {\n    const prop = forPause ? \"pause\" : \"play\";\n    const button = Elements[prop];\n    if (button) {\n      setAttribute(button, ARIA_CONTROLS, Elements.track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[prop]);\n      bind(button, \"click\", forPause ? pause : play);\n    }\n  }\n  function listen() {\n    const { root } = Elements;\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", (e) => {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", (e) => {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    on(EVENT_MOVE, updateInterval);\n  }\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = paused = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  function pause(manual = true) {\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n    paused = manual;\n  }\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  function update(rate) {\n    const { bar } = Elements;\n    bar && style(bar, \"width\", `${rate * 100}%`);\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n  function updateInterval() {\n    const Slide = Components2.Slides.getAt(Splide2.index);\n    interval.set(Slide && +getAttribute(Slide.slide, INTERVAL_DATA_ATTRIBUTE) || options.interval);\n  }\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, (img, Slide) => {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  function destroy() {\n    apply(false);\n  }\n  function apply(cover) {\n    Components2.Slides.forEach((Slide) => {\n      const img = child(Slide.container || Slide.slide, \"img\");\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  function toggle(cover, img, Slide) {\n    Slide.style(\"background\", cover ? `center/cover no-repeat url(\"${img.src}\")` : \"\", true);\n    display(img, cover ? \"none\" : \"\");\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nconst BOUNCE_DIFF_THRESHOLD = 10;\nconst BOUNCE_DURATION = 600;\nconst FRICTION_FACTOR = 0.6;\nconst BASE_VELOCITY = 1.5;\nconst MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  const { on, emit } = EventInterface(Splide2);\n  const { Move } = Components2;\n  const { getPosition, getLimit, exceededLimit } = Move;\n  let interval;\n  let scrollCallback;\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  function scroll(destination, duration, callback, suppressConstraint) {\n    const start = getPosition();\n    let friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    scrollCallback = callback;\n    clear();\n    interval = RequestInterval(duration, onScrolled, (rate) => {\n      const position = getPosition();\n      const target = start + (destination - start) * easing(rate);\n      const diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n      if (Splide2.is(SLIDE) && !suppressConstraint && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(exceededLimit(false));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, null, true);\n  }\n  function onScrolled() {\n    const position = getPosition();\n    const index = Move.toIndex(position);\n    if (!between(index, 0, Splide2.length - 1)) {\n      Move.translate(Move.shift(position, index > 0), true);\n    }\n    scrollCallback && scrollCallback();\n    emit(EVENT_SCROLLED);\n  }\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  function easing(t) {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel\n  };\n}\n\nconst SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\n\nconst FRICTION = 5;\nconst LOG_INTERVAL = 200;\nconst POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nconst POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nconst POINTER_UP_EVENTS = \"touchend touchcancel mouseup\";\n\nfunction Drag(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Move, Scroll, Controller } = Components2;\n  const { track } = Components2.Elements;\n  const { resolve, orient } = Components2.Direction;\n  const { getPosition, exceededLimit } = Move;\n  let basePosition;\n  let baseEvent;\n  let prevBaseEvent;\n  let lastEvent;\n  let isFree;\n  let dragging;\n  let hasExceeded = false;\n  let clickPrevented;\n  let disabled;\n  let target;\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS);\n    bind(track, \"click\", onClick, { capture: true });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n  function init() {\n    const { drag } = options;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n  function onPointerDown(e) {\n    if (!disabled) {\n      const { noDrag } = options;\n      const isTouch = isTouchEvent(e);\n      const isDraggable = !noDrag || !matches(e.target, noDrag);\n      clickPrevented = false;\n      if (isDraggable && (isTouch || !e.button)) {\n        if (!Move.isBusy()) {\n          target = isTouch ? track : window;\n          prevBaseEvent = null;\n          lastEvent = null;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n  function onPointerMove(e) {\n    if (!lastEvent) {\n      emit(EVENT_DRAG);\n    }\n    lastEvent = e;\n    if (e.cancelable) {\n      const diff = coordOf(e) - coordOf(baseEvent);\n      if (dragging) {\n        Move.translate(basePosition + constrain(diff));\n        const expired = timeOf(e) - timeOf(baseEvent) > LOG_INTERVAL;\n        const exceeded = hasExceeded !== (hasExceeded = exceededLimit());\n        if (expired || exceeded) {\n          save(e);\n        }\n        emit(EVENT_DRAGGING);\n        clickPrevented = true;\n        prevent(e);\n      } else {\n        let { dragMinThreshold: thresholds } = options;\n        thresholds = isObject(thresholds) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\n        dragging = abs(diff) > (isTouchEvent(e) ? thresholds.touch : thresholds.mouse);\n        if (isSliderDirection()) {\n          prevent(e);\n        }\n      }\n    }\n  }\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    const { index } = Splide2;\n    if (lastEvent) {\n      if (dragging || e.cancelable && isSliderDirection()) {\n        const velocity = computeVelocity(e);\n        const destination = computeDestination(velocity);\n        if (isFree) {\n          Controller.scroll(destination);\n        } else if (Splide2.is(FADE)) {\n          Controller.go(index + orient(sign(velocity)));\n        } else {\n          Controller.go(Controller.toDest(destination), true);\n        }\n        prevent(e);\n      }\n      emit(EVENT_DRAGGED);\n    } else {\n      if (!isFree && getPosition() !== Move.toPosition(index)) {\n        Controller.go(index, true);\n      }\n    }\n    dragging = false;\n  }\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n  function isSliderDirection() {\n    const diffX = abs(coordOf(lastEvent) - coordOf(baseEvent));\n    const diffY = abs(coordOf(lastEvent, true) - coordOf(baseEvent, true));\n    return diffX > diffY;\n  }\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !hasExceeded) {\n      const base = baseEvent === lastEvent && prevBaseEvent || baseEvent;\n      const diffCoord = coordOf(lastEvent) - coordOf(base);\n      const diffTime = timeOf(e) - timeOf(base);\n      const isFlick = timeOf(e) - timeOf(lastEvent) < LOG_INTERVAL;\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n    return 0;\n  }\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.touches[0] : e)[`page${resolve(orthogonal ? \"Y\" : \"X\")}`];\n  }\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n  function constrain(diff) {\n    return diff / (hasExceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n  function isDragging() {\n    return dragging;\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  return {\n    mount,\n    disable,\n    isDragging\n  };\n}\n\nconst IE_ARROW_KEYS = [\"Left\", \"Right\", \"Up\", \"Down\"];\nconst KEYBOARD_EVENT = \"keydown\";\nfunction Keyboard(Splide2, Components2, options) {\n  const { on, bind, unbind } = EventInterface(Splide2);\n  const { root } = Splide2;\n  const { resolve } = Components2.Direction;\n  let target;\n  let disabled;\n  function mount() {\n    init();\n    on(EVENT_UPDATED, onUpdated);\n    on(EVENT_MOVE, onMove);\n  }\n  function init() {\n    const { keyboard } = options;\n    if (keyboard) {\n      if (keyboard === \"focused\") {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n      bind(target, KEYBOARD_EVENT, onKeydown);\n    }\n  }\n  function destroy() {\n    unbind(target, KEYBOARD_EVENT);\n    if (isHTMLElement(target)) {\n      removeAttribute(target, TAB_INDEX);\n    }\n  }\n  function disable(value) {\n    disabled = value;\n  }\n  function onMove() {\n    const _disabled = disabled;\n    disabled = true;\n    nextTick(() => {\n      disabled = _disabled;\n    });\n  }\n  function onUpdated() {\n    destroy();\n    init();\n  }\n  function onKeydown(e) {\n    if (!disabled) {\n      const { key } = e;\n      const normalizedKey = includes(IE_ARROW_KEYS, key) ? `Arrow${key}` : key;\n      if (normalizedKey === resolve(\"ArrowLeft\")) {\n        Splide2.go(\"<\");\n      } else if (normalizedKey === resolve(\"ArrowRight\")) {\n        Splide2.go(\">\");\n      }\n    }\n  }\n  return {\n    mount,\n    destroy,\n    disable\n  };\n}\n\nconst SRC_DATA_ATTRIBUTE = `${DATA_ATTRIBUTE}-lazy`;\nconst SRCSET_DATA_ATTRIBUTE = `${SRC_DATA_ATTRIBUTE}-srcset`;\nconst IMAGE_SELECTOR = `[${SRC_DATA_ATTRIBUTE}], [${SRCSET_DATA_ATTRIBUTE}]`;\n\nfunction LazyLoad(Splide2, Components2, options) {\n  const { on, off, bind, emit } = EventInterface(Splide2);\n  const isSequential = options.lazyLoad === \"sequential\";\n  let images = [];\n  let index = 0;\n  function mount() {\n    if (options.lazyLoad) {\n      init();\n      on(EVENT_REFRESH, refresh);\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED, EVENT_SCROLLED], observe);\n      }\n    }\n  }\n  function refresh() {\n    destroy();\n    init();\n  }\n  function init() {\n    Components2.Slides.forEach((_Slide) => {\n      queryAll(_Slide.slide, IMAGE_SELECTOR).forEach((_img) => {\n        const src = getAttribute(_img, SRC_DATA_ATTRIBUTE);\n        const srcset = getAttribute(_img, SRCSET_DATA_ATTRIBUTE);\n        if (src !== _img.src || srcset !== _img.srcset) {\n          const className = options.classes.spinner;\n          const parent = _img.parentElement;\n          const _spinner = child(parent, `.${className}`) || create(\"span\", className, parent);\n          setAttribute(_spinner, ROLE, \"presentation\");\n          images.push({ _img, _Slide, src, srcset, _spinner });\n          !_img.src && display(_img, \"none\");\n        }\n      });\n    });\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  function observe() {\n    images = images.filter((data) => {\n      const distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      if (data._Slide.isWithin(Splide2.index, distance)) {\n        return load(data);\n      }\n      return true;\n    });\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  function load(data) {\n    const { _img } = data;\n    addClass(data._Slide.slide, CLASS_LOADING);\n    bind(_img, \"load error\", (e) => {\n      onLoad(data, e.type === \"error\");\n    });\n    [\"src\", \"srcset\"].forEach((name) => {\n      if (data[name]) {\n        setAttribute(_img, name, data[name]);\n        removeAttribute(_img, name === \"src\" ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  function onLoad(data, error) {\n    const { _Slide } = data;\n    removeClass(_Slide.slide, CLASS_LOADING);\n    if (!error) {\n      remove(data._spinner);\n      display(data._img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, data._img, _Slide);\n      emit(EVENT_RESIZE);\n    }\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n  return {\n    mount,\n    destroy\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  const { on, emit, bind, unbind } = EventInterface(Splide2);\n  const { Slides, Elements, Controller } = Components2;\n  const { hasFocus, getIndex } = Controller;\n  const items = [];\n  let list;\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  function init() {\n    destroy();\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, { list, items }, getAt(Splide2.index));\n      update();\n    }\n  }\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach((item) => {\n        unbind(item.button, \"click\");\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  function createPagination() {\n    const { length } = Splide2;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === \"slider\" && Elements.slider || Elements.root;\n    const max = hasFocus() ? length : ceil(length / perPage);\n    list = create(\"ul\", classes.pagination, parent);\n    for (let i = 0; i < max; i++) {\n      const li = create(\"li\", null, list);\n      const button = create(\"button\", { class: classes.page, type: \"button\" }, li);\n      const controls = Slides.getIn(i).map((Slide) => Slide.slide.id);\n      const text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", onClick.bind(null, i));\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      items.push({ li, button, page: i });\n    }\n  }\n  function onClick(page) {\n    Controller.go(`>${page}`, true, () => {\n      const Slide = Slides.getAt(Controller.toIndex(page));\n      Slide && focus(Slide.slide);\n    });\n  }\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n  function update() {\n    const prev = getAt(getIndex(true));\n    const curr = getAt(getIndex());\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n    emit(EVENT_PAGINATION_UPDATED, { list, items }, prev, curr);\n  }\n  return {\n    items,\n    mount,\n    destroy,\n    getAt,\n    update\n  };\n}\n\nconst TRIGGER_KEYS = [\" \", \"Enter\", \"Spacebar\"];\nfunction Sync(Splide2, Components2, options) {\n  const { list } = Components2.Elements;\n  const events = [];\n  function mount() {\n    Splide2.splides.forEach((target) => {\n      !target.isParent && sync(target.splide);\n    });\n    if (options.isNavigation) {\n      navigate();\n    }\n  }\n  function destroy() {\n    removeAttribute(list, ALL_ATTRIBUTES);\n    events.forEach((event) => {\n      event.destroy();\n    });\n    empty(events);\n  }\n  function remount() {\n    destroy();\n    mount();\n  }\n  function sync(splide) {\n    [Splide2, splide].forEach((instance) => {\n      const event = EventInterface(instance);\n      const target = instance === Splide2 ? splide : Splide2;\n      event.on(EVENT_MOVE, (index, prev, dest) => {\n        target.go(target.is(LOOP) ? dest : index);\n      });\n      events.push(event);\n    });\n  }\n  function navigate() {\n    const event = EventInterface(Splide2);\n    const { on } = event;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    setAttribute(list, ROLE, \"menu\");\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n  function update() {\n    setAttribute(list, ARIA_ORIENTATION, options.direction !== TTB ? \"horizontal\" : null);\n  }\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, e.key)) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n  return {\n    mount,\n    destroy,\n    remount\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, SCROLL_LISTENER_OPTIONS);\n    }\n  }\n  function onWheel(e) {\n    if (e.cancelable) {\n      const { deltaY } = e;\n      if (deltaY) {\n        const backwards = deltaY < 0;\n        Splide2.go(backwards ? \"<\" : \">\");\n        shouldPrevent(backwards) && prevent(e);\n      }\n    }\n  }\n  function shouldPrevent(backwards) {\n    return !options.releaseWheel || Splide2.state.is(MOVING) || Components2.Controller.getAdjacent(backwards) !== -1;\n  }\n  return {\n    mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n\nconst I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\"\n};\n\nconst DEFAULTS = {\n  type: \"slide\",\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  cloneStatus: true,\n  arrows: true,\n  pagination: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  keyboard: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  slideFocus: true,\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  classes: CLASSES,\n  i18n: I18N\n};\n\nfunction Fade(Splide2, Components2, options) {\n  const { on } = EventInterface(Splide2);\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], () => {\n      nextTick(() => {\n        Components2.Slides.style(\"transition\", `opacity ${options.speed}ms ${options.easing}`);\n      });\n    });\n  }\n  function start(index, done) {\n    const { track } = Components2.Elements;\n    style(track, \"height\", unit(rect(track).height));\n    nextTick(() => {\n      done();\n      style(track, \"height\", \"\");\n    });\n  }\n  return {\n    mount,\n    start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  const { bind } = EventInterface(Splide2);\n  const { Move, Controller } = Components2;\n  const { list } = Components2.Elements;\n  let endCallback;\n  function mount() {\n    bind(list, \"transitionend\", (e) => {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  function start(index, done) {\n    const destination = Move.toPosition(index, true);\n    const position = Move.getPosition();\n    const speed = getSpeed(index);\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(`transform ${speed}ms ${options.easing}`);\n      Move.translate(destination, true);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  function cancel() {\n    apply(\"\");\n  }\n  function getSpeed(index) {\n    const { rewindSpeed } = options;\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      const prev = Controller.getIndex(true);\n      const end = Controller.getEnd();\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n    return options.speed;\n  }\n  function apply(transition) {\n    style(list, \"transition\", transition);\n  }\n  return {\n    mount,\n    start,\n    cancel\n  };\n}\n\nconst _Splide = class {\n  constructor(target, options) {\n    this.event = EventBus();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._options = {};\n    this._Extensions = {};\n    const root = isString(target) ? query(document, target) : target;\n    assert(root, `${root} is invalid.`);\n    this.root = root;\n    merge(DEFAULTS, _Splide.defaults);\n    merge(merge(this._options, DEFAULTS), options || {});\n  }\n  mount(Extensions, Transition) {\n    const { state, Components: Components2 } = this;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._Components = Components2;\n    this._Transition = Transition || this._Transition || (this.is(FADE) ? Fade : Slide);\n    this._Extensions = Extensions || this._Extensions;\n    const Constructors = assign({}, ComponentConstructors, this._Extensions, { Transition: this._Transition });\n    forOwn(Constructors, (Component, key) => {\n      const component = Component(this, Components2, this._options);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, (component) => {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  sync(splide) {\n    this.splides.push({ splide });\n    splide.splides.push({ splide: this, isParent: true });\n    if (this.state.is(IDLE)) {\n      this._Components.Sync.remount();\n      splide.Components.Sync.remount();\n    }\n    return this;\n  }\n  go(control) {\n    this._Components.Controller.go(control);\n    return this;\n  }\n  on(events, callback) {\n    this.event.on(events, callback, null, DEFAULT_USER_EVENT_PRIORITY);\n    return this;\n  }\n  off(events) {\n    this.event.off(events);\n    return this;\n  }\n  emit(event) {\n    this.event.emit(event, ...slice(arguments, 1));\n    return this;\n  }\n  add(slides, index) {\n    this._Components.Slides.add(slides, index);\n    return this;\n  }\n  remove(matcher) {\n    this._Components.Slides.remove(matcher);\n    return this;\n  }\n  is(type) {\n    return this._options.type === type;\n  }\n  refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  destroy(completely = true) {\n    const { event, state } = this;\n    if (state.is(CREATED)) {\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this._Components, (component) => {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n    return this;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    const { _options } = this;\n    merge(_options, options);\n    if (!this.state.is(CREATED)) {\n      this.emit(EVENT_UPDATED, _options);\n    }\n  }\n  get length() {\n    return this._Components.Slides.getLength(true);\n  }\n  get index() {\n    return this._Components.Controller.getIndex();\n  }\n};\nlet Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\n\nconst CLASS_RENDERED = \"is-rendered\";\n\nconst RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nclass Style {\n  constructor(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n  rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    const selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    const styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  }\n  build() {\n    let css = \"\";\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n    Object.keys(this.styles).sort((n, m) => this.options.mediaQuery === \"min\" ? +n - +m : +m - +n).forEach((breakpoint) => {\n      if (breakpoint !== \"default\") {\n        css += `@media screen and (max-width: ${breakpoint}px) {`;\n        css += this.buildSelectors(this.styles[breakpoint]);\n        css += `}`;\n      }\n    });\n    return css;\n  }\n  buildSelectors(selectors) {\n    let css = \"\";\n    forOwn(selectors, (styles, selector) => {\n      selector = `#${this.id} ${selector}`.trim();\n      css += `${selector} {`;\n      forOwn(styles, (value, prop) => {\n        if (value || value === 0) {\n          css += `${prop}: ${value};`;\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  }\n}\n\nclass SplideRenderer {\n  constructor(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n  static clean(splide) {\n    const { on } = EventInterface(splide);\n    const { root } = splide;\n    const clones = queryAll(root, `.${CLASS_CLONE}`);\n    on(EVENT_MOUNTED, () => {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  }\n  init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  }\n  initSlides() {\n    push(this.slides, this.contents.map((content, index) => {\n      content = isString(content) ? { html: content } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n      this.cover(content);\n      const classes = `${this.options.classes.slide} ${index === 0 ? CLASS_ACTIVE : \"\"}`;\n      assign(content.attrs, {\n        class: `${classes} ${content.attrs.class || \"\"}`.trim(),\n        style: this.buildStyles(content.styles)\n      });\n      return content;\n    }));\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  }\n  registerRootStyles() {\n    this.breakpoints.forEach(([width, options]) => {\n      this.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  }\n  registerTrackStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_TRACK}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, this.resolve(\"paddingLeft\"), this.cssPadding(options, false), width);\n      Style2.rule(selector, this.resolve(\"paddingRight\"), this.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", this.cssTrackHeight(options), width);\n    });\n  }\n  registerListStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_LIST}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"transform\", this.buildTranslate(options), width);\n      if (!this.cssSlideHeight(options)) {\n        Style2.rule(selector, \"aspect-ratio\", this.cssAspectRatio(options), width);\n      }\n    });\n  }\n  registerSlideStyles() {\n    const { Style: Style2 } = this;\n    const selector = `.${CLASS_SLIDE}`;\n    this.breakpoints.forEach(([width, options]) => {\n      Style2.rule(selector, \"width\", this.cssSlideWidth(options), width);\n      Style2.rule(selector, \"height\", this.cssSlideHeight(options) || \"100%\", width);\n      Style2.rule(selector, this.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      Style2.rule(`${selector} > img`, \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  }\n  buildTranslate(options) {\n    const { resolve, orient } = this.Direction;\n    const values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push(...this.cssOffsetCenter(options));\n    }\n    return values.filter(Boolean).map((value) => `translate${resolve(\"X\")}(${value})`).join(\" \");\n  }\n  cssOffsetClones(options) {\n    const { resolve, orient } = this.Direction;\n    const cloneCount = this.getCloneCount();\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n    const percent = 100 * cloneCount / options.perPage;\n    return `${orient(percent)}%`;\n  }\n  cssOffsetCenter(options) {\n    const { resolve, orient } = this.Direction;\n    if (this.isFixedWidth(options)) {\n      const { value, unit: unit2 } = this.parseCssValue(options[resolve(\"fixedWidth\")]);\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n    const values = [];\n    const { perPage, gap } = options;\n    values.push(`${orient(50 / perPage)}%`);\n    if (gap) {\n      const { value, unit: unit2 } = this.parseCssValue(gap);\n      const gapOffset = (value / perPage - value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), unit2));\n    }\n    return values;\n  }\n  cssOffsetGaps(options) {\n    const cloneCount = this.getCloneCount();\n    if (cloneCount && options.gap) {\n      const { orient } = this.Direction;\n      const { value, unit: unit2 } = this.parseCssValue(options.gap);\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n      const { perPage } = options;\n      const gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n    return \"\";\n  }\n  resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  }\n  cssPadding(options, right) {\n    const { padding } = options;\n    const prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n  cssTrackHeight(options) {\n    let height = \"\";\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = `calc(${height} - ${this.cssPadding(options, false)} - ${this.cssPadding(options, true)})`;\n    }\n    return height;\n  }\n  cssHeight(options) {\n    return unit(options.height);\n  }\n  cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  }\n  cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  }\n  cssSlideSize(options) {\n    const gap = unit(options.gap);\n    return `calc((100%${gap && ` + ${gap}`})/${options.perPage || 1}${gap && ` - ${gap}`})`;\n  }\n  cssAspectRatio(options) {\n    const { heightRatio } = options;\n    return heightRatio ? `${1 / heightRatio}` : \"\";\n  }\n  buildCssValue(value, unit2) {\n    return `${value}${unit2}`;\n  }\n  parseCssValue(value) {\n    if (isString(value)) {\n      const number = parseFloat(value) || 0;\n      const unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return { value: number, unit: unit2 };\n    }\n    return { value, unit: \"px\" };\n  }\n  parseBreakpoints() {\n    const { breakpoints } = this.options;\n    this.breakpoints.push([\"default\", this.options]);\n    if (breakpoints) {\n      forOwn(breakpoints, (options, width) => {\n        this.breakpoints.push([width, merge(merge({}, this.options), options)]);\n      });\n    }\n  }\n  isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  }\n  isLoop() {\n    return this.options.type === LOOP;\n  }\n  isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n    return false;\n  }\n  isVertical() {\n    return this.options.direction === TTB;\n  }\n  buildClasses() {\n    const { options } = this;\n    return [\n      CLASS_ROOT,\n      `${CLASS_ROOT}--${options.type}`,\n      `${CLASS_ROOT}--${options.direction}`,\n      options.drag && `${CLASS_ROOT}--draggable`,\n      options.isNavigation && `${CLASS_ROOT}--nav`,\n      CLASS_ACTIVE,\n      !this.config.hidden && CLASS_RENDERED\n    ].filter(Boolean).join(\" \");\n  }\n  buildAttrs(attrs) {\n    let attr = \"\";\n    forOwn(attrs, (value, key) => {\n      attr += value ? ` ${camelToKebab(key)}=\"${value}\"` : \"\";\n    });\n    return attr.trim();\n  }\n  buildStyles(styles) {\n    let style = \"\";\n    forOwn(styles, (value, key) => {\n      style += ` ${camelToKebab(key)}:${value};`;\n    });\n    return style.trim();\n  }\n  renderSlides() {\n    const { slideTag: tag } = this.config;\n    return this.slides.map((content) => {\n      return `<${tag} ${this.buildAttrs(content.attrs)}>${content.html || \"\"}</${tag}>`;\n    }).join(\"\");\n  }\n  cover(content) {\n    const { styles, html = \"\" } = content;\n    if (this.options.cover && !this.options.lazyLoad) {\n      const src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n      if (src && src[2]) {\n        styles.background = `center/cover no-repeat url('${src[2]}')`;\n      }\n    }\n  }\n  generateClones(contents) {\n    const { classes } = this.options;\n    const count = this.getCloneCount();\n    const slides = contents.slice();\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach((content, index) => {\n      const attrs = assign({}, content.attrs, { class: `${content.attrs.class} ${classes.clone}` });\n      const clone = assign({}, content, { attrs });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  }\n  getCloneCount() {\n    if (this.isLoop()) {\n      const { options } = this;\n      if (options.clones) {\n        return options.clones;\n      }\n      const perPage = max(...this.breakpoints.map(([, options2]) => options2.perPage));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n    return 0;\n  }\n  renderArrows() {\n    let html = \"\";\n    html += `<div class=\"${this.options.classes.arrows}\">`;\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += `</div>`;\n    return html;\n  }\n  renderArrow(prev) {\n    const { classes, i18n } = this.options;\n    const attrs = {\n      class: `${classes.arrow} ${prev ? classes.prev : classes.next}`,\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return `<button ${this.buildAttrs(attrs)}><svg xmlns=\"${XML_NAME_SPACE}\" viewBox=\"0 0 ${SIZE} ${SIZE}\" width=\"${SIZE}\" height=\"${SIZE}\"><path d=\"${this.options.arrowPath || PATH}\" /></svg></button>`;\n  }\n  html() {\n    const { rootClass, listTag, arrows, beforeTrack, afterTrack, slider, beforeSlider, afterSlider } = this.config;\n    let html = \"\";\n    html += `<div id=\"${this.id}\" class=\"${this.buildClasses()} ${rootClass || \"\"}\">`;\n    html += `<style>${this.Style.build()}</style>`;\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += `<div class=\"splide__slider\">`;\n    }\n    html += beforeTrack || \"\";\n    if (arrows) {\n      html += this.renderArrows();\n    }\n    html += `<div class=\"splide__track\">`;\n    html += `<${listTag} class=\"splide__list\">`;\n    html += this.renderSlides();\n    html += `</${listTag}>`;\n    html += `</div>`;\n    html += afterTrack || \"\";\n    if (slider) {\n      html += `</div>`;\n      html += afterSlider || \"\";\n    }\n    html += `</div>`;\n    return html;\n  }\n}\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SHIFTED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, SplideRenderer, State, Throttle, Splide as default };\n","export const CLASS_VIDEO             = 'splide__video';\nexport const CLASS_VIDEO_WRAPPER     = `${ CLASS_VIDEO }__wrapper`;\nexport const CLASS_VIDEO_PLAY_BUTTON = `${ CLASS_VIDEO }__play`;\nexport const CLASS_PLAYING           = 'is-playing';\nexport const CLASS_VIDEO_DISABLED    = 'is-video-disabled';\n\n","export const YOUTUBE_DATA_ATTRIBUTE = 'data-splide-youtube';\r\nexport const VIMEO_DATA_ATTRIBUTE = 'data-splide-vimeo';\r\nexport const HTML_VIDEO__DATA_ATTRIBUTE = 'data-splide-html-video';\r\n","import { VideoOptions } from '../types/options';\n\n\n/**\n * Default options.\n * Some parameters must be explicitly set to `false` for vimeo options.\n */\nexport const DEFAULTS: VideoOptions = {\n  hideControls: false,\n  loop        : false,\n  mute        : false,\n  volume      : 0.2,\n};\n","export const EVENT_VIDEO_PLAY  = 'video:play';\r\nexport const EVENT_VIDEO_PAUSE = 'video:pause';\r\nexport const EVENT_VIDEO_ENDED = 'video:ended';\r\nexport const EVENT_VIDEO_CLICK = 'video:click';\r\n","/**\r\n * The player is not initialized.\r\n */\r\nexport const NOT_INITIALIZED = 1;\r\n\r\n/**\r\n * The player is not initialized.\r\n */\r\nexport const INITIALIZING = 2;\r\n\r\n/**\r\n * The player is not initialized.\r\n */\r\nexport const INITIALIZED = 3;\r\n\r\n/**\r\n * Requested to play a video while creating a player.\r\n */\r\nexport const PENDING_PLAY = 4;\r\n\r\n/**\r\n * Ready to play a video.\r\n */\r\nexport const IDLE = 5;\r\n\r\n/**\r\n * Loading a video.\r\n */\r\nexport const LOADING = 6;\r\n\r\n/**\r\n * Play request has been sent to the player, but it is aborted later.\r\n */\r\nexport const PLAY_REQUEST_ABORTED = 7;\r\n\r\n/**\r\n * Now playing a video\r\n */\r\nexport const PLAYING = 8;\r\n\r\n/**\r\n * Any error has been occurred.\r\n */\r\nexport const ERROR = 9;\r\n","import { EventBus, EventBusCallback, State } from '@splidejs/splide';\r\nimport { error } from '@splidejs/splide/src/js/utils';\r\nimport {\r\n  ERROR,\r\n  IDLE,\r\n  INITIALIZED,\r\n  INITIALIZING,\r\n  LOADING,\r\n  NOT_INITIALIZED,\r\n  PENDING_PLAY,\r\n  PLAY_REQUEST_ABORTED,\r\n  PLAYING,\r\n} from '../constants/states';\r\nimport { VideoPlayerInterface } from '../types/general';\r\nimport { VideoOptions } from '../types/options';\r\n\r\n\r\n/**\r\n * The abstract class for implementing a video player.\r\n *\r\n * @since 0.5.0\r\n */\r\nexport abstract class AbstractVideoPlayer<T> implements VideoPlayerInterface {\r\n  /**\r\n   * The target element where the player is mounted.\r\n   */\r\n  protected readonly target: HTMLElement;\r\n\r\n  /**\r\n   * The video ID or the URL itself.\r\n   */\r\n  protected videoId: string;\r\n\r\n  /**\r\n   * Video options.\r\n   */\r\n  protected readonly options: VideoOptions;\r\n\r\n  /**\r\n   * The state object.\r\n   */\r\n  protected state = State( NOT_INITIALIZED );\r\n\r\n  /**\r\n   * The EventBus object.\r\n   */\r\n  protected event = EventBus();\r\n\r\n  /**\r\n   * The player instance.\r\n   */\r\n  protected player: T;\r\n\r\n  /**\r\n   * The VideoPlayer constructor.\r\n   *\r\n   * @param target  - A target element where the player is mounted.\r\n   * @param videoId - A video ID or an URL itself.\r\n   * @param options - Optional. Options.\r\n   */\r\n  protected constructor( target: HTMLElement, videoId: string, options?: VideoOptions ) {\r\n    this.target  = target;\r\n    this.videoId = videoId;\r\n    this.options = options || {};\r\n\r\n    this.onPlay        = this.onPlay.bind( this );\r\n    this.onPause       = this.onPause.bind( this );\r\n    this.onEnded       = this.onEnded.bind( this );\r\n    this.onPlayerReady = this.onPlayerReady.bind( this );\r\n    this.onError       = this.onError.bind( this );\r\n  }\r\n\r\n  /**\r\n   * Creates a player.\r\n   *\r\n   * @param videoId - A video ID.\r\n   *\r\n   * @return A VideoPlayerInterface object.\r\n   */\r\n  protected abstract createPlayer( videoId: string ): T;\r\n\r\n  /**\r\n   * Starts the video.\r\n   */\r\n  protected abstract playVideo(): void;\r\n\r\n  /**\r\n   * Pauses the video.\r\n   */\r\n  protected abstract pauseVideo(): void;\r\n\r\n  /**\r\n   * Attaches a handler to a specified event or events.\r\n   *\r\n   * @param events   - An event or events to attach a handler to.\r\n   * @param callback - A callback function.\r\n   */\r\n  on( events: string | string[], callback: EventBusCallback ): void {\r\n    this.event.on( events, callback );\r\n  }\r\n\r\n  /**\r\n   * Requests to play the video.\r\n   */\r\n  play(): void {\r\n    const { state } = this;\r\n\r\n    if ( state.is( ERROR ) ) {\r\n      error( 'Can not play this video.' );\r\n      return;\r\n    }\r\n\r\n    this.event.emit( 'play' );\r\n\r\n    if ( state.is( INITIALIZING ) ) {\r\n      return state.set( PENDING_PLAY );\r\n    }\r\n\r\n    if ( state.is( INITIALIZED ) ) {\r\n      this.player = this.createPlayer( this.videoId );\r\n      return state.set( PENDING_PLAY );\r\n    }\r\n\r\n    if ( state.is( [ PENDING_PLAY, PLAYING ] ) ) {\r\n      return;\r\n    }\r\n\r\n    if ( state.is( IDLE ) ) {\r\n      state.set( LOADING );\r\n      this.playVideo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Requests to pause the video.\r\n   */\r\n  pause(): void {\r\n    const { state } = this;\r\n\r\n    if ( state.is( ERROR ) ) {\r\n      return;\r\n    }\r\n\r\n    this.event.emit( 'pause' );\r\n\r\n    if ( state.is( PENDING_PLAY ) ) {\r\n      return state.set( INITIALIZING );\r\n    }\r\n\r\n    if ( state.is( LOADING ) ) {\r\n      return state.set( PLAY_REQUEST_ABORTED );\r\n    }\r\n\r\n    if ( state.is( PLAYING ) ) {\r\n      this.pauseVideo();\r\n      this.state.set( IDLE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance.\r\n   */\r\n  destroy(): void {\r\n    this.event.destroy();\r\n  }\r\n\r\n  /**\r\n   * Called when the player is created.\r\n   */\r\n  protected onPlayerReady(): void {\r\n    const { state } = this;\r\n    const isPending = state.is( PENDING_PLAY );\r\n\r\n    state.set( IDLE );\r\n\r\n    if ( isPending ) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the video starts.\r\n   */\r\n  protected onPlay(): void {\r\n    const { state } = this;\r\n    const aborted = state.is( PLAY_REQUEST_ABORTED );\r\n\r\n    state.set( PLAYING );\r\n\r\n    if ( aborted ) {\r\n      this.pause();\r\n    } else {\r\n      this.event.emit( 'played' );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the video is paused.\r\n   */\r\n  protected onPause(): void {\r\n    this.state.set( IDLE );\r\n    this.event.emit( 'paused' );\r\n  }\r\n\r\n  /**\r\n   * Called when the video is ended.\r\n   */\r\n  protected onEnded(): void {\r\n    this.state.set( IDLE );\r\n    this.event.emit( 'ended' );\r\n  }\r\n\r\n  /**\r\n   * Called when an error occurs.\r\n   */\r\n  protected onError(): void {\r\n    this.state.set( ERROR );\r\n  }\r\n}\r\n","import { create, clamp, assign } from '@splidejs/splide/src/js/utils';\r\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\r\nimport { IDLE, INITIALIZED, PLAY_REQUEST_ABORTED } from '../../constants/states';\r\nimport { VideoOptions } from '../../types/options';\r\n\r\n\r\n/**\r\n * The wrapper class for the HTML video player.\r\n *\r\n * @since 0.5.0\r\n */\r\nexport class HTMLVideoPlayer extends AbstractVideoPlayer<HTMLVideoElement> {\r\n  /**\r\n   * The HTMLVideoPlayer constructor.\r\n   *\r\n   * @param target  - A target element where the player is mounted.\r\n   * @param videoId - A video ID or an URL itself.\r\n   * @param options - Options.\r\n   */\r\n  constructor( target: HTMLElement, videoId: string, options: VideoOptions = {} ) {\r\n    super( target, videoId, options );\r\n    this.state.set( INITIALIZED );\r\n  }\r\n\r\n  /**\r\n   * Creates a player.\r\n   *\r\n   * @param videoId - Optional. A video ID or an URL.\r\n   *\r\n   * @return A Vimeo player instance.\r\n   */\r\n  protected createPlayer( videoId: string ): HTMLVideoElement {\r\n    const { options, options: { playerOptions = {} } } = this;\r\n    const player = create( 'video', { src: videoId }, this.target );\r\n    const on     = player.addEventListener.bind( player );\r\n\r\n    assign( player, {\r\n      controls: ! options.hideControls,\r\n      loop    : options.loop,\r\n      volume  : clamp( options.volume, 0, 1 ),\r\n      muted   : options.mute,\r\n    }, playerOptions.htmlVideo || {} );\r\n\r\n    on( 'play', this.onPlay );\r\n    on( 'pause', this.onPause );\r\n    on( 'ended', this.onEnded );\r\n    on( 'loadeddata', this.onPlayerReady );\r\n    on( 'error', this.onError );\r\n\r\n    return player;\r\n  }\r\n\r\n  /**\r\n   * Starts the video.\r\n   */\r\n  protected playVideo(): void {\r\n    this.player.play().catch( () => {\r\n      if ( this.state.is( PLAY_REQUEST_ABORTED ) ) {\r\n        this.state.set( IDLE );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Pauses the video.\r\n   */\r\n  protected pauseVideo(): void {\r\n    this.player.pause();\r\n  }\r\n\r\n  /**\r\n   * Destroys the player.\r\n   */\r\n  destroy(): void {\r\n    super.destroy();\r\n\r\n    const { player } = this;\r\n    const off = player.addEventListener.bind( player );\r\n\r\n    off( 'play', this.onPlay );\r\n    off( 'pause', this.onPause );\r\n    off( 'ended', this.onEnded );\r\n    off( 'loadeddata', this.onPlayerReady );\r\n  }\r\n}\r\n","/*! @vimeo/player v2.16.2 | (c) 2021 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nvar isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\n\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\n\nif (!isNode && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.4 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2021 polygonplanet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n(function (self) {\n\n  if (self.WeakMap) {\n    return;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var hasDefine = Object.defineProperty && function () {\n    try {\n      // Avoid IE8's broken Object.defineProperty\n      return Object.defineProperty({}, 'x', {\n        value: 1\n      }).x === 1;\n    } catch (e) {}\n  }();\n\n  var defineProperty = function (object, name, value) {\n    if (hasDefine) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n\n      defineProperty(this, '_id', genId('_WeakMap')); // ECMA-262 23.3.1.1 WeakMap([iterable])\n\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    } // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n\n\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n\n      if (!isObject(key)) {\n        return void 0;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n\n      return void 0;\n    }); // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\n\nvar npo_src = createCommonjsModule(function (module) {\n/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n(function UMD(name, context, definition) {\n  // special form of UMD for polyfilling across evironments\n  context[name] = context[name] || definition();\n\n  if ( module.exports) {\n    module.exports = context[name];\n  }\n})(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n\n  var builtInProp,\n      cycle,\n      scheduling_queue,\n      ToString = Object.prototype.toString,\n      timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n    return setImmediate(fn);\n  } : setTimeout; // dammit, IE8.\n\n  try {\n    Object.defineProperty({}, \"x\", {});\n\n    builtInProp = function builtInProp(obj, name, val, config) {\n      return Object.defineProperty(obj, name, {\n        value: val,\n        writable: true,\n        configurable: config !== false\n      });\n    };\n  } catch (err) {\n    builtInProp = function builtInProp(obj, name, val) {\n      obj[name] = val;\n      return obj;\n    };\n  } // Note: using a queue instead of array for efficiency\n\n\n  scheduling_queue = function Queue() {\n    var first, last, item;\n\n    function Item(fn, self) {\n      this.fn = fn;\n      this.self = self;\n      this.next = void 0;\n    }\n\n    return {\n      add: function add(fn, self) {\n        item = new Item(fn, self);\n\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n\n        last = item;\n        item = void 0;\n      },\n      drain: function drain() {\n        var f = first;\n        first = last = cycle = void 0;\n\n        while (f) {\n          f.fn.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  }();\n\n  function schedule(fn, self) {\n    scheduling_queue.add(fn, self);\n\n    if (!cycle) {\n      cycle = timer(scheduling_queue.drain);\n    }\n  } // promise duck typing\n\n\n  function isThenable(o) {\n    var _then,\n        o_type = typeof o;\n\n    if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n      _then = o.then;\n    }\n\n    return typeof _then == \"function\" ? _then : false;\n  }\n\n  function notify() {\n    for (var i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n\n    this.chain.length = 0;\n  } // NOTE: This is a separate function to isolate\n  // the `try..catch` so that other code can be\n  // optimized better\n\n\n  function notifyIsolated(self, cb, chain) {\n    var ret, _then;\n\n    try {\n      if (cb === false) {\n        chain.reject(self.msg);\n      } else {\n        if (cb === true) {\n          ret = self.msg;\n        } else {\n          ret = cb.call(void 0, self.msg);\n        }\n\n        if (ret === chain.promise) {\n          chain.reject(TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) {\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n\n  function resolve(msg) {\n    var _then,\n        self = this; // already triggered?\n\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    try {\n      if (_then = isThenable(msg)) {\n        schedule(function () {\n          var def_wrapper = new MakeDefWrapper(self);\n\n          try {\n            _then.call(msg, function $resolve$() {\n              resolve.apply(def_wrapper, arguments);\n            }, function $reject$() {\n              reject.apply(def_wrapper, arguments);\n            });\n          } catch (err) {\n            reject.call(def_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDefWrapper(self), err);\n    }\n  }\n\n  function reject(msg) {\n    var self = this; // already triggered?\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    self.msg = msg;\n    self.state = 2;\n\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (var idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n\n  function MakeDefWrapper(self) {\n    this.def = self;\n    this.triggered = false;\n  }\n\n  function MakeDef(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg = void 0;\n  }\n\n  function Promise(executor) {\n    if (typeof executor != \"function\") {\n      throw TypeError(\"Not a function\");\n    }\n\n    if (this.__NPO__ !== 0) {\n      throw TypeError(\"Not a promise\");\n    } // instance shadowing the inherited \"brand\"\n    // to signal an already \"initialized\" promise\n\n\n    this.__NPO__ = 1;\n    var def = new MakeDef(this);\n\n    this[\"then\"] = function then(success, failure) {\n      var o = {\n        success: typeof success == \"function\" ? success : true,\n        failure: typeof failure == \"function\" ? failure : false\n      }; // Note: `then(..)` itself can be borrowed to be used against\n      // a different promise constructor for making the chained promise,\n      // by substituting a different `this` binding.\n\n      o.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n\n        o.resolve = resolve;\n        o.reject = reject;\n      });\n      def.chain.push(o);\n\n      if (def.state !== 0) {\n        schedule(notify, def);\n      }\n\n      return o.promise;\n    };\n\n    this[\"catch\"] = function $catch$(failure) {\n      return this.then(void 0, failure);\n    };\n\n    try {\n      executor.call(void 0, function publicResolve(msg) {\n        resolve.call(def, msg);\n      }, function publicReject(msg) {\n        reject.call(def, msg);\n      });\n    } catch (err) {\n      reject.call(def, err);\n    }\n  }\n\n  var PromisePrototype = builtInProp({}, \"constructor\", Promise,\n  /*configurable=*/\n  false); // Note: Android 4 cannot use `Object.defineProperty(..)` here\n\n  Promise.prototype = PromisePrototype; // built-in \"brand\" to signal an \"uninitialized\" promise\n\n  builtInProp(PromisePrototype, \"__NPO__\", 0,\n  /*configurable=*/\n  false);\n  builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n    var Constructor = this; // spec mandated checks\n    // note: best \"isPromise\" check that's practical for now\n\n    if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n      return msg;\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      resolve(msg);\n    });\n  });\n  builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      reject(msg);\n    });\n  });\n  builtInProp(Promise, \"all\", function Promise$all(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      var len = arr.length,\n          msgs = Array(len),\n          count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  builtInProp(Promise, \"race\", function Promise$race(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n  return Promise;\n});\n});\n\n/**\n * @module lib/callbacks\n */\nvar callbackMap = new WeakMap();\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\n\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\n\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\n\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!playerCallbacks[name]) {\n    return true;\n  } // If no callback is passed, remove all callbacks for the event\n\n\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n\n  var index = playerCallbacks[name].indexOf(callback);\n\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\n\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\n\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['autopause', 'autoplay', 'background', 'byline', 'color', 'controls', 'dnt', 'height', 'id', 'keyboard', 'loop', 'maxheight', 'maxwidth', 'muted', 'playsinline', 'portrait', 'responsive', 'speed', 'texttrack', 'title', 'transparent', 'url', 'width'];\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\n\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n\n    return params;\n  }, defaults);\n}\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\n\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\n\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n\n    var url = \"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(videoUrl));\n\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n\n      try {\n        var json = JSON.parse(xhr.responseText); // Check api response for 403 on oembed\n\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n\n    xhr.send();\n  });\n}\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n\n  window.VimeoPlayerResizeEmbeds_ = true;\n\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    } // 'spacechange' is fired only on embeds with cards\n\n\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n\n    var iframes = parent.querySelectorAll('iframe');\n\n    for (var i = 0; i < iframes.length; i++) {\n      if (iframes[i].contentWindow !== event.source) {\n        continue;\n      } // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n\n\n      var space = iframes[i].parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n      break;\n    }\n  };\n\n  window.addEventListener('message', onMessage);\n}\n\n/**\n * @module lib/postmessage\n */\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\n\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n\n  return data;\n}\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {object} params The parameters to send to the player.\n * @return {void}\n */\n\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n\n  var message = {\n    method: method\n  };\n\n  if (params !== undefined) {\n    message.value = params;\n  } // IE 8 and 9 do not support passing messages, so stringify them\n\n\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\n\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n\n      callback.resolve(param);\n    } catch (e) {// empty\n    }\n  });\n}\n\n/* MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nTerms */\nfunction initializeScreenfull() {\n  var fn = function () {\n    var val;\n    var fnMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // New WebKit\n    ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit\n    ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n\n    for (; i < l; i++) {\n      val = fnMap[i];\n\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n\n        return ret;\n      }\n    }\n\n    return false;\n  }();\n\n  var eventNameMap = {\n    fullscreenchange: fn.fullscreenchange,\n    fullscreenerror: fn.fullscreenerror\n  };\n  var screenfull = {\n    request: function request(element) {\n      return new Promise(function (resolve, reject) {\n        var onFullScreenEntered = function onFullScreenEntered() {\n          screenfull.off('fullscreenchange', onFullScreenEntered);\n          resolve();\n        };\n\n        screenfull.on('fullscreenchange', onFullScreenEntered);\n        element = element || document.documentElement;\n        var returnPromise = element[fn.requestFullscreen]();\n\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenEntered).catch(reject);\n        }\n      });\n    },\n    exit: function exit() {\n      return new Promise(function (resolve, reject) {\n        if (!screenfull.isFullscreen) {\n          resolve();\n          return;\n        }\n\n        var onFullScreenExit = function onFullScreenExit() {\n          screenfull.off('fullscreenchange', onFullScreenExit);\n          resolve();\n        };\n\n        screenfull.on('fullscreenchange', onFullScreenExit);\n        var returnPromise = document[fn.exitFullscreen]();\n\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenExit).catch(reject);\n        }\n      });\n    },\n    on: function on(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.addEventListener(eventName, callback);\n      }\n    },\n    off: function off(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.removeEventListener(eventName, callback);\n      }\n    }\n  };\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function get() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function get() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get: function get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n  return screenfull;\n}\n\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\nvar screenfull = {};\n\nvar Player = /*#__PURE__*/function () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Player);\n\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n\n      element = element[0];\n    } // Find an element by ID\n\n\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    } // Not an element!\n\n\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    } // Already initialized an embed in this div, so grab the iframe\n\n\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n\n      if (iframe) {\n        element = iframe;\n      }\n    } // iframe url is not a Vimeo url\n\n\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    } // If there is already a player object in the map, return that\n\n\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n\n    this._window = element.ownerDocument.defaultView;\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      _this._onMessage = function (event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n\n          resolve();\n          return;\n        }\n\n        processData(_this, data);\n      };\n\n      _this._window.addEventListener('message', _this._onMessage);\n\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element); // Overwrite element with the new iframe,\n          // but store reference to the original element\n\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    }); // Store a copy of this Player in the map\n\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this); // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n\n    if (screenfull.isEnabled) {\n      var exitFullscreen = function exitFullscreen() {\n        return screenfull.exit();\n      };\n\n      this.fullscreenchangeHandler = function () {\n        if (screenfull.isFullscreen) {\n          storeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        } else {\n          removeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        } // eslint-disable-next-line\n\n\n        _this.ready().then(function () {\n          postMessage(_this, 'fullscreenchange', screenfull.isFullscreen);\n        });\n      };\n\n      screenfull.on('fullscreenchange', this.fullscreenchangeHandler);\n    }\n\n    return this;\n  }\n  /**\n   * Get a promise for a method.\n   *\n   * @param {string} name The API method to call.\n   * @param {Object} [args={}] Arguments to send via postMessage.\n   * @return {Promise}\n   */\n\n\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value: function callMethod(name) {\n      var _this2 = this;\n\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get'); // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        } // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback); // If there are no callbacks left, remove the listener\n\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id or url successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|string|object} options The id of the video, the url of the video, or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n    /**\n     * Request that the player enters fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"requestFullscreen\",\n    value: function requestFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.request(this.element);\n      }\n\n      return this.callMethod('requestFullscreen');\n    }\n    /**\n     * Request that the player exits fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"exitFullscreen\",\n    value: function exitFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.exit();\n      }\n\n      return this.callMethod('exitFullscreen');\n    }\n    /**\n     * Returns true if the player is currently fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getFullscreen\",\n    value: function getFullscreen() {\n      if (screenfull.isEnabled) {\n        return npo_src.resolve(screenfull.isFullscreen);\n      }\n\n      return this.get('fullscreen');\n    }\n    /**\n     * Request that the player enters picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"requestPictureInPicture\",\n    value: function requestPictureInPicture() {\n      return this.callMethod('requestPictureInPicture');\n    }\n    /**\n     * Request that the player exits picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"exitPictureInPicture\",\n    value: function exitPictureInPicture() {\n      return this.callMethod('exitPictureInPicture');\n    }\n    /**\n     * Returns true if the player is currently picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getPictureInPicture\",\n    value: function getPictureInPicture() {\n      return this.get('pictureInPicture');\n    }\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          // If we've added an additional wrapper div, remove that from the DOM.\n          // If not, just remove the iframe element.\n          if (_this5.element.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== _this5.element.parentNode) {\n            _this5.element.parentNode.parentNode.removeChild(_this5.element.parentNode);\n          } else {\n            _this5.element.parentNode.removeChild(_this5.element);\n          }\n        } // If the clip is private there is a case where the element stays the\n        // div element. Destroy should reset the div and remove the iframe child.\n\n\n        if (_this5.element && _this5.element.nodeName === 'DIV' && _this5.element.parentNode) {\n          _this5.element.removeAttribute('data-vimeo-initialized');\n\n          var iframe = _this5.element.querySelector('iframe');\n\n          if (iframe && iframe.parentNode) {\n            // If we've added an additional wrapper div, remove that from the DOM.\n            // If not, just remove the iframe element.\n            if (iframe.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== iframe.parentNode) {\n              iframe.parentNode.parentNode.removeChild(iframe.parentNode);\n            } else {\n              iframe.parentNode.removeChild(iframe);\n            }\n          }\n        }\n\n        _this5._window.removeEventListener('message', _this5._onMessage);\n\n        if (screenfull.isEnabled) {\n          screenfull.off('fullscreenchange', _this5.fullscreenchangeHandler);\n        }\n\n        resolve();\n      });\n    }\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n    /**\n     * @typedef {Object} CameraProperties\n     * @prop {number} props.yaw - Number between 0 and 360.\n     * @prop {number} props.pitch - Number between -90 and 90.\n     * @prop {number} props.roll - Number between -180 and 180.\n     * @prop {number} props.fov - The field of view in degrees.\n     */\n\n    /**\n     * A promise to get the camera properties of the player.\n     *\n     * @promise GetCameraPromise\n     * @fulfill {CameraProperties} The camera properties.\n     */\n\n    /**\n     * For 360° videos get the camera properties for this player.\n     *\n     * @return {GetCameraPromise}\n     */\n\n  }, {\n    key: \"getCameraProps\",\n    value: function getCameraProps() {\n      return this.get('cameraProps');\n    }\n    /**\n     * A promise to set the camera properties of the player.\n     *\n     * @promise SetCameraPromise\n     * @fulfill {Object} The camera was successfully set.\n     * @reject {RangeError} The range was out of bounds.\n     */\n\n    /**\n     * For 360° videos set the camera properties for this player.\n     *\n     * @param {CameraProperties} camera The camera properties\n     * @return {SetCameraPromise}\n     */\n\n  }, {\n    key: \"setCameraProps\",\n    value: function setCameraProps(camera) {\n      return this.set('cameraProps', camera);\n    }\n    /**\n     * A representation of a chapter.\n     *\n     * @typedef {Object} VimeoChapter\n     * @property {number} startTime The start time of the chapter.\n     * @property {object} title The title of the chapter.\n     * @property {number} index The place in the order of Chapters. Starts at 1.\n     */\n\n    /**\n     * A promise to get chapters for the video.\n     *\n     * @promise GetChaptersPromise\n     * @fulfill {VimeoChapter[]} The chapters for the video.\n     */\n\n    /**\n     * Get an array of all the chapters for the video.\n     *\n     * @return {GetChaptersPromise}\n     */\n\n  }, {\n    key: \"getChapters\",\n    value: function getChapters() {\n      return this.get('chapters');\n    }\n    /**\n     * A promise to get the currently active chapter.\n     *\n     * @promise GetCurrentChaptersPromise\n     * @fulfill {VimeoChapter|undefined} The current chapter for the video.\n     */\n\n    /**\n     * Get the currently active chapter for the video.\n     *\n     * @return {GetCurrentChaptersPromise}\n     */\n\n  }, {\n    key: \"getCurrentChapter\",\n    value: function getCurrentChapter() {\n      return this.get('currentChapter');\n    }\n    /**\n     * A promise to get the color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n\n    /**\n     * Get the color for this player.\n     *\n     * @return {GetColorPromise}\n     */\n\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n    /**\n     * A promise to set the color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n\n    /**\n     * Set the color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n    /**\n     * A promise to set the muted state of the player.\n     *\n     * @promise SetMutedPromise\n     * @fulfill {boolean} The muted state that was set.\n     */\n\n    /**\n     * Set the muted state of the player. When set to `true`, the player\n     * volume will be muted.\n     *\n     * @param {boolean} muted\n     * @return {SetMutedPromise}\n     */\n\n  }, {\n    key: \"setMuted\",\n    value: function setMuted(muted) {\n      return this.set('muted', muted);\n    }\n    /**\n     * A promise to get the muted state of the player.\n     *\n     * @promise GetMutedPromise\n     * @fulfill {boolean} Whether or not the player is muted.\n     */\n\n    /**\n     * Get the muted state of the player.\n     *\n     * @return {GetMutedPromise}\n     */\n\n  }, {\n    key: \"getMuted\",\n    value: function getMuted() {\n      return this.get('muted');\n    }\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0.5 to 2.\n     */\n\n    /**\n     * Get the playback rate of the player on a scale from `0.5` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0.5 or greater than 2.\n     */\n\n    /**\n     * Set the playback rate of the player on a scale from `0.5` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n    /**\n     * A promise to get the qualities available of the current video.\n     *\n     * @promise GetQualitiesPromise\n     * @fulfill {Array} The qualities of the video.\n     */\n\n    /**\n     * Get the qualities of the current video.\n     *\n     * @return {GetQualitiesPromise}\n     */\n\n  }, {\n    key: \"getQualities\",\n    value: function getQualities() {\n      return this.get('qualities');\n    }\n    /**\n     * A promise to get the current set quality of the video.\n     *\n     * @promise GetQualityPromise\n     * @fulfill {string} The current set quality.\n     */\n\n    /**\n     * Get the current set quality of the video.\n     *\n     * @return {GetQualityPromise}\n     */\n\n  }, {\n    key: \"getQuality\",\n    value: function getQuality() {\n      return this.get('quality');\n    }\n    /**\n     * A promise to set the video quality.\n     *\n     * @promise SetQualityPromise\n     * @fulfill {number} The quality was set.\n     * @reject {RangeError} The quality is not available.\n     */\n\n    /**\n     * Set a video quality.\n     *\n     * @param {string} quality\n     * @return {SetQualityPromise}\n     */\n\n  }, {\n    key: \"setQuality\",\n    value: function setQuality(quality) {\n      return this.set('quality', quality);\n    }\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n  }]);\n\n  return Player;\n}(); // Setup embed only if this is not a node environment\n\n\nif (!isNode) {\n  screenfull = initializeScreenfull();\n  initializeEmbeds();\n  resizeEmbeds();\n}\n\nexport default Player;\n","import { assign, clamp } from '@splidejs/splide/src/js/utils';\r\nimport Vimeo from '@vimeo/player';\r\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\r\nimport { IDLE, INITIALIZED, PLAY_REQUEST_ABORTED } from '../../constants/states';\r\nimport { VideoOptions } from '../../types/options';\r\n\r\n\r\n/**\r\n * The wrapper class for the Vimeo player.\r\n *\r\n * @since 0.5.0\r\n */\r\nexport class VimeoPlayer extends AbstractVideoPlayer<Vimeo> {\r\n  /**\r\n   * The VimeoPlayer constructor.\r\n   *\r\n   * @param target  - A target element where the player is mounted.\r\n   * @param videoId - A video ID or an URL itself.\r\n   * @param options - Optional. Options.\r\n   */\r\n  constructor( target: HTMLElement, videoId: string, options: VideoOptions = {} ) {\r\n    super( target, videoId, options );\r\n    this.state.set( INITIALIZED );\r\n  }\r\n\r\n  /**\r\n   * Creates a player.\r\n   * The `hideControls` option now only work for PRO users.\r\n   * Note that passing null/undefined can not disable each option.\r\n   *\r\n   * @param videoId - Optional. A video ID or an URL.\r\n   *\r\n   * @return A Vimeo player instance.\r\n   */\r\n  protected createPlayer( videoId: string ): Vimeo {\r\n    const { options, options: { playerOptions = {} } } = this;\r\n    const vimeoOptions = videoId.indexOf( 'http' ) === 0 ? { url: videoId } : { id: +videoId };\r\n\r\n    const player = new Vimeo( this.target, assign( vimeoOptions, {\r\n      controls: ! options.hideControls,\r\n      loop    : options.loop,\r\n      muted   : options.mute,\r\n    }, playerOptions.vimeo || {} ) );\r\n\r\n    player.on( 'play', this.onPlay );\r\n    player.on( 'pause', this.onPause );\r\n    player.on( 'ended', this.onEnded );\r\n    player.ready().then( this.onPlayerReady, this.onError );\r\n\r\n    if ( ! player.getMuted() ) {\r\n      player.setVolume( clamp( options.volume, 0, 1 ) );\r\n    }\r\n\r\n    return player;\r\n  }\r\n\r\n  /**\r\n   * Starts the video.\r\n   */\r\n  protected playVideo(): void {\r\n    this.player.play().catch( () => {\r\n      if ( this.state.is( PLAY_REQUEST_ABORTED ) ) {\r\n        this.state.set( IDLE );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Pauses the video.\r\n   */\r\n  protected pauseVideo(): void {\r\n    this.player.pause();\r\n  }\r\n}\r\n","import { isUndefined, queryAll, create, isFunction } from '@splidejs/splide/src/js/utils';\r\n\r\n\r\n/**\r\n * Let the compiler understand the callback function.\r\n */\r\ndeclare global {\r\n  interface Window {\r\n    onYouTubeIframeAPIReady: () => void;\r\n  }\r\n}\r\n\r\n/**\r\n * The URL to the YouTube iframe API script.\r\n * The protocol will be prepended later.\r\n *\r\n * @since 0.5.0\r\n */\r\nconst YOUTUBE_API_SRC = '//www.youtube.com/player_api';\r\n\r\n/**\r\n * The class for loading the YouTube API script.\r\n *\r\n * @link https://developers.google.com/youtube/iframe_api_reference\r\n *\r\n * @since 0.5.0\r\n */\r\nexport class YouTubeIframeAPILoader {\r\n  /**\r\n   * Starts loading the YouTube API script.\r\n   *\r\n   * @param callback - A callback function that will be invoked when the API is ready.\r\n   */\r\n  load( callback: () => void ): void {\r\n    if ( window.YT && isFunction( window.YT.Player ) ) {\r\n      return callback();\r\n    }\r\n\r\n    this.attachCallback( callback );\r\n\r\n    if ( this.shouldLoad() ) {\r\n      create( 'script', { src: `${ location.protocol }${ YOUTUBE_API_SRC }` }, document.head );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the new script tag for the YouTube API should be injected or not.\r\n   *\r\n   * @return `true` if the API should be loaded.\r\n   */\r\n  private shouldLoad(): boolean {\r\n    return ! queryAll<HTMLScriptElement>( document, 'script' )\r\n      .some( script => script.src.replace( /^https?:/, '' ) === YOUTUBE_API_SRC );\r\n  }\r\n\r\n  /**\r\n   * Attaches the callback function that will be invoked when the API is ready.\r\n   *\r\n   * @param callback - A callback function to invoke.\r\n   */\r\n  private attachCallback( callback: () => void ): void {\r\n    let oldCallback: () => void;\r\n\r\n    if ( ! isUndefined( window.onYouTubeIframeAPIReady ) ) {\r\n      oldCallback = window.onYouTubeIframeAPIReady;\r\n    }\r\n\r\n    window.onYouTubeIframeAPIReady = () => {\r\n      oldCallback && oldCallback();\r\n      callback();\r\n    };\r\n  }\r\n}\r\n","import { assign, find, clamp } from '@splidejs/splide/src/js/utils';\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\nimport { INITIALIZED, INITIALIZING, PENDING_PLAY } from '../../constants/states';\nimport { VideoOptions } from '../../types/options';\nimport { YouTubeIframeAPILoader } from './YouTubeIframeAPILoader';\n\n\n/**\n * The wrapper class for the YouTube player.\n *\n * @since 0.5.0\n */\nexport class YouTubePlayer extends AbstractVideoPlayer<YT.Player> {\n  /**\n   * The YouTubePlayer constructor.\n   *\n   * @param target  - A target element where the player is mounted.\n   * @param videoId - A video ID or an URL itself.\n   * @param options - Optional. Options.\n   */\n  constructor( target: HTMLElement, videoId: string, options: VideoOptions = {} ) {\n    super( target, videoId, options );\n\n    this.videoId = this.parseVideoId( videoId );\n\n    if ( this.videoId ) {\n      this.state.set( INITIALIZING );\n      new YouTubeIframeAPILoader().load( this.onAPIReady.bind( this ) );\n    }\n  }\n\n  /**\n   * Called when the YouTube iframe API is ready.\n   */\n  private onAPIReady(): void {\n    const { state } = this;\n    const isPending = state.is( PENDING_PLAY );\n\n    state.set( INITIALIZED );\n\n    if ( isPending ) {\n      this.play();\n    }\n  }\n\n  /**\n   * Creates a player.\n   * Note that the `loop` does not work without the `playlist` parameter.\n   *\n   * @link https://developers.google.com/youtube/player_parameters\n   *\n   * @param videoId - Optional. A video ID.\n   *\n   * @return A YT.Player instance.\n   */\n  protected createPlayer( videoId: string ): YT.Player {\n    const { options, options: { playerOptions = {} } } = this;\n\n    return new YT.Player( this.target, {\n      videoId,\n      playerVars: assign( {\n        controls      : options.hideControls ? 0 : 1,\n        iv_load_policy: 3, // eslint-disable-line camelcase\n        loop          : options.loop ? 1 : 0,\n        playlist      : options.loop ? videoId : undefined,\n        rel           : 0,\n        autoplay      : 0,\n        mute          : options.mute ? 1 : 0,\n      }, playerOptions.youtube || {} ),\n      events: {\n        onReady      : this.onPlayerReady.bind( this ),\n        onStateChange: this.onPlayerStateChange.bind( this ),\n        onError      : this.onError.bind( this ),\n      },\n    } );\n  }\n\n  /**\n   * Called when the player becomes ready.\n   */\n  protected onPlayerReady(): void {\n    super.onPlayerReady();\n    this.player.setVolume( clamp( this.options.volume, 0, 1 ) * 100 );\n  }\n\n  /**\n   * Called when the YouTube player state is changed.\n   *\n   * @param e - A YT.OnStateChangeEvent object.\n   */\n  private onPlayerStateChange( e: YT.OnStateChangeEvent ): void {\n    const { PLAYING, PAUSED, ENDED } = YT.PlayerState;\n\n    switch ( true ) {\n      case e.data === PLAYING:\n        this.onPlay();\n        break;\n\n      case e.data === PAUSED:\n        this.onPause();\n        break;\n\n      case e.data === ENDED:\n        this.onEnded();\n        break;\n    }\n  }\n\n  /**\n   * Starts the video.\n   */\n  protected playVideo(): void {\n    this.player.playVideo();\n  }\n\n  /**\n   * Pauses the video.\n   */\n  protected pauseVideo(): void {\n    this.player.pauseVideo();\n  }\n\n  /**\n   * Parses the video ID.\n   * If it is an URL, plucks the ID from it.\n   *\n   * @param id - An ID to parse.\n   *\n   * @return A video ID if available, or otherwise `undefined`.\n   */\n  private parseVideoId( id: string ): string | undefined {\n    return id.indexOf( 'http' ) === 0 ? this.parseUrl( id ) : id;\n  }\n\n  /**\n   * Plucks the ID from the provided URL.\n   *\n   * @param url - An URL to parse.\n   *\n   * @return A video ID if available, or otherwise `undefined`.\n   */\n  private parseUrl( url: string ): string | undefined {\n    const [ , search ] = url.split( /[#?]/ );\n    const query = find( search.split( '&' ), query => query.indexOf( 'v=' ) === 0 );\n    return query && query.replace( 'v=', '' );\n  }\n}\n","import { PROJECT_CODE } from './project';\r\n\r\n\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_SLIDER          = `${ PROJECT_CODE }__slider`;\r\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\r\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\r\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\r\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_AUTOPLAY        = `${ PROJECT_CODE }__autoplay`;\r\nexport const CLASS_PLAY            = `${ PROJECT_CODE }__play`;\r\nexport const CLASS_PAUSE           = `${ PROJECT_CODE }__pause`;\r\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\r\nexport const CLASS_INITIALIZED     = 'is-initialized';\r\nexport const CLASS_ACTIVE          = 'is-active';\r\nexport const CLASS_PREV            = 'is-prev';\r\nexport const CLASS_NEXT            = 'is-next';\r\nexport const CLASS_VISIBLE         = 'is-visible';\r\nexport const CLASS_LOADING         = 'is-loading';\r\n\r\n/**\r\n * The array with all status classes.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [ CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING ];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 0.5.0\r\n */\r\nexport const I18N = {\r\n  playVideo: 'Play Video',\r\n};\r\n","import { EventBus, EventBusCallback, Splide } from '@splidejs/splide';\r\nimport { CLASS_CONTAINER, CLASS_SLIDE } from '@splidejs/splide/src/js/constants/classes';\r\nimport { I18N } from '../constants/i18n';\r\nimport { create, display, remove, removeClass, child, addClass } from '@splidejs/splide/src/js/utils';\r\nimport { CLASS_VIDEO, CLASS_VIDEO_PLAY_BUTTON, CLASS_VIDEO_WRAPPER } from '../constants/classes';\r\n\r\n\r\n/**\r\n * The class for the UI of the video player.\r\n *\r\n * @since 0.5.0\r\n */\r\nexport class PlayerUI {\r\n  /**\r\n   * The Splide instance.\r\n   */\r\n  private Splide: Splide;\r\n\r\n  /**\r\n   * The slide element.\r\n   */\r\n  private readonly slide: HTMLElement;\r\n\r\n  /**\r\n   * The parent element of the video, which may be the slide or the container element.\r\n   */\r\n  private parent: HTMLElement;\r\n\r\n  /**\r\n   * Keeps the modifier class name.\r\n   */\r\n  private modifier: string;\r\n\r\n  /**\r\n   * The EventBus object.\r\n   */\r\n  private readonly event = EventBus();\r\n\r\n  /**\r\n   * Indicates whether the UI is disabled or not.\r\n   */\r\n  private disabled: boolean;\r\n\r\n  /**\r\n   * The wrapper element that contains the wrapper and the play button.\r\n   */\r\n  private video: HTMLDivElement;\r\n\r\n  /**\r\n   * The wrapper element that contains the video.\r\n   */\r\n  private wrapper: HTMLDivElement;\r\n\r\n  /**\r\n   * The placeholder element.\r\n   * - YouTube  : Will replace this element by an iframe\r\n   * - Vimeo    : Will append an iframe to this\r\n   * - HTMLVideo: Will append an video element to this\r\n   */\r\n  private placeholder: HTMLDivElement;\r\n\r\n  /**\r\n   * The button element for play.\r\n   */\r\n  private playButton: HTMLButtonElement;\r\n\r\n  /**\r\n   * The PlayerUI constructor.\r\n   *\r\n   * @param Splide - A Splide instance.\r\n   * @param slide  - A slide element where the player is mounted.\r\n   */\r\n  constructor( Splide: Splide, slide: HTMLElement ) {\r\n    this.Splide = Splide;\r\n    this.slide  = slide;\r\n\r\n    this.init();\r\n    this.create();\r\n    this.show();\r\n    this.listen();\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   */\r\n  private init(): void {\r\n    const container = child( this.slide, `.${ CLASS_CONTAINER }` );\r\n\r\n    this.parent   = container || this.slide;\r\n    this.modifier = `${ container ? CLASS_CONTAINER : CLASS_SLIDE }--has-video`;\r\n\r\n    addClass( this.parent, this.modifier );\r\n  }\r\n\r\n  /**\r\n   * Creates wrapper, placeholder and button elements.\r\n   */\r\n  private create(): void {\r\n    this.video       = create( 'div', CLASS_VIDEO, this.parent );\r\n    this.wrapper     = create( 'div', CLASS_VIDEO_WRAPPER, this.video );\r\n    this.placeholder = create( 'div', null, this.wrapper );\r\n\r\n    this.playButton = create( 'button', {\r\n      class       : CLASS_VIDEO_PLAY_BUTTON,\r\n      type        : 'button',\r\n      'aria-label': this.Splide.options.i18n.playVideo || I18N.playVideo,\r\n    }, this.video );\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  private listen(): void {\r\n    this.parent.addEventListener( 'click', () => {\r\n      this.event.emit( 'click' );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Toggles the play button.\r\n   *\r\n   * @param show - Determines whether to show or hide the button.\r\n   */\r\n  private toggleButton( show?: boolean ): void {\r\n    display( this.playButton, show ? '' : 'none' );\r\n  }\r\n\r\n  /**\r\n   * Toggles the wrapper element.\r\n   *\r\n   * @param show - Determines whether to show or hide the button.\r\n   */\r\n  private toggleWrapper( show?: boolean ): void {\r\n    display( this.wrapper, show ? '' : 'none' );\r\n  }\r\n\r\n  /**\r\n   * Returns the placeholder element.\r\n   */\r\n  getPlaceholder(): HTMLDivElement {\r\n    return this.placeholder;\r\n  }\r\n\r\n  /**\r\n   * Hides UI and displays the video.\r\n   */\r\n  hide(): void {\r\n    this.toggleButton( false );\r\n    this.toggleWrapper( true );\r\n  }\r\n\r\n  /**\r\n   * Displays UI and hides the video.\r\n   */\r\n  show(): void {\r\n    if ( ! this.disabled ) {\r\n      this.toggleButton( true );\r\n    }\r\n\r\n    this.toggleWrapper( false );\r\n  }\r\n\r\n  /**\r\n   * Disables UI (the play button) displays on the slide.\r\n   *\r\n   * @param disabled - Determines whether to disable UI or not.\r\n   */\r\n  disable( disabled: boolean ): void {\r\n    this.disabled = disabled;\r\n\r\n    if ( disabled ) {\r\n      this.toggleButton( false );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches an event handler.\r\n   *\r\n   * @param events   - An event or events.\r\n   * @param callback - A callback function.\r\n   */\r\n  on( events: string | string[], callback: EventBusCallback ): void {\r\n    this.event.on( events, callback );\r\n  }\r\n\r\n  /**\r\n   * Destroys the instance.\r\n   */\r\n  destroy(): void {\r\n    removeClass( this.parent, this.modifier );\r\n    remove( this.video );\r\n    this.event.destroy();\r\n  }\r\n}\r\n","import {\n  EVENT_DRAG,\n  EVENT_DRAGGING,\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_MOVED,\n  EVENT_SCROLL,\n  EVENT_SCROLLED,\n  EventInterface,\n  EventInterfaceObject,\n  Splide,\n} from '@splidejs/splide';\nimport { getAttribute, merge, toggleClass } from '@splidejs/splide/src/js/utils';\nimport { CLASS_PLAYING, CLASS_VIDEO_DISABLED } from '../constants/classes';\nimport { HTML_VIDEO__DATA_ATTRIBUTE, VIMEO_DATA_ATTRIBUTE, YOUTUBE_DATA_ATTRIBUTE } from '../constants/data-attributes';\nimport { DEFAULTS } from '../constants/defaults';\nimport { EVENT_VIDEO_CLICK, EVENT_VIDEO_ENDED, EVENT_VIDEO_PAUSE, EVENT_VIDEO_PLAY } from '../constants/events';\nimport { HTMLVideoPlayer } from '../players/html/HTMLVideoPlayer';\nimport { VimeoPlayer } from '../players/vimeo/VimeoPlayer';\nimport { YouTubePlayer } from '../players/youtube/YouTubePlayer';\nimport { VideoPlayerConstructor, VideoPlayerInterface } from '../types/general';\nimport { VideoOptions } from '../types/options';\nimport { PlayerUI } from './PlayerUI';\n\n\n/**\n * Associates the data attribute name with the player constructor.\n *\n * @since 0.5.0\n */\nconst VIDEO_PLAYER_MAP: Array<[ string, VideoPlayerConstructor ]> = [\n  [ YOUTUBE_DATA_ATTRIBUTE, YouTubePlayer ],\n  [ VIMEO_DATA_ATTRIBUTE, VimeoPlayer ],\n  [ HTML_VIDEO__DATA_ATTRIBUTE, HTMLVideoPlayer ],\n];\n\n/**\n * The class for the video player that connects a Splide slide with PlayerUI and VideoPlayer instances.\n *\n * @since 0.5.0\n */\nexport class Player {\n  /**\n   * The Splide instance.\n   */\n  private readonly Splide: Splide;\n\n  /**\n   * The slide element.\n   */\n  private readonly slide: HTMLElement;\n\n  /**\n   * Video options.\n   */\n  private readonly options: VideoOptions;\n\n  /**\n   * The PlayerUI instance.\n   */\n  private ui: PlayerUI;\n\n  /**\n   * The VideoPlayer instance.\n   */\n  private player: VideoPlayerInterface;\n\n  /**\n   * The EventInterface object.\n   */\n  private event: EventInterfaceObject;\n\n  /**\n   * Indicates whether the player is disabled or not.\n   */\n  private disabled: boolean;\n\n  /**\n   * The Player constructor.\n   *\n   * @param Splide - A Splide instance.\n   * @param slide  - A slide element where the player is applied.\n   */\n  constructor( Splide: Splide, slide: HTMLElement ) {\n    this.Splide  = Splide;\n    this.slide   = slide;\n    this.event   = EventInterface( Splide );\n    this.options = merge( merge( {}, DEFAULTS ), this.Splide.options.video );\n\n    this.createPlayer( slide );\n\n    if ( this.player ) {\n      this.listen();\n    }\n  }\n\n  /**\n   * Creates a Player.\n   * This will fail when the slide element does not have the data attribute for the video.\n   *\n   * @param slide - A slide element.\n   */\n  private createPlayer( slide: HTMLElement ): void {\n    VIDEO_PLAYER_MAP.forEach( ( [ attr, Constructor ] ) => {\n      const id = getAttribute( slide, attr );\n\n      if ( id ) {\n        this.ui     = new PlayerUI( this.Splide, slide );\n        this.player = new Constructor( this.ui.getPlaceholder(), id, this.options );\n        this.ui.disable( this.options.disableOverlayUI );\n      }\n    } );\n  }\n\n  /**\n   * Listens to UI, VideoPlayer and Splide events.\n   */\n  private listen(): void {\n    const { player, event } = this;\n\n    this.ui.on( 'click', this.onClick.bind( this ) );\n\n    player.on( 'play', this.onPlay.bind( this ) );\n    player.on( 'played', this.onPlayed.bind( this ) );\n    player.on( 'pause', this.onPause.bind( this ) );\n    player.on( 'paused', this.onPaused.bind( this ) );\n    player.on( 'ended', this.onEnded.bind( this ) );\n\n    event.on( [ EVENT_MOVE, EVENT_SCROLL ], this.pause.bind( this ) );\n    event.on( EVENT_VIDEO_CLICK, this.onVideoClick.bind( this ) );\n\n    event.on( EVENT_DRAG, () => {\n      event.off( EVENT_DRAGGING );\n      event.on( EVENT_DRAGGING, () => {\n        this.pause();\n        event.off( EVENT_DRAGGING );\n      } );\n    } );\n\n    if ( this.options.autoplay ) {\n      event.on( [ EVENT_MOUNTED, EVENT_MOVED, EVENT_SCROLLED ], this.onAutoplayRequested.bind( this ) );\n    }\n  }\n\n  /**\n   * Called when the slide element is clicked.\n   */\n  private onClick(): void {\n    this.play();\n    this.event.emit( EVENT_VIDEO_CLICK, this );\n  }\n\n  /**\n   * Called when any slides that have a video are clicked.\n   *\n   * @param player - A player instance that the clicked slide has.\n   */\n  private onVideoClick( player: Player ): void {\n    if ( this !== player ) {\n      this.pause();\n    }\n  }\n\n  /**\n   * Called when the video is requested to start.\n   * The video may be loading at this moment.\n   */\n  private onPlay(): void {\n    this.ui.hide();\n  }\n\n  /**\n   * Called when the video begins.\n   */\n  private onPlayed(): void {\n    this.ui.hide();\n    this.togglePlaying( true );\n    this.event.emit( EVENT_VIDEO_PLAY, this );\n  }\n\n  /**\n   * Called when the video is requested to pause.\n   */\n  private onPause(): void {\n    this.ui.show();\n  }\n\n  /**\n   * Called when the video is paused.\n   */\n  private onPaused(): void {\n    this.togglePlaying( false );\n    this.event.emit( EVENT_VIDEO_PAUSE, this );\n  }\n\n  /**\n   * Called when the video ends.\n   */\n  private onEnded(): void {\n    this.togglePlaying( false );\n    this.event.emit( EVENT_VIDEO_ENDED, this );\n  }\n\n  /**\n   * Called when the autoplay option is `true` and the slider should start the video.\n   */\n  private onAutoplayRequested(): void {\n    const activeSlide = this.Splide.Components.Slides.getAt( this.Splide.index );\n\n    if ( activeSlide.slide === this.slide ) {\n      this.play();\n    }\n  }\n\n  /**\n   * Toggles the playing status class.\n   *\n   * @param add - Determines whether to add or remove the class.\n   */\n  private togglePlaying( add: boolean ): void {\n    toggleClass( this.Splide.root, CLASS_PLAYING, add );\n  }\n\n  /**\n   * Starts the video.\n   */\n  play(): void {\n    if ( this.player && ! this.disabled ) {\n      this.player.play();\n    }\n  }\n\n  /**\n   * Pauses the video.\n   */\n  pause(): void {\n    if ( this.player && ! this.disabled ) {\n      this.player.pause();\n    }\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy(): void {\n    if ( this.player ) {\n      this.ui.destroy();\n      this.player.destroy();\n    }\n\n    this.disable( false );\n  }\n\n  /**\n   * Disables the play/pause control.\n   */\n  disable( disabled: boolean ): void {\n    this.disabled = disabled;\n    toggleClass( this.Splide.root, CLASS_VIDEO_DISABLED, disabled );\n  }\n}\n","import { BaseComponent, Components, Splide } from '@splidejs/splide';\r\nimport { forOwn } from '@splidejs/splide/src/js/utils';\r\nimport { Player } from '../../classes/Player';\r\nimport { VideoOptions } from '../../types/options';\r\n\r\n\r\n/**\r\n * Lets the compiler know the type of video options.\r\n */\r\ndeclare module '@splidejs/splide' {\r\n  interface Options {\r\n    video?: VideoOptions;\r\n  }\r\n\r\n  interface Components {\r\n    Video?: VideoComponent;\r\n  }\r\n}\r\n\r\n/**\r\n * The interface for the Video component.\r\n *\r\n * @since 0.5.3\r\n */\r\nexport interface VideoComponent extends BaseComponent {\r\n  play( index?: number ): void;\r\n  pause(): void;\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The extension for embedding videos to slides.\r\n *\r\n * @since 0.5.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n *\r\n * @return A Video component object.\r\n */\r\nexport function Video( Splide: Splide, Components: Components ): VideoComponent {\r\n  /**\r\n   * Stores Player instances.\r\n   */\r\n  const players: Record<number, Player> = {};\r\n\r\n  /**\r\n   * Called when the extension is mounted.\r\n   */\r\n  function mount(): void {\r\n    Components.Slides.forEach( Slide => {\r\n      players[ Slide.index ] = new Player( Splide, Slide.slide );\r\n    } );\r\n\r\n    Splide.refresh();\r\n  }\r\n\r\n  /**\r\n   * Destroys the extension.\r\n   */\r\n  function destroy(): void {\r\n    forOwn( players, player => {\r\n      player.destroy();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Plays the video at the active or specified index.\r\n   *\r\n   * @param index - A slide index.\r\n   */\r\n  function play( index = Splide.index ): void {\r\n    const player = players[ index ];\r\n\r\n    if ( player ) {\r\n      player.play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pauses the playing video.\r\n   */\r\n  function pause(): void {\r\n    forOwn( players, player => {\r\n      player.pause();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Disables play/pause.\r\n   *\r\n   * @param disabled - Set `true` for disabling the play/pause control.\r\n   */\r\n  function disable( disabled: boolean ): void {\r\n    forOwn( players, player => {\r\n      player.disable( disabled );\r\n    } );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    play,\r\n    pause,\r\n    disable,\r\n  };\r\n}\r\n","import { Video } from '../extensions';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    splide: Record<string, any>;\r\n  }\r\n}\r\n\r\nif ( typeof window !== 'undefined' ) {\r\n  window.splide = window.splide || {};\r\n  window.splide.Extensions = window.splide.Extensions || {};\r\n  window.splide.Extensions.Video = Video;\r\n}\r\n"],"names":["subject","isNull","Array","isArray","HTMLElement","value","values","iteratee","forEach","arrayProto","prototype","arrayLike","start","end","slice","call","predicate","filter","elm","classes","add","name","classList","isString","split","parent","children3","appendChild","bind","selector","isHTMLElement","matches","children","child3","firstElementChild","object","right","keys","Object","reverse","i","length","key","arguments","source","isObject","merge","attrs","removeAttribute","attr","value2","setAttribute","String","tag","document","createElement","addClass","append","prop","isUndefined","getComputedStyle","style","style3","display3","getAttribute","nodes","node","parentNode","removeChild","querySelectorAll","PROJECT_CODE","message","error","min","Math","max","floor","ceil","abs","number","x","y","minimum","maximum","DEFAULT_EVENT_PRIORITY","isArray2","array","indexOf","items","push","toArray2","arrayProto2","handlers","events","callback","priority","event","namespace","_event","_callback","_namespace","_priority","_key","sort","handler1","handler2","eventHandlers","handler","apply","slice2","join","eventNS","fragments","on","off","offBy","emit","destroy","EVENT_MOUNTED","EVENT_MOVE","EVENT_MOVED","EVENT_DRAG","EVENT_DRAGGING","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","Splide22","listeners","targets","options","target","event2","addEventListener","listener","removeEventListener","data","unbind","initialState","state","states","includes2","set","is","CLASS_VIDEO","CLASS_VIDEO_WRAPPER","CLASS_VIDEO_PLAY_BUTTON","CLASS_PLAYING","CLASS_VIDEO_DISABLED","YOUTUBE_DATA_ATTRIBUTE","VIMEO_DATA_ATTRIBUTE","HTML_VIDEO__DATA_ATTRIBUTE","DEFAULTS2","hideControls","loop","mute","volume","EVENT_VIDEO_PLAY","EVENT_VIDEO_PAUSE","EVENT_VIDEO_ENDED","EVENT_VIDEO_CLICK","NOT_INITIALIZED","INITIALIZING","INITIALIZED","PENDING_PLAY","IDLE2","LOADING","PLAY_REQUEST_ABORTED","PLAYING","ERROR","videoId","State","EventBus","onPlay","onPause","onEnded","onPlayerReady","onError","play","player","createPlayer","playVideo","pause","pauseVideo","isPending","aborted","playerOptions","create","src","controls","clamp","muted","htmlVideo","AbstractVideoPlayer","instance","Constructor","TypeError","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","isNode","global","toString","type","toLowerCase","concat","substr","toUpperCase","element","Boolean","nodeType","ownerDocument","defaultView","isNaN","parseFloat","isFinite","url","test","oEmbedParameters2","id","idOrUrl","Error","isInteger","isVimeoUrl","replace","arrayIndexOfSupport","postMessageSupport","window","postMessage","commonjsGlobal","globalThis","self","fn","module","exports","self2","WeakMap","hasOwnProperty","hasDefine","e","genId","WeakMap2","isObject3","entry","_id","methodName","prefix","rand","random","substring","npo_src","createCommonjsModule","context","definition","builtInProp","cycle","scheduling_queue","ToString","timer","setImmediate","setTimeout","obj","val","config","err","first","last","item","next","Item","drain","f","o","_then","o_type","then","chain","success","failure","cb","ret","reject","msg","promise","isThenable","resolve","triggered","def","def_wrapper","MakeDefWrapper","notify","arr","resolver","rejecter","idx","idx2","executor","__NPO__","MakeDef","constructor","resolve2","reject2","PromisePrototype","Promise2","len","msgs","count","callbackMap","playerCallbacks","get","index","splice","getCallbacks","shift","oldElement","newElement","oEmbedParameters","defaults","reduce","params","param","_ref","html","querySelector","div","innerHTML","firstChild","videoUrl","Promise","encodeURIComponent","xhr","XDomainRequest","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","domain_status_code","error2","onerror","send","elements","handleError","console","getOEmbedParameters","getVimeoUrl","createEmbed","VimeoPlayerResizeEmbeds_","onMessage","origin","iframes","contentWindow","space","parentElement","paddingBottom","bottom","warn","method","ieVersion","navigator","userAgent","stringify","parseMessageData","callbacks","promises","shiftCallbacks","callback2","fnMap","l","eventNameMap","fullscreenchange","fullscreenerror","screenfull2","request","onFullScreenEntered","onFullScreenEntered2","documentElement","returnPromise","requestFullscreen","exit","isFullscreen","onFullScreenExit","onFullScreenExit2","exitFullscreen","eventName","defineProperties","fullscreenElement","isEnabled","fullscreenEnabled","playerMap","readyMap","screenfull","Player","_this","Player3","jQuery","getElementById","isDomElement","nodeName","iframe","has","_window","readyPromise","_onMessage","isError","isReadyError","isReadyEvent","isPingResponse","iframe2","_originalElement","fullscreenchangeHandler","ready","_this2","args","_this3","getMethodName","_this4","callMethod","lastCallback","removeCallback","time","language","kind","_this5","autopause","camera","color","currentTime","playbackRate","quality","initializeScreenfull","player_es_default","vimeoOptions","assign","vimeo","getMuted","setVolume","YOUTUBE_API_SRC","load","YT","isFunction","attachCallback","shouldLoad","location","protocol","head","queryAll","some","script","oldCallback","onYouTubeIframeAPIReady","parseVideoId","YouTubeIframeAPILoader","onAPIReady","playerVars","iv_load_policy","playlist","rel","autoplay","youtube","onReady","onStateChange","onPlayerStateChange","PlayerState","PAUSED","ENDED","PLAYING2","parseUrl","search","query3","find","query4","CLASS_SLIDE2","CLASS_CONTAINER2","I18N2","Splide4","slide","Splide","init","show","listen","container","child","modifier","video","wrapper","placeholder","playButton","i18n","toggleButton","toggleWrapper","getPlaceholder","hide","disabled","disable","VIDEO_PLAYER_MAP","YouTubePlayer","VimeoPlayer","HTMLVideoPlayer","EventInterface","ui","PlayerUI","disableOverlayUI","onClick","onPlayed","onPaused","onVideoClick","onAutoplayRequested","togglePlaying","activeSlide","Components","Slides","getAt","root","players","Slide2","Player2","refresh","mount","splide","Extensions","Video"],"mappings":"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"}