{"version":3,"file":"splide-extension-video.js","sources":["../../../splide/dist/js/splide.esm.js","../../../splide/src/js/utils/type/type.ts","../../../splide/src/js/utils/array/toArray/toArray.ts","../../../splide/src/js/utils/array/forEach/forEach.ts","../../../splide/src/js/utils/array/index.ts","../../../splide/src/js/utils/arrayLike/slice/slice.ts","../../../splide/src/js/utils/arrayLike/find/find.ts","../../../splide/src/js/utils/dom/toggleClass/toggleClass.ts","../../../splide/src/js/utils/dom/addClass/addClass.ts","../../../splide/src/js/utils/dom/append/append.ts","../../../splide/src/js/utils/dom/matches/matches.ts","../../../splide/src/js/utils/dom/children/children.ts","../../../splide/src/js/utils/dom/child/child.ts","../../../splide/src/js/utils/object/forOwn/forOwn.ts","../../../splide/src/js/utils/dom/removeAttribute/removeAttribute.ts","../../../splide/src/js/utils/dom/setAttribute/setAttribute.ts","../../../splide/src/js/utils/dom/create/create.ts","../../../splide/src/js/utils/dom/style/style.ts","../../../splide/src/js/utils/dom/display/display.ts","../../../splide/src/js/utils/dom/getAttribute/getAttribute.ts","../../../splide/src/js/utils/dom/queryAll/queryAll.ts","../../../splide/src/js/utils/dom/remove/remove.ts","../../../splide/src/js/utils/dom/removeClass/removeClass.ts","../../../splide/src/js/constants/project.ts","../../src/js/constants/data-attributes.ts","../../src/js/constants/events.ts","../../src/js/constants/states.ts","../../src/js/classes/AbstractVideoPlayer.ts","../../src/js/players/html/HTMLVideoPlayer.ts","../../node_modules/@vimeo/player/dist/player.es.js","../../src/js/players/vimeo/VimeoPlayer.ts","../../src/js/players/youtube/YouTubeIframeAPILoader.ts","../../src/js/players/youtube/YouTubePlayer.ts","../../../splide/src/js/constants/classes.ts","../../src/js/constants/classes.ts","../../src/js/classes/PlayerUI.ts","../../src/js/classes/Player.ts","../../src/js/extensions/Video/Video.ts","../../src/js/build/default.ts"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*!\n * Splide.js\n * Version  : 3.0.0\n * License  : MIT\n * Copyright: 2021 Naotoshi Fujita\n */\n\n/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\nvar PROJECT_CODE = 'splide';\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar DATA_ATTRIBUTE = \"data-\" + PROJECT_CODE;\n/**\r\n * Splide has been just created.\r\n */\n\nvar CREATED = 1;\n/**\r\n * Splide has mounted components.\r\n */\n\nvar MOUNTED = 2;\n/**\r\n * Splide is ready.\r\n */\n\nvar IDLE = 3;\n/**\r\n * Splide is moving.\r\n */\n\nvar MOVING = 4;\n/**\r\n * Splide has been destroyed.\r\n */\n\nvar DESTROYED = 5;\n/**\r\n * The collection of all states.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar STATES = {\n  CREATED: CREATED,\n  MOUNTED: MOUNTED,\n  IDLE: IDLE,\n  MOVING: MOVING,\n  DESTROYED: DESTROYED\n};\n/**\r\n * Empties the array.\r\n *\r\n * @param array - A array to empty.\r\n */\n\nfunction empty(array) {\n  array.length = 0;\n}\n/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\n\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeof subject === 'object';\n}\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\n\n\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\n\n\nfunction isFunction(subject) {\n  return typeof subject === 'function';\n}\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\n\n\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\n\n\nfunction isUndefined(subject) {\n  return typeof subject === 'undefined';\n}\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\n\n\nfunction isNull(subject) {\n  return subject === null;\n}\n/**\r\n * Checks if the given subject is an HTMLElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\n\n\nfunction isHTMLElement(subject) {\n  return subject instanceof HTMLElement;\n}\n/**\r\n * Checks if the given subject is an HTMLButtonElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\r\n */\n\n\nfunction isHTMLButtonElement(subject) {\n  return subject instanceof HTMLButtonElement;\n}\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\n\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\n\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n/**\r\n * Checks if the array includes the value or not.\r\n * `Array#includes` is not supported by IE.\r\n *\r\n * @param array - An array.\r\n * @param value - A value to search for.\r\n *\r\n * @return `true` if the array includes the value, or otherwise `false`.\r\n */\n\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n/**\r\n * Extended `Array#push()` that accepts an item or an array with items.\r\n *\r\n * @param array - An array to push items.\r\n * @param items - An item or items to push.\r\n *\r\n * @return A provided array itself.\r\n */\n\n\nfunction push(array, items) {\n  array.push.apply(array, toArray(items));\n  return array;\n}\n\nvar arrayProto = Array.prototype;\n/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\n\nfunction slice(arrayLike, start, end) {\n  return arrayProto.slice.call(arrayLike, start, end);\n}\n/**\r\n * The find method for an array or array-like object, works in IE.\r\n * This method is not performant for a huge array.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param predicate - The predicate function to test each element in the object.\r\n *\r\n * @return A found value if available, or otherwise `undefined`.\r\n */\n\n\nfunction find(arrayLike, predicate) {\n  return slice(arrayLike).filter(predicate)[0];\n}\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\n\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, function (name) {\n      if (name) {\n        elm.classList[add ? 'add' : 'remove'](name);\n      }\n    });\n  }\n}\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\n\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, classes, true);\n}\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\n\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n/**\r\n * Inserts a node or nodes before the specified reference node.\r\n *\r\n * @param nodes - A node or nodes to insert.\r\n * @param ref   - A reference node.\r\n */\n\n\nfunction before(nodes, ref) {\n  forEach(nodes, function (node) {\n    var parent = ref.parentNode;\n\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n/**\r\n * Checks if the element can be selected by the provided selector or not.\r\n *\r\n * @param elm      - An element to check.\r\n * @param selector - A selector to test.\r\n *\r\n * @return `true` if the selector matches the element, or otherwise `false`.\r\n */\n\n\nfunction matches(elm, selector) {\n  return (elm['msMatchesSelector'] || elm.matches).call(elm, selector);\n}\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\n\n\nfunction children(parent, selector) {\n  return parent ? slice(parent.children).filter(function (child) {\n    return matches(child, selector);\n  }) : [];\n}\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\n\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n/**\r\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\r\n *\r\n * @param object   - An object to iterate over.\r\n * @param iteratee - An iteratee function that takes the value and key as arguments.\r\n *\r\n * @return A provided object itself.\r\n */\n\n\nfunction forOwn(object, iteratee) {\n  if (object) {\n    var keys = Object.keys(object);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== '__proto__') {\n        if (iteratee(object[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n * `undefined` in source objects will be skipped.\r\n *\r\n * @param object  - An object to assign properties to.\r\n * @param sources - Objects to assign properties from.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\n\n\nfunction assign(object) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    forOwn(source, function (value, key) {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n/**\r\n * Recursively merges source properties to the object.\r\n *\r\n * @param object - An object to merge properties to.\r\n * @param source - A source object to merge properties from.\r\n *\r\n * @return A new object with merged properties.\r\n */\n\n\nfunction merge(object, source) {\n  forOwn(source, function (value, key) {\n    object[key] = isObject(value) ? merge(isObject(object[key]) ? object[key] : {}, value) : value;\n  });\n  return object;\n}\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elm   - An element.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\n\n\nfunction removeAttribute(elm, attrs) {\n  if (elm) {\n    forEach(attrs, function (attr) {\n      elm.removeAttribute(attr);\n    });\n  }\n}\n\nfunction setAttribute(elm, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, function (value, name) {\n      setAttribute(elm, name, value);\n    });\n  } else {\n    isNull(value) ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n  }\n}\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\n\n\nfunction create(tag, attrs, parent) {\n  var elm = document.createElement(tag);\n\n  if (attrs) {\n    if (isString(attrs) || isArray(attrs)) {\n      addClass(elm, attrs);\n    } else {\n      setAttribute(elm, attrs);\n    }\n  }\n\n  if (parent) {\n    append(parent, elm);\n  }\n\n  return elm;\n}\n/**\r\n * Applies inline styles to the provided element by an object literal.\r\n *\r\n * @param elms   - An element or elements to apply styles to.\r\n * @param styles - An object literal with styles.\r\n */\n\n\nfunction style(elms, styles) {\n  if (isString(styles)) {\n    return isArray(elms) ? null : getComputedStyle(elms)[styles];\n  }\n\n  forOwn(styles, function (value, key) {\n    if (!isNull(value)) {\n      forEach(elms, function (elm) {\n        if (elm) {\n          elm.style[key] = \"\" + value;\n        }\n      });\n    }\n  });\n}\n/**\r\n * Sets the `display` CSS value to the element.\r\n *\r\n * @param elm     - An element to set a new value to.\r\n * @param display - A new `display` value.\r\n */\n\n\nfunction display(elm, display) {\n  style(elm, {\n    display: display\n  });\n}\n/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\n\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\n\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n/**\r\n * Parses the provided HTML string and returns the first element.\r\n *\r\n * @param html - An HTML string to parse.\r\n *\r\n * @return An Element on success, or otherwise `undefined`.\r\n */\n\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, 'text/html').body);\n}\n/**\r\n * Call the `preventDefault()` of the provided event.\r\n *\r\n * @param e               - An Event object.\r\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\r\n */\n\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n/**\r\n * Returns an element that matches the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return A found element or `null`.\r\n */\n\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\n\n\nfunction queryAll(parent, selector) {\n  return slice(parent.querySelectorAll(selector));\n}\n/**\r\n * Returns a DOMRect object of the provided element.\r\n *\r\n * @param target - An element.\r\n */\n\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\n\n\nfunction remove(nodes) {\n  forEach(nodes, function (node) {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\n\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n/**\r\n * Appends `px` to the provided number.\r\n * If the value is already string, just returns it.\r\n *\r\n * @param value - A value to append `px` to.\r\n *\r\n * @return A string with the CSS unit.\r\n */\n\n\nfunction unit(value) {\n  return isString(value) ? value : value ? value + \"px\" : '';\n}\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\n\n\nfunction assert(condition, message) {\n  if (message === void 0) {\n    message = '';\n  }\n\n  if (!condition) {\n    throw new Error(\"[\" + PROJECT_CODE + \"] \" + message);\n  }\n}\n/**\r\n * Invokes the callback on the next tick.\r\n *\r\n * @param callback - A callback function.\r\n */\n\n\nfunction nextTick(callback) {\n  setTimeout(callback);\n}\n/**\r\n * No operation.\r\n */\n\n\nvar noop = function noop() {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\n\n/**\r\n * The arias of `window.requestAnimationFrame()`.\r\n */\n\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n/**\r\n * Checks if the subject number is between `minOrMax` and `maxOrMin`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param minOrMax  - A min or max number.\r\n * @param maxOrMin  - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\n\n\nfunction between(number, minOrMax, maxOrMin, exclusive) {\n  var min = Math.min(minOrMax, maxOrMin);\n  var max = Math.max(minOrMax, maxOrMin);\n  return exclusive ? min < number && number < max : min <= number && number <= max;\n}\n\nvar max$1 = Math.max,\n    min$1 = Math.min;\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\n\nfunction clamp(number, x, y) {\n  var minimum = min$1(x, y);\n  var maximum = max$1(x, y);\n  return min$1(max$1(minimum, number), maximum);\n}\n/**\r\n * Returns the sign of the provided number.\r\n *\r\n * @param x - A number.\r\n *\r\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\r\n */\n\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nvar min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs,\n    round = Math.round;\n/**\r\n * The component for managing options.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Options component object.\r\n */\n\nfunction Options(Splide, Components, options) {\n  /**\r\n   * Keeps the initial options to apply when no matched query exists.\r\n   */\n  var initialOptions;\n  /**\r\n   * Stores breakpoints with the MediaQueryList object.\r\n   */\n\n  var points;\n  /**\r\n   * Holds the current breakpoint.\r\n   */\n\n  var currPoint;\n  /**\r\n   * Called when the component is constructed.\r\n   */\n\n  function setup() {\n    try {\n      merge(options, JSON.parse(getAttribute(Splide.root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, e.message);\n    }\n\n    initialOptions = merge({}, options);\n  }\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n\n  function mount() {\n    var breakpoints = options.breakpoints;\n\n    if (breakpoints) {\n      points = Object.keys(breakpoints).sort(function (n, m) {\n        return +n - +m;\n      }).map(function (point) {\n        return [point, matchMedia(\"(\" + (options.mediaQuery || 'max') + \"-width:\" + point + \"px)\")];\n      });\n      addEventListener('resize', observe);\n      observe();\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Will be `true` for complete destruction.\r\n   */\n\n\n  function destroy(completely) {\n    if (completely) {\n      removeEventListener('resize', observe);\n    }\n  }\n  /**\r\n   * Observes breakpoints.\r\n   * The `currPoint` may be `undefined`.\r\n   */\n\n\n  function observe() {\n    var item = find(points, function (item) {\n      return item[1].matches;\n    }) || [];\n\n    if (item[0] !== currPoint) {\n      onMatch(currPoint = item[0]);\n    }\n  }\n  /**\r\n   * Called when the media query matches breakpoints.\r\n   *\r\n   * @param point - A matched point, or `undefined` that means no breakpoint matches a media query.\r\n   */\n\n\n  function onMatch(point) {\n    var newOptions = options.breakpoints[point] || initialOptions;\n\n    if (newOptions.destroy) {\n      Splide.options = initialOptions;\n      Splide.destroy(newOptions.destroy === 'completely');\n    } else {\n      if (Splide.state.is(DESTROYED)) {\n        destroy(true);\n        Splide.mount();\n      }\n\n      Splide.options = newOptions;\n    }\n  }\n\n  return {\n    setup: setup,\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * Enumerates slides from left to right.\r\n */\n\n/**\r\n * Enumerates slides from right to left.\r\n */\n\n\nvar RTL = 'rtl';\n/**\r\n * Enumerates slides in a col.\r\n */\n\nvar TTB = 'ttb';\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar ORIENTATION_MAP = {\n  marginRight: ['marginBottom', 'marginLeft'],\n  width: ['height'],\n  autoWidth: ['autoHeight'],\n  fixedWidth: ['fixedHeight'],\n  paddingLeft: ['paddingTop', 'paddingRight'],\n  paddingRight: ['paddingBottom', 'paddingLeft'],\n  left: ['top', 'right'],\n  right: ['bottom', 'left'],\n  x: ['y'],\n  X: ['Y'],\n  pageX: ['pageY'],\n  ArrowLeft: ['ArrowUp', 'ArrowRight'],\n  ArrowRight: ['ArrowDown', 'ArrowLeft']\n};\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\n\nfunction Direction(Splide, Components, options) {\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop     - A property name to translate.\r\n   * @param axisOnly - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   */\n  function resolve(prop, axisOnly) {\n    var direction = options.direction;\n    var index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop][index] || prop;\n  }\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\n\n\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n\n  return {\n    resolve: resolve,\n    orient: orient\n  };\n}\n\nvar CLASS_ROOT = PROJECT_CODE;\nvar CLASS_SLIDER = PROJECT_CODE + \"__slider\";\nvar CLASS_TRACK = PROJECT_CODE + \"__track\";\nvar CLASS_LIST = PROJECT_CODE + \"__list\";\nvar CLASS_SLIDE = PROJECT_CODE + \"__slide\";\nvar CLASS_CLONE = CLASS_SLIDE + \"--clone\";\nvar CLASS_CONTAINER = CLASS_SLIDE + \"__container\";\nvar CLASS_ARROWS = PROJECT_CODE + \"__arrows\";\nvar CLASS_ARROW = PROJECT_CODE + \"__arrow\";\nvar CLASS_ARROW_PREV = CLASS_ARROW + \"--prev\";\nvar CLASS_ARROW_NEXT = CLASS_ARROW + \"--next\";\nvar CLASS_PAGINATION = PROJECT_CODE + \"__pagination\";\nvar CLASS_PAGINATION_PAGE = CLASS_PAGINATION + \"__page\";\nvar CLASS_PROGRESS = PROJECT_CODE + \"__progress\";\nvar CLASS_PROGRESS_BAR = CLASS_PROGRESS + \"__bar\";\nvar CLASS_AUTOPLAY = PROJECT_CODE + \"__autoplay\";\nvar CLASS_PLAY = PROJECT_CODE + \"__play\";\nvar CLASS_PAUSE = PROJECT_CODE + \"__pause\";\nvar CLASS_SPINNER = PROJECT_CODE + \"__spinner\";\nvar CLASS_INITIALIZED = 'is-initialized';\nvar CLASS_ACTIVE = 'is-active';\nvar CLASS_PREV = 'is-prev';\nvar CLASS_NEXT = 'is-next';\nvar CLASS_VISIBLE = 'is-visible';\nvar CLASS_LOADING = 'is-loading';\n/**\r\n * The array with all status classes.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING];\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\nvar EVENT_MOUNTED = 'mounted';\nvar EVENT_READY = 'ready';\nvar EVENT_MOVE = 'move';\nvar EVENT_MOVED = 'moved';\nvar EVENT_CLICK = 'click';\nvar EVENT_ACTIVE = 'active';\nvar EVENT_INACTIVE = 'inactive';\nvar EVENT_VISIBLE = 'visible';\nvar EVENT_HIDDEN = 'hidden';\nvar EVENT_SLIDE_KEYDOWN = 'slide:keydown';\nvar EVENT_REFRESH = 'refresh';\nvar EVENT_UPDATED = 'undated';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_RESIZED = 'resized';\nvar EVENT_DRAG = 'drag';\nvar EVENT_DRAGGING = 'dragging';\nvar EVENT_DRAGGED = 'dragged';\nvar EVENT_SCROLL = 'scroll';\nvar EVENT_SCROLLED = 'scrolled';\nvar EVENT_DESTROY = 'destroy';\nvar EVENT_ARROWS_MOUNTED = 'arrows:mounted';\nvar EVENT_ARROWS_UPDATED = 'arrows:updated';\nvar EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\nvar EVENT_PAGINATION_PAGE = 'pagination:page';\nvar EVENT_PAGINATION_UPDATED = 'pagination:updated';\nvar EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\nvar EVENT_AUTOPLAY_PLAY = 'autoplay:play';\nvar EVENT_AUTOPLAY_PLAYING = 'autoplay:playing';\nvar EVENT_AUTOPLAY_PAUSE = 'autoplay:pause';\nvar EVENT_LAZYLOAD_LOADED = 'lazyload:loaded';\n/**\r\n * The constructor to provided a simple event system.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @return An EventBus object.\r\n */\n\nfunction EventBus() {\n  /**\r\n   * The collection of registered handlers.\r\n   */\n  var handlers = {};\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param callback - A callback function to register.\r\n   * @param key      - Optional. An object for an identifier of the handler.\r\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\r\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\r\n   */\n\n  function on(events, callback, key, priority) {\n    if (priority === void 0) {\n      priority = 10;\n    }\n\n    forEachEvent(events, function (event, namespace) {\n      handlers[event] = handlers[event] || [];\n      push(handlers[event], {\n        event: event,\n        callback: callback,\n        namespace: namespace,\n        priority: priority,\n        key: key\n      }).sort(function (handler1, handler2) {\n        return handler1.priority - handler2.priority;\n      });\n    });\n  }\n  /**\r\n   * Removes event handlers registered by `on()`.\r\n   * If only the event name is provided, all handlers that associate with the event are removed.\r\n   * If the event name and namespace are specified, handlers that associate with the event and namespace are removed.\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param key    - Optional. An object for an identifier of the handler.\r\n   */\n\n\n  function off(events, key) {\n    forEachEvent(events, function (event, namespace) {\n      var eventHandlers = handlers[event];\n      handlers[event] = eventHandlers && eventHandlers.filter(function (handler) {\n        return handler.key ? handler.key !== key : handler.namespace !== namespace;\n      });\n    });\n  }\n  /**\r\n   * Removes all handlers locked by the specified key.\r\n   *\r\n   * @param key - A key.\r\n   */\n\n\n  function offBy(key) {\n    forOwn(handlers, function (eventHandlers, event) {\n      off(event, key);\n    });\n  }\n  /**\r\n   * Triggers callback functions.\r\n   * This accepts additional arguments and passes them to callbacks.\r\n   *\r\n   * @param event - An event name.\r\n   */\n\n\n  function emit(event) {\n    var _arguments = arguments;\n    (handlers[event] || []).forEach(function (handler) {\n      handler.callback.apply(handler, slice(_arguments, 1));\n    });\n  }\n  /**\r\n   * Removes all handlers.\r\n   */\n\n\n  function destroy() {\n    handlers = {};\n  }\n  /**\r\n   * Parses provided events and iterates over them.\r\n   *\r\n   * @param events   - An event or events.\r\n   * @param iteratee - An iteratee function.\r\n   */\n\n\n  function forEachEvent(events, iteratee) {\n    toArray(events).join(' ').split(' ').forEach(function (eventNS) {\n      var fragments = eventNS.split('.');\n      iteratee(fragments[0], fragments[1]);\n    });\n  }\n\n  return {\n    on: on,\n    off: off,\n    offBy: offBy,\n    emit: emit,\n    destroy: destroy\n  };\n}\n/**\r\n * The function that provides interface for internal and native events.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide - A Splide instance.\r\n *\r\n * @return A collection of interface functions.\r\n */\n\n\nfunction EventInterface(Splide) {\n  /**\r\n   * Holds the event object.\r\n   */\n  var event = Splide.event;\n  /**\r\n   * The key for events.\r\n   */\n\n  var key = {};\n  /**\r\n   * Stores all handlers that listen to native events.\r\n   */\n\n  var listeners = [];\n  /**\r\n   * Registers an event handler with an unique key.\r\n   * It can only be removed by `off()` method below.\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param callback - A callback function to register.\r\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\r\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\r\n   */\n\n  function on(events, callback, priority) {\n    event.on(events, callback, key, priority);\n  }\n  /**\r\n   * Removes event handlers registered by `on()`.\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   */\n\n\n  function off(events) {\n    event.off(events, key);\n  }\n  /**\r\n   * Listens to native events.\r\n   * Splide#destory() will remove all registered listeners.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event or events to listen to.\r\n   * @param callback - A callback function.\r\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\r\n   */\n\n\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, function (target, event) {\n      listeners.push([target, event, callback, options]);\n      target.addEventListener(event, callback, options);\n    });\n  }\n  /**\r\n   * Removes the event handler.\r\n   *\r\n   * @param targets - A target element, the window object or the document object.\r\n   * @param events  - An event name or names to remove.\r\n   */\n\n\n  function unbind(targets, events) {\n    forEachEvent(targets, events, function (target, event) {\n      listeners = listeners.filter(function (listener) {\n        if (listener[0] === target && listener[1] === event) {\n          target.removeEventListener(event, listener[2], listener[3]);\n          return false;\n        }\n\n        return true;\n      });\n    });\n  }\n  /**\r\n   * Iterates over each target and event.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names.\r\n   * @param iteratee - An iteratee function.\r\n   */\n\n\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, function (target) {\n      if (target) {\n        events.split(' ').forEach(iteratee.bind(null, target));\n      }\n    });\n  }\n  /**\r\n   * Removes all listeners.\r\n   */\n\n\n  function destroy() {\n    listeners = listeners.filter(function (data) {\n      return unbind(data[0], data[1]);\n    });\n    event.offBy(key);\n  }\n  /**\r\n   * Invokes destroy when the slider is destroyed.\r\n   */\n\n\n  event.on(EVENT_DESTROY, destroy, key);\n  return {\n    on: on,\n    off: off,\n    emit: event.emit,\n    bind: bind,\n    unbind: unbind,\n    destroy: destroy\n  };\n}\n/**\r\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param interval   - The interval duration in milliseconds.\r\n * @param onInterval - The callback fired on every interval.\r\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\r\n * @param limit      - Optional. Limits the number of interval.\r\n */\n\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  var now = Date.now;\n  /**\r\n   * The time when the interval starts.\r\n   */\n\n  var startTime;\n  /**\r\n   * The current progress rate.\r\n   */\n\n  var rate = 0;\n  /**\r\n   * The animation frame ID.\r\n   */\n\n  var id;\n  /**\r\n   * Indicates whether the interval is currently paused or not.\r\n   */\n\n  var paused = true;\n  /**\r\n   * The loop count. This only works when the `limit` argument is provided.\r\n   */\n\n  var count = 0;\n  /**\r\n   * The update function called on every animation frame.\r\n   */\n\n  function update() {\n    if (!paused) {\n      var elapsed = now() - startTime;\n\n      if (elapsed >= interval) {\n        rate = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n\n      if (rate === 1) {\n        onInterval();\n\n        if (limit && ++count >= limit) {\n          pause();\n          return;\n        }\n      }\n\n      raf(update);\n    }\n  }\n  /**\r\n   * Starts the interval.\r\n   *\r\n   * @param resume - Optional. Whether to resume the paused progress or not.\r\n   */\n\n\n  function start(resume) {\n    !resume && cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    raf(update);\n  }\n  /**\r\n   * Pauses the interval.\r\n   */\n\n\n  function pause() {\n    paused = true;\n  }\n  /**\r\n   * Rewinds the current progress.\r\n   */\n\n\n  function rewind() {\n    startTime = now();\n    rate = 0;\n\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n  /**\r\n   * Cancels the interval.\r\n   */\n\n\n  function cancel() {\n    cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n  /**\r\n   * Checks if the interval is paused or not.\r\n   *\r\n   * @return `true` if the interval is paused, or otherwise `false`.\r\n   */\n\n\n  function isPaused() {\n    return paused;\n  }\n\n  return {\n    start: start,\n    rewind: rewind,\n    pause: pause,\n    cancel: cancel,\n    isPaused: isPaused\n  };\n}\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param initialState - Specifies the initial state.\r\n */\n\n\nfunction State(initialState) {\n  /**\r\n   * The current state.\r\n   */\n  var state = initialState;\n  /**\r\n   * Sets a new state.\r\n   *\r\n   * @param value - A new state value.\r\n   */\n\n  function set(value) {\n    state = value;\n  }\n  /**\r\n   * Checks if the current state matches the provided one.\r\n   *\r\n   * @param states - A state to check.\r\n   *\r\n   * @return `true` if the current state is the provided one.\r\n   */\n\n\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n\n  return {\n    set: set,\n    is: is\n  };\n}\n/**\r\n * Returns the throttled function.\r\n *\r\n * @param func     - A function to throttle.\r\n * @param duration - Optional. Throttle duration in milliseconds.\r\n *\r\n * @return A throttled function.\r\n */\n\n\nfunction Throttle(func, duration) {\n  var interval;\n\n  function throttled() {\n    var _arguments2 = arguments,\n        _this = this;\n\n    if (!interval) {\n      interval = RequestInterval(duration || 0, function () {\n        func.apply(_this, _arguments2);\n        interval = null;\n      }, null, 1);\n      interval.start();\n    }\n  }\n\n  return throttled;\n}\n/**\r\n * Formats a string.\r\n *\r\n * @param string       - A string to format.\r\n * @param replacements - A replacement or replacements.\r\n *\r\n * @return A formatted string.\r\n */\n\n\nfunction format(string, replacements) {\n  forEach(replacements, function (replacement) {\n    string = string.replace('%s', \"\" + replacement);\n  });\n  return string;\n}\n/**\r\n * Pads the number with 0.\r\n *\r\n * @param number - A number to pad.\r\n *\r\n * @return string - Padded number.\r\n */\n\n\nfunction pad(number) {\n  return number < 10 ? \"0\" + number : \"\" + number;\n}\n/**\r\n * Stores unique IDs.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar ids = {};\n/**\r\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\r\n *\r\n * @param prefix - A prefix for the ID.\r\n */\n\nfunction uniqueId(prefix) {\n  return \"\" + prefix + pad(ids[prefix] = (ids[prefix] || 0) + 1);\n}\n/**\r\n * The component that collects and handles elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Elements component object.\r\n */\n\n\nfunction Elements(Splide, Components, options) {\n  var _EventInterface = EventInterface(Splide),\n      on = _EventInterface.on;\n\n  var root = Splide.root;\n  var elements = {};\n  /**\r\n   * Stores all slide elements.\r\n   */\n\n  var slides = [];\n  /**\r\n   * Stores all root classes.\r\n   */\n\n  var classes;\n  /**\r\n   * The slider element that may be `undefined`.\r\n   */\n\n  var slider;\n  /**\r\n   * The track element.\r\n   */\n\n  var track;\n  /**\r\n   * The list element.\r\n   */\n\n  var list;\n  /**\r\n   * Called when the component is constructed.\r\n   */\n\n  function setup() {\n    collect();\n    identify();\n    addClass(root, classes = getClasses());\n  }\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n\n  function mount() {\n    on(EVENT_REFRESH, refresh);\n    on(EVENT_UPDATED, update);\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    empty(slides);\n    removeClass(root, classes);\n  }\n  /**\r\n   * Recollects slide elements.\r\n   */\n\n\n  function refresh() {\n    destroy();\n    setup();\n  }\n  /**\r\n   * Updates the status of elements.\r\n   */\n\n\n  function update() {\n    removeClass(root, classes);\n    addClass(root, classes = getClasses());\n  }\n  /**\r\n   * Collects elements which the slider consists of.\r\n   */\n\n\n  function collect() {\n    slider = child(root, \".\" + CLASS_SLIDER);\n    track = query(root, \".\" + CLASS_TRACK);\n    list = child(track, \".\" + CLASS_LIST);\n    assert(track && list, 'Missing a track/list element.');\n    push(slides, children(list, \".\" + CLASS_SLIDE + \":not(.\" + CLASS_CLONE + \")\"));\n    var autoplay = find(\".\" + CLASS_AUTOPLAY);\n    var arrows = find(\".\" + CLASS_ARROWS);\n    assign(elements, {\n      root: root,\n      slider: slider,\n      track: track,\n      list: list,\n      slides: slides,\n      arrows: arrows,\n      prev: query(arrows, \".\" + CLASS_ARROW_PREV),\n      next: query(arrows, \".\" + CLASS_ARROW_NEXT),\n      bar: query(find(\".\" + CLASS_PROGRESS), \".\" + CLASS_PROGRESS_BAR),\n      play: query(autoplay, \".\" + CLASS_PLAY),\n      pause: query(autoplay, \".\" + CLASS_PAUSE)\n    });\n  }\n  /**\r\n   * Assigns unique IDs to essential elements.\r\n   */\n\n\n  function identify() {\n    var id = root.id || uniqueId(PROJECT_CODE);\n    root.id = id;\n    track.id = track.id || id + \"-track\";\n    list.id = list.id || id + \"-list\";\n  }\n  /**\r\n   * Finds an element only in children of the root or slider element.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\n\n\n  function find(selector) {\n    return child(root, selector) || child(slider, selector);\n  }\n  /**\r\n   * Return an array with classes for the root element.\r\n   *\r\n   * @return An array with classes.\r\n   */\n\n\n  function getClasses() {\n    return [CLASS_ROOT + \"--\" + options.type, CLASS_ROOT + \"--\" + options.direction, options.drag && CLASS_ROOT + \"--draggable\", options.isNavigation && CLASS_ROOT + \"--nav\", CLASS_ACTIVE];\n  }\n\n  return assign(elements, {\n    setup: setup,\n    mount: mount,\n    destroy: destroy\n  });\n}\n/**\r\n * The component for managing styles of the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @return A Style component object.\r\n */\n\n\nfunction Style() {\n  /**\r\n   * The style element for the slider.\r\n   */\n  var style;\n  /**\r\n   * The CSSStyleSheet object of the created style element.\r\n   */\n\n  var sheet;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    style = create('style', {}, document.head);\n    sheet = style.sheet;\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    remove(style);\n    sheet = null;\n  }\n  /**\r\n   * Registers the style for the selector.\r\n   *\r\n   * @param selector - A selector string.\r\n   * @param prop     - A CSS property, accepting the camel case.\r\n   * @param value    - A CSS value.\r\n   */\n\n\n  function rule(selector, prop, value) {\n    var _sheet = sheet,\n        cssRules = _sheet.cssRules;\n    var cssRule = find(cssRules, function (cssRule) {\n      return isCSSStyleRule(cssRule) && cssRule.selectorText === selector;\n    }) || cssRules[sheet.insertRule(selector + \"{}\", 0)];\n\n    if (isCSSStyleRule(cssRule)) {\n      cssRule.style[prop] = \"\" + value;\n    }\n  }\n  /**\r\n   * Registers the style by the element or the ID.\r\n   *\r\n   * @param target - A target element or ID.\r\n   * @param prop   - A CSS property, accepting the camel case.\r\n   * @param value  - A CSS value.\r\n   */\n\n\n  function ruleBy(target, prop, value) {\n    rule(\"#\" + (isHTMLElement(target) ? target.id : target), prop, value);\n  }\n  /**\r\n   * Checks if the provided rule is a CSSStyleRule instance or not.\r\n   *\r\n   * @param cssRule - An instance to check.\r\n   *\r\n   * @return `true` if the cssRule is an instance of CSSStyleRule, or otherwise `false`.\r\n   */\n\n\n  function isCSSStyleRule(cssRule) {\n    return cssRule instanceof CSSStyleRule;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    rule: rule,\n    ruleBy: ruleBy\n  };\n}\n\nvar ROLE = 'role';\nvar ARIA_CONTROLS = 'aria-controls';\nvar ARIA_CURRENT = 'aria-current';\nvar ARIA_LABEL = 'aria-label';\nvar ARIA_HIDDEN = 'aria-hidden';\nvar TAB_INDEX = 'tabindex';\nvar DISABLED = 'disabled';\n/**\r\n * The array with all attributes.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar ALL_ATTRIBUTES = [ROLE, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_HIDDEN, TAB_INDEX, DISABLED];\n/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar SLIDE = 'slide';\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar LOOP = 'loop';\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar FADE = 'fade';\n/**\r\n * The sub component for managing each slide.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param index      - A slide index.\r\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not clone.\r\n * @param slide      - A slide element.\r\n *\r\n * @return A Slide sub component.\r\n */\n\nfunction Slide$1(Splide, index, slideIndex, slide) {\n  var _EventInterface2 = EventInterface(Splide),\n      on = _EventInterface2.on,\n      emit = _EventInterface2.emit,\n      bind = _EventInterface2.bind,\n      destroyEvents = _EventInterface2.destroy;\n\n  var Components = Splide.Components,\n      root = Splide.root,\n      options = Splide.options;\n  var isNavigation = options.isNavigation,\n      updateOnMove = options.updateOnMove;\n  var resolve = Components.Direction.resolve;\n  var isClone = slideIndex > -1;\n  var container = child(slide, \".\" + CLASS_CONTAINER);\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    var _this2 = this;\n\n    init();\n    bind(slide, 'click keydown', function (e) {\n      emit(e.type === 'click' ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, _this2, e);\n    });\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_RESIZED, EVENT_SCROLLED], update.bind(this));\n\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove);\n    }\n  }\n  /**\r\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\r\n   *\r\n   * @param next - A next index.\r\n   * @param prev - A previous index.\r\n   * @param dest - A destination index.\r\n   */\n\n\n  function onMove(next, prev, dest) {\n    if (dest === index) {\n      updateActivity.call(this, true);\n    }\n\n    update.call(this);\n  }\n  /**\r\n   * Initializes the component.\r\n   */\n\n\n  function init() {\n    if (!isClone) {\n      slide.id = root.id + \"-slide\" + pad(index + 1);\n    }\n\n    if (isNavigation) {\n      if (!isHTMLButtonElement(slide)) {\n        setAttribute(slide, ROLE, 'button');\n      }\n\n      var idx = isClone ? slideIndex : index;\n      var label = format(options.i18n.slideX, idx + 1);\n      var controls = Splide.splides.map(function (splide) {\n        return splide.root.id;\n      }).join(' ');\n      setAttribute(slide, ARIA_LABEL, label);\n      setAttribute(slide, ARIA_CONTROLS, controls);\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    destroyEvents();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n  }\n  /**\r\n   * Updates attribute and classes of the slide.\r\n   */\n\n\n  function update() {\n    if (Components.Controller) {\n      var currIndex = Splide.index;\n      updateActivity.call(this, isActive());\n      updateVisibility.call(this, isVisible());\n      toggleClass(slide, CLASS_PREV, index === currIndex - 1);\n      toggleClass(slide, CLASS_NEXT, index === currIndex + 1);\n    }\n  }\n  /**\r\n   * Updates the status related with activity.\r\n   *\r\n   * @param active - Set `true` if the slide is active.\r\n   */\n\n\n  function updateActivity(active) {\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n\n      if (isNavigation) {\n        setAttribute(slide, ARIA_CURRENT, active || null);\n      }\n\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, this);\n    }\n  }\n  /**\r\n   * Updates the status related with visibility.\r\n   *\r\n   * @param visible - Set `true` if the slide is visible.\r\n   */\n\n\n  function updateVisibility(visible) {\n    setAttribute(slide, ARIA_HIDDEN, !visible || null);\n    setAttribute(slide, TAB_INDEX, visible && options.slideFocus ? 0 : null);\n\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, this);\n    }\n  }\n  /**\r\n   * Adds a CSS rule to the slider or the container.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\n\n\n  function rule(prop, value, useContainer) {\n    var selector = \"#\" + slide.id + (container && useContainer ? \" > .\" + CLASS_CONTAINER : '');\n    Components.Style.rule(selector, prop, value);\n  }\n  /**\r\n   * Checks if the slide is active or not.\r\n   *\r\n   * @return `true` if the slide is active.\r\n   */\n\n\n  function isActive() {\n    return Splide.index === index;\n  }\n  /**\r\n   * Checks if the slide is visible or not.\r\n   */\n\n\n  function isVisible() {\n    if (Splide.is(FADE)) {\n      return isActive();\n    }\n\n    var trackRect = rect(Components.Elements.track);\n    var slideRect = rect(slide);\n    var left = resolve('left');\n    var right = resolve('right');\n    return floor(trackRect[left]) <= slideRect[left] && slideRect[right] <= ceil(trackRect[right]);\n  }\n  /**\r\n   * Calculates how far this slide is from another slide and\r\n   * returns `true` if the distance is within the given number.\r\n   *\r\n   * @param from     - An index of a base slide.\r\n   * @param distance - `true` if the slide is within this number.\r\n   *\r\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\r\n   */\n\n\n  function isWithin(from, distance) {\n    var diff = abs(from - index);\n\n    if (!Splide.is(SLIDE) && !isClone) {\n      diff = min(diff, Splide.length - diff);\n    }\n\n    return diff <= distance;\n  }\n\n  return {\n    index: index,\n    slideIndex: slideIndex,\n    slide: slide,\n    container: container,\n    isClone: isClone,\n    mount: mount,\n    destroy: destroy,\n    rule: rule,\n    isWithin: isWithin\n  };\n}\n/**\r\n * The component for managing all slides include clones.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Slides component object.\r\n */\n\n\nfunction Slides(Splide, Components, options) {\n  var _EventInterface3 = EventInterface(Splide),\n      on = _EventInterface3.on,\n      emit = _EventInterface3.emit,\n      bind = _EventInterface3.bind;\n\n  var _Components$Elements = Components.Elements,\n      slides = _Components$Elements.slides,\n      list = _Components$Elements.list;\n  /**\r\n   * Stores all SlideComponent objects.\r\n   */\n\n  var Slides = [];\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n  }\n  /**\r\n   * Initializes the component.\r\n   */\n\n\n  function init() {\n    slides.forEach(function (slide, index) {\n      register(slide, index, -1);\n    });\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    forEach$1(function (Slide) {\n      Slide.destroy();\n    });\n    empty(Slides);\n  }\n  /**\r\n   * Discards all Slide components and regenerates them.\r\n   */\n\n\n  function refresh() {\n    destroy();\n    init();\n  }\n  /**\r\n   * Registers a slide element and creates a Slide object.\r\n   *\r\n   * @param slide      - A slide element to register.\r\n   * @param index      - A slide index.\r\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\r\n   */\n\n\n  function register(slide, index, slideIndex) {\n    var object = Slide$1(Splide, index, slideIndex, slide);\n    object.mount();\n    Slides.push(object);\n  }\n  /**\r\n   * Returns all Slide objects.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return An array with Slide objects.\r\n   */\n\n\n  function get(excludeClones) {\n    return excludeClones ? filter(function (Slide) {\n      return !Slide.isClone;\n    }) : Slides;\n  }\n  /**\r\n   * Returns slides in the specified page.\r\n   *\r\n   * @param page - A page index.\r\n   *\r\n   * @return An array with slides that belong to the page.\r\n   */\n\n\n  function getIn(page) {\n    var Controller = Components.Controller;\n    var index = Controller.toIndex(page);\n    var max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter(function (Slide) {\n      return between(Slide.index, index, index + max - 1);\n    });\n  }\n  /**\r\n   * Returns a Slide object at the specified index.\r\n   *\r\n   * @param index - A slide index.\r\n   *\r\n   * @return A Slide object if available, or otherwise `undefined`.\r\n   */\n\n\n  function getAt(index) {\n    return filter(index)[0];\n  }\n  /**\r\n   * Inserts a slide or slides at a specified index.\r\n   *\r\n   * @param items - A slide element, an HTML string or an array with them.\r\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\r\n   */\n\n\n  function add(items, index) {\n    forEach(items, function (slide) {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n\n      if (isHTMLElement(slide)) {\n        var ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, emit.bind(null, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\n\n\n  function remove$1(matcher) {\n    remove(filter(matcher).map(function (Slide) {\n      return Slide.slide;\n    }));\n    emit(EVENT_REFRESH);\n  }\n  /**\r\n   * Iterates over Slide objects by the iteratee function.\r\n   *\r\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   */\n\n\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n  /**\r\n   * Filters Slides by the matcher\r\n   * that can be an index, an array with indices, a selector, or an predicate function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an predicate function.\r\n   *\r\n   * @return An array with SlideComponent objects.\r\n   */\n\n\n  function filter(matcher) {\n    return Slides.filter(isFunction(matcher) ? matcher : function (Slide) {\n      return isString(matcher) ? matches(Slide.slide, matcher) : includes(toArray(matcher), Slide.index);\n    });\n  }\n  /**\r\n   * Adds a CSS rule to all slides or containers.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\n\n\n  function rule(prop, value, useContainer) {\n    forEach$1(function (Slide) {\n      Slide.rule(prop, value, useContainer);\n    });\n  }\n  /**\r\n   * Invokes the callback after all images in the element are loaded.\r\n   *\r\n   * @param elm      - An element that may contain images.\r\n   * @param callback - A callback function.\r\n   */\n\n\n  function observeImages(elm, callback) {\n    var images = queryAll(elm, 'img');\n    var length = images.length;\n\n    if (length) {\n      images.forEach(function (img) {\n        bind(img, 'load error', function () {\n          if (! --length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n  /**\r\n   * Returns the length of slides.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return The length of slides.\r\n   */\n\n\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides.length;\n  }\n  /**\r\n   * Checks if the number of slides is over than the `perPage` option, including clones.\r\n   *\r\n   * @return `true` if there are enough slides, or otherwise `false`.\r\n   */\n\n\n  function isEnough() {\n    return Slides.length > options.perPage;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    register: register,\n    get: get,\n    getIn: getIn,\n    getAt: getAt,\n    add: add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter: filter,\n    rule: rule,\n    getLength: getLength,\n    isEnough: isEnough\n  };\n}\n/**\r\n * The component that generates clones for the loop slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Clones component object.\r\n */\n\n\nfunction Clones(Splide, Components, options) {\n  var _EventInterface4 = EventInterface(Splide),\n      on = _EventInterface4.on,\n      emit = _EventInterface4.emit;\n\n  var Elements = Components.Elements,\n      Slides = Components.Slides;\n  var resolve = Components.Direction.resolve;\n  var clones = [];\n  /**\r\n   * Keeps the current number of clones.\r\n   */\n\n  var cloneCount;\n  /**\r\n   * The index used for generating IDs.\r\n   */\n\n  var cloneIndex;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, refresh);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n  }\n  /**\r\n   * Removes all clones if available, and generates new clones.\r\n   */\n\n\n  function init() {\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n    }\n  }\n  /**\r\n   * Destroys clones.\r\n   */\n\n\n  function destroy() {\n    remove(clones);\n    empty(clones);\n  }\n  /**\r\n   * Discards all clones and regenerates them.\r\n   * Must do this before the Elements component collects slide elements.\r\n   */\n\n\n  function refresh() {\n    destroy();\n    init();\n  }\n  /**\r\n   * Observes the required clone count and refreshes the slider if necessary.\r\n   */\n\n\n  function observe() {\n    if (cloneCount !== computeCloneCount()) {\n      emit(EVENT_REFRESH);\n    }\n  }\n  /**\r\n   * Generates the specified number of clones.\r\n   *\r\n   * @param count - The number of clones to generate for each side.\r\n   */\n\n\n  function generate(count) {\n    var slides = Slides.get().slice();\n    var length = slides.length;\n\n    if (length) {\n      cloneIndex = 0;\n\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n\n      slides.slice(-count).concat(slides.slice(0, count)).forEach(function (Slide, index) {\n        var isHead = index < count;\n        var clone = cloneDeep(Slide.slide);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n  /**\r\n   * Deeply clones the provided element with removing the ID attribute.\r\n   *\r\n   * @param elm - An element to clone.\r\n   *\r\n   * @return A cloned element.\r\n   */\n\n\n  function cloneDeep(elm) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = Splide.root.id + \"-clone\" + pad(++cloneIndex);\n    return clone;\n  }\n  /**\r\n   * Returns the number of elements to generate.\r\n   * This always returns 0 if the slider type is not `'loop'`.\r\n   *\r\n   * @return The number of clones.\r\n   */\n\n\n  function computeCloneCount() {\n    var clones = options.clones;\n\n    if (!Splide.is(LOOP)) {\n      clones = 0;\n    } else if (!clones) {\n      var fixedSize = options[resolve('fixedWidth')];\n      var fixedCount = fixedSize && ceil(rect(Elements.track)[resolve('width')] / fixedSize);\n      var baseCount = fixedCount || options[resolve('autoWidth')] && Splide.length || options.perPage;\n      clones = baseCount * (options.drag ? (options.flickMaxPages || 1) + 1 : 2);\n    }\n\n    return clones;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * The component that layouts slider components and provides methods for dimensions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Layout component object.\r\n */\n\n\nfunction Layout(Splide, Components, options) {\n  var _EventInterface5 = EventInterface(Splide),\n      on = _EventInterface5.on,\n      bind = _EventInterface5.bind,\n      emit = _EventInterface5.emit;\n\n  var Slides = Components.Slides;\n  var ruleBy = Components.Style.ruleBy;\n  var resolve = Components.Direction.resolve;\n  var _Components$Elements2 = Components.Elements,\n      root = _Components$Elements2.root,\n      track = _Components$Elements2.track,\n      list = _Components$Elements2.list;\n  var getAt = Slides.getAt;\n  var vertical = options.direction === TTB;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    bind(window, 'resize load', Throttle(emit.bind(this, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n  /**\r\n   * Initializes the component on `mount` or `updated`.\r\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\r\n   */\n\n\n  function init() {\n    ruleBy(root, 'maxWidth', unit(options.width));\n    ruleBy(track, resolve('paddingLeft'), cssPadding(false));\n    ruleBy(track, resolve('paddingRight'), cssPadding(true));\n    Slides.rule(resolve('marginRight'), unit(options.gap));\n    Slides.rule('width', cssSlideWidth());\n    setSlidesHeight();\n    resize();\n  }\n  /**\r\n   * Updates dimensions of some elements when the slider is resized.\r\n   */\n\n\n  function resize() {\n    ruleBy(track, 'height', cssTrackHeight());\n    options.heightRatio && setSlidesHeight();\n    emit(EVENT_RESIZED);\n  }\n  /**\r\n   * Updates the height of slides or their container elements if available.\r\n   */\n\n\n  function setSlidesHeight() {\n    Slides.rule('height', cssSlideHeight(), true);\n  }\n  /**\r\n   * Parses the padding option and returns the value for each side.\r\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value as a CSS string.\r\n   */\n\n\n  function cssPadding(right) {\n    var padding = options.padding;\n    var prop = resolve(right ? 'right' : 'left', true);\n    return padding ? unit(padding[prop] || (isObject(padding) ? '0' : padding)) : '';\n  }\n  /**\r\n   * Returns the height of the track element as a CSS string.\r\n   *\r\n   * @return The height of the track.\r\n   */\n\n\n  function cssTrackHeight() {\n    var height = '';\n\n    if (vertical) {\n      height = cssHeight();\n      assert(height, '\"height\" or \"heightRatio\" is missing.');\n      var paddingTop = cssPadding(false);\n      var paddingBottom = cssPadding(true);\n\n      if (paddingTop || paddingBottom) {\n        height = \"calc(\" + height;\n        height += \"\" + (paddingTop ? \" - \" + paddingTop : '') + (paddingBottom ? \" - \" + paddingBottom : '') + \")\";\n      }\n    }\n\n    return height;\n  }\n  /**\r\n   * Converts options related with height to a CSS string.\r\n   *\r\n   * @return The height as a CSS string if available, or otherwise an empty string.\r\n   */\n\n\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n  /**\r\n   * Returns the width of the slide as a CSS string.\r\n   *\r\n   * @return The width of the slide.\r\n   */\n\n\n  function cssSlideWidth() {\n    return options.autoWidth ? '' : unit(options.fixedWidth) || (vertical ? '' : cssSlideSize());\n  }\n  /**\r\n   * Returns the height of the slide as a CSS string.\r\n   *\r\n   * @return The height of the slide.\r\n   */\n\n\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? '' : cssSlideSize() : cssHeight());\n  }\n  /**\r\n   * Returns the CSS string for slide width or height without gap.\r\n   *\r\n   * @return The CSS string for slide width or height.\r\n   */\n\n\n  function cssSlideSize() {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  }\n  /**\r\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @return The size of the track element in pixel.\r\n   */\n\n\n  function listSize() {\n    return rect(list)[resolve('width')];\n  }\n  /**\r\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @param index      - Optional. A slide index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\r\n   *\r\n   * @return The size of the specified slide element in pixel.\r\n   */\n\n\n  function slideSize(index, withoutGap) {\n    var Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve('width')] + (withoutGap ? 0 : getGap()) : 0;\n  }\n  /**\r\n   * Returns the total width or height of slides from 0 to the specified index.\r\n   *\r\n   * @param index      - A slide index. If omitted, uses the last index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\r\n   */\n\n\n  function totalSize(index, withoutGap) {\n    var Slide = getAt(index);\n\n    if (Slide) {\n      var right = rect(Slide.slide)[resolve('right')];\n      var left = rect(list)[resolve('left')];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n\n    return 0;\n  }\n  /**\r\n   * Returns the slider size without clones.\r\n   *\r\n   * @return The slider size.\r\n   */\n\n\n  function sliderSize() {\n    var firstSlide = getAt(0);\n    var lastSlide = getAt(Slides.getLength(true) - 1);\n\n    if (firstSlide && lastSlide) {\n      return rect(lastSlide.slide)[resolve('right')] - rect(firstSlide.slide)[resolve('left')];\n    }\n\n    return 0;\n  }\n  /**\r\n   * Returns the gap value.\r\n   *\r\n   *\r\n   * @return The gap value in pixel.\r\n   */\n\n\n  function getGap() {\n    var Slide = getAt(0);\n    return Slide ? parseFloat(style(Slide.slide, resolve('marginRight'))) || 0 : 0;\n  }\n  /**\r\n   * Returns the padding value.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value in pixel.\r\n   */\n\n\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(\"padding\" + (right ? 'Right' : 'Left'), true))) || 0;\n  }\n\n  return {\n    mount: mount,\n    listSize: listSize,\n    slideSize: slideSize,\n    sliderSize: sliderSize,\n    totalSize: totalSize,\n    getPadding: getPadding\n  };\n}\n/**\r\n * The component for moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Move component object.\r\n */\n\n\nfunction Move(Splide, Components, options) {\n  var _EventInterface6 = EventInterface(Splide),\n      on = _EventInterface6.on,\n      emit = _EventInterface6.emit;\n\n  var _Components$Layout = Components.Layout,\n      slideSize = _Components$Layout.slideSize,\n      getPadding = _Components$Layout.getPadding,\n      totalSize = _Components$Layout.totalSize,\n      listSize = _Components$Layout.listSize,\n      sliderSize = _Components$Layout.sliderSize;\n  var _Components$Direction = Components.Direction,\n      resolve = _Components$Direction.resolve,\n      orient = _Components$Direction.orient;\n  var _Components$Elements3 = Components.Elements,\n      list = _Components$Elements3.list,\n      track = _Components$Elements3.track;\n  /**\r\n   * Indicates whether the slider is just looping or not.\r\n   */\n\n  var looping;\n  /**\r\n   * Indicates whether the component can move the slider or not.\r\n   */\n\n  var waiting;\n  /**\r\n   * Keeps the current position.\r\n   */\n\n  var currPosition = 0;\n  /**\r\n   * Keeps the rate of position to the slider width.\r\n   */\n\n  var positionRate = 0;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    on([EVENT_RESIZE, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n  /**\r\n   * Repositions the slider.\r\n   */\n\n\n  function reposition() {\n    if (options.drag !== 'free') {\n      jump(Splide.index);\n    } else {\n      if (!options[resolve('fixedWidth')] && !options[resolve('autoWidth')]) {\n        translate(listSize() * positionRate);\n      }\n\n      if (isExceededMax(currPosition)) {\n        translate(getLimit(true));\n      }\n    }\n  }\n  /**\r\n   * Goes to the slide at the specified index with the Transition component.\r\n   *\r\n   * @param dest  - A destination index to go to.\r\n   * @param index - A slide index.\r\n   * @param prev  - A previous index.\r\n   */\n\n\n  function move(dest, index, prev) {\n    if (!isBusy()) {\n      var position = getPosition();\n      looping = dest !== index;\n      waiting = options.waitForTransition;\n      Splide.state.set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Components.Transition.start(dest, function () {\n        onMoved(dest, index, prev, position);\n      });\n    }\n  }\n  /**\r\n   * Called after the transition ends.\r\n   *\r\n   * @param dest        - A destination index to go to.\r\n   * @param index       - A slide index.\r\n   * @param prev        - A previous index.\r\n   * @param oldPosition - An old position.\r\n   */\n\n\n  function onMoved(dest, index, prev, oldPosition) {\n    if (looping) {\n      jump(index);\n      looping = false;\n    }\n\n    waiting = false;\n    Splide.state.set(IDLE);\n    emit(EVENT_MOVED, index, prev, dest);\n\n    if (options.trimSpace === 'move' && dest !== prev && oldPosition === getPosition()) {\n      Components.Controller.go(dest > prev ? '>' : '<');\n    }\n  }\n  /**\r\n   * Jumps to the slide at the specified index.\r\n   *\r\n   * @param index - An index to jump to.\r\n   */\n\n\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n  /**\r\n   * Moves the slider to the specified position.\r\n   *\r\n   * @param position - The destination.\r\n   */\n\n\n  function translate(position) {\n    currPosition = loop(position);\n    positionRate = currPosition / listSize();\n    Components.Style.ruleBy(list, 'transform', \"translate\" + resolve('X') + \"(\" + currPosition + \"px)\");\n  }\n  /**\r\n   * Loops the provided position if it exceeds limits.\r\n   *\r\n   * @param position - A position to loop.\r\n   */\n\n\n  function loop(position) {\n    if (!looping && Splide.is(LOOP)) {\n      var diff = position - currPosition;\n      var exceededMin = isExceededMin(position);\n      var exceededMax = isExceededMax(position);\n\n      if (exceededMin && diff > 0 || exceededMax && diff < 0) {\n        position += orient(sliderSize() * (exceededMin ? 1 : -1));\n      }\n    }\n\n    return position;\n  }\n  /**\r\n   * Cancels transition.\r\n   */\n\n\n  function cancel() {\n    translate(getPosition());\n    Components.Transition.cancel();\n  }\n  /**\r\n   * Returns the closest index to the position.\r\n   *\r\n   * @param position - A position to convert.\r\n   *\r\n   * @return The closest index to the position.\r\n   */\n\n\n  function toIndex(position) {\n    var Slides = Components.Slides.get();\n    var index = 0;\n    var minDistance = Infinity;\n\n    for (var i = 0; i < Slides.length; i++) {\n      var slideIndex = Slides[i].index;\n      var distance = abs(toPosition(slideIndex) - position);\n\n      if (distance < minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n  /**\r\n   * Converts the slide index to the position.\r\n   *\r\n   * @param index    - An index to convert.\r\n   * @param trimming - Optional. Whether to trim edge spaces or not.\r\n   *\r\n   * @return The position corresponding with the index.\r\n   */\n\n\n  function toPosition(index, trimming) {\n    var position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n  /**\r\n   * Returns the current position.\r\n   *\r\n   * @return The position of the list element.\r\n   */\n\n\n  function getPosition() {\n    var left = resolve('left');\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n  /**\r\n   * Trims spaces on the edge of the slider.\r\n   *\r\n   * @param position - A position to trim.\r\n   *\r\n   * @return A trimmed position.\r\n   */\n\n\n  function trim(position) {\n    if (options.trimSpace && Splide.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize() - listSize()));\n    }\n\n    return position;\n  }\n  /**\r\n   * Returns the offset amount.\r\n   *\r\n   * @param index - An index.\r\n   */\n\n\n  function offset(index) {\n    var focus = options.focus;\n\n    if (focus === 'center') {\n      return (listSize() - slideSize(index, true)) / 2;\n    }\n\n    return (+focus || 0) * slideSize(index);\n  }\n  /**\r\n   * Returns the limit number that the slider can move to.\r\n   *\r\n   * @param max - Determines whether to return the maximum or minimum limit.\r\n   *\r\n   * @return The border number.\r\n   */\n\n\n  function getLimit(max) {\n    var trimming = !!options.trimSpace;\n    return max ? toPosition(Components.Controller.getEnd(), trimming) : toPosition(0, trimming);\n  }\n  /**\r\n   * Checks if the slider can move now or not.\r\n   *\r\n   * @return `true` if the slider can move, or otherwise `false`.\r\n   */\n\n\n  function isBusy() {\n    return !!(looping || waiting);\n  }\n  /**\r\n   * Checks if the provided position exceeds the minimum limit or not.\r\n   *\r\n   * @param position - A position to test.\r\n   * @param offset   - Optional. Offsets the limit in pixel.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\n\n\n  function isExceededMin(position, offset) {\n    return orient(position) + (offset || 0) < orient(getLimit(false));\n  }\n  /**\r\n   * Checks if the provided position exceeds the maximum limit or not.\r\n   *\r\n   * @param position - A position to test.\r\n   * @param offset   - Optional. Offsets the limit in pixel.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\n\n\n  function isExceededMax(position, offset) {\n    return orient(position) + (offset || 0) > orient(getLimit(true));\n  }\n  /**\r\n   * Checks if the slider position exceeds borders or not.\r\n   *\r\n   * @return `true` if the position is over borders, or otherwise `false`.\r\n   */\n\n\n  function isExceeded() {\n    return isExceededMin(currPosition) || isExceededMax(currPosition);\n  }\n\n  return {\n    mount: mount,\n    move: move,\n    jump: jump,\n    translate: translate,\n    cancel: cancel,\n    toIndex: toIndex,\n    toPosition: toPosition,\n    getPosition: getPosition,\n    getLimit: getLimit,\n    isBusy: isBusy,\n    isExceededMin: isExceededMin,\n    isExceededMax: isExceededMax,\n    isExceeded: isExceeded\n  };\n}\n/**\r\n * The component for controlling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Controller component object.\r\n */\n\n\nfunction Controller(Splide, Components, options) {\n  var _EventInterface7 = EventInterface(Splide),\n      on = _EventInterface7.on;\n\n  var Move = Components.Move;\n  var _Components$Slides = Components.Slides,\n      isEnough = _Components$Slides.isEnough,\n      getLength = _Components$Slides.getLength;\n  var isLoop = Splide.is(LOOP);\n  /**\r\n   * The current index.\r\n   */\n\n  var currIndex = options.start || 0;\n  /**\r\n   * The previous index.\r\n   */\n\n  var prevIndex = currIndex;\n  /**\r\n   * The latest number of slides.\r\n   */\n\n  var slideCount;\n  /**\r\n   * The latest `perMove` value.\r\n   */\n\n  var perMove;\n  /**\r\n   * The latest `perMove` value.\r\n   */\n\n  var perPage;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    Move.jump(currIndex);\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_SCROLLED, function () {\n      setIndex(Move.toIndex(Move.getPosition()));\n    }, 0);\n  }\n  /**\r\n   * Initializes the component.\r\n   */\n\n\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n  }\n  /**\r\n   * Moves the slider by the control pattern.\r\n   *\r\n   * @see `Splide#go()`\r\n   *\r\n   * @param control        - A control pattern.\r\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\r\n   */\n\n\n  function go(control, allowSameIndex) {\n    var dest = parse(control);\n    var index = loop(dest);\n\n    if (index > -1 && !Move.isBusy() && (allowSameIndex || index !== currIndex)) {\n      setIndex(index);\n      Move.move(dest, index, prevIndex);\n    }\n  }\n  /**\r\n   * Parses the control and returns a slide index.\r\n   *\r\n   * @param control - A control pattern to parse.\r\n   */\n\n\n  function parse(control) {\n    var index = currIndex;\n\n    if (isString(control)) {\n      var _ref = control.match(/([+\\-<>])(\\d+)?/) || [],\n          indicator = _ref[1],\n          number = _ref[2];\n\n      if (indicator === '+' || indicator === '-') {\n        index = computeDestIndex(currIndex + +(\"\" + indicator + (+number || 1)), currIndex, true);\n      } else if (indicator === '>') {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === '<') {\n        index = getPrev(true);\n      }\n    } else {\n      if (isLoop) {\n        index = clamp(control, -perPage, slideCount + perPage - 1);\n      } else {\n        index = clamp(control, 0, getEnd());\n      }\n    }\n\n    return index;\n  }\n  /**\r\n   * Returns a next destination index.\r\n   *\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return A next index if available, or otherwise `-1`.\r\n   */\n\n\n  function getNext(destination) {\n    return getAdjacent(false, destination);\n  }\n  /**\r\n   * Returns a previous destination index.\r\n   *\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return A previous index if available, or otherwise `-1`.\r\n   */\n\n\n  function getPrev(destination) {\n    return getAdjacent(true, destination);\n  }\n  /**\r\n   * Returns an adjacent destination index.\r\n   *\r\n   * @param prev        - Determines whether to return a previous or next index.\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return An adjacent index if available, or otherwise `-1`.\r\n   */\n\n\n  function getAdjacent(prev, destination) {\n    var dest = computeDestIndex(currIndex + getPerMove() * (prev ? -1 : 1), currIndex);\n    return destination ? dest : loop(dest);\n  }\n  /**\r\n   * Converts the desired destination index to the valid one.\r\n   * - This may return clone indices if the editor is the loop mode,\r\n   *   or `-1` if there is no slide to go.\r\n   * - There are still slides where the slider can go if borders are between `from` and `dest`.\r\n   *\r\n   * @param dest        - The desired destination.\r\n   * @param from        - A base index.\r\n   * @param incremental - Optional. Whether the control is incremental or not.\r\n   *\r\n   * @return A converted destination index, including clones.\r\n   */\n\n\n  function computeDestIndex(dest, from, incremental) {\n    if (isEnough()) {\n      var end = getEnd(); // Will overrun:\n\n      if (dest < 0 || dest > end) {\n        if (between(0, dest, from, true) || between(end, from, dest, true)) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = perMove ? dest : dest < 0 ? -(slideCount % perPage || perPage) : slideCount;\n          } else if (options.rewind) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (!isLoop && !incremental && dest !== from) {\n          dest = toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n  /**\r\n   * Returns the end index where the slider can go.\r\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\r\n   * the slider can go to the slide 8 (the index is 7).\r\n   *\r\n   * @return An end index.\r\n   */\n\n\n  function getEnd() {\n    var end = slideCount - perPage;\n\n    if (hasFocus() || isLoop && perMove) {\n      end = slideCount - 1;\n    }\n\n    return max(end, 0);\n  }\n  /**\r\n   * Loops the provided index only in the loop mode.\r\n   *\r\n   * @param index - An index to loop.\r\n   *\r\n   * @return A looped index.\r\n   */\n\n\n  function loop(index) {\n    if (isLoop) {\n      return isEnough() ? index % slideCount + (index < 0 ? slideCount : 0) : -1;\n    }\n\n    return index;\n  }\n  /**\r\n   * Converts the page index to the slide index.\r\n   *\r\n   * @param page - A page index to convert.\r\n   *\r\n   * @return A slide index.\r\n   */\n\n\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, getEnd());\n  }\n  /**\r\n   * Converts the slide index to the page index.\r\n   *\r\n   * @param index - An index to convert.\r\n   */\n\n\n  function toPage(index) {\n    if (!hasFocus()) {\n      index = between(index, slideCount - perPage, slideCount - 1) ? slideCount - 1 : index;\n      index = floor(index / perPage);\n    }\n\n    return index;\n  }\n  /**\r\n   * Returns the number of slides to move for '>' and '<'.\r\n   *\r\n   * @return The number of slides to move.\r\n   */\n\n\n  function getPerMove() {\n    return perMove || hasFocus() ? 1 : perPage;\n  }\n  /**\r\n   * Sets a new index and retains old one.\r\n   *\r\n   * @param index - A new index to set.\r\n   */\n\n\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n  /**\r\n   * Returns the current/previous index slide index.\r\n   *\r\n   * @param prev - Optional. Whether to return previous index or not.\r\n   */\n\n\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n  /**\r\n   * Verifies if the focus option is available or not.\r\n   *\r\n   * @return `true` if the slider has the focus option.\r\n   */\n\n\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n\n  return {\n    mount: mount,\n    go: go,\n    getNext: getNext,\n    getPrev: getPrev,\n    getEnd: getEnd,\n    setIndex: setIndex,\n    getIndex: getIndex,\n    toIndex: toIndex,\n    toPage: toPage,\n    hasFocus: hasFocus\n  };\n}\n/**\r\n * The namespace for SVG elements.\r\n */\n\n\nvar XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n/**\r\n * The arrow path.\r\n */\n\nvar PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n/**\r\n * SVG width and height.\r\n */\n\nvar SIZE = 40;\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Arrows component object.\r\n */\n\nfunction Arrows(Splide, Components, options) {\n  var _EventInterface8 = EventInterface(Splide),\n      on = _EventInterface8.on,\n      bind = _EventInterface8.bind,\n      emit = _EventInterface8.emit;\n\n  var classes = options.classes,\n      i18n = options.i18n;\n  var Elements = Components.Elements,\n      Controller = Components.Controller;\n  var slider = Elements.slider,\n      track = Elements.track;\n  /**\r\n   * The wrapper element.\r\n   */\n\n  var wrapper = Elements.arrows;\n  /**\r\n   * The previous arrow element.\r\n   */\n\n  var prev = Elements.prev;\n  /**\r\n   * The next arrow element.\r\n   */\n\n  var next = Elements.next;\n  /**\r\n   * Indicates whether the component creates arrows or retrieved from the DOM.\r\n   */\n\n  var created;\n  /**\r\n   * An object with previous and next arrows.\r\n   */\n\n  var arrows = {};\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, init);\n  }\n  /**\r\n   * Initializes the component.\r\n   */\n\n\n  function init() {\n    if (options.arrows) {\n      if (!prev || !next) {\n        createArrows();\n      }\n    }\n\n    if (prev && next) {\n      if (!arrows.prev) {\n        setAttribute(prev, ARIA_CONTROLS, track.id);\n        setAttribute(next, ARIA_CONTROLS, track.id);\n        arrows.prev = prev;\n        arrows.next = next;\n        listen();\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      } else {\n        display(wrapper, options.arrows === false ? 'none' : '');\n      }\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    if (created) {\n      remove(wrapper);\n    } else {\n      removeAttribute(prev, ALL_ATTRIBUTES);\n      removeAttribute(next, ALL_ATTRIBUTES);\n    }\n  }\n  /**\r\n   * Listens to some events.\r\n   */\n\n\n  function listen() {\n    var go = Controller.go;\n    on([EVENT_MOUNTED, EVENT_MOVE, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED], update);\n    bind(next, 'click', function () {\n      go('>');\n    });\n    bind(prev, 'click', function () {\n      go('<');\n    });\n  }\n  /**\r\n   * Create arrows and append them to the slider.\r\n   */\n\n\n  function createArrows() {\n    var parent = options.arrows === 'slider' && slider ? slider : Splide.root;\n    wrapper = create('div', classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    before(wrapper, child(parent));\n  }\n  /**\r\n   * Creates an arrow button.\r\n   *\r\n   * @param prev - Determines whether to create a previous or next arrow.\r\n   *\r\n   * @return A created button element.\r\n   */\n\n\n  function createArrow(prev) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\">\" + (\"<svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\">\") + (\"<path d=\\\"\" + (options.arrowPath || PATH) + \"\\\" />\");\n    return parseHtml(arrow);\n  }\n  /**\r\n   * Updates status of arrows, such as `disabled` and `aria-label`.\r\n   */\n\n\n  function update() {\n    var index = Splide.index;\n    var prevIndex = Controller.getPrev();\n    var nextIndex = Controller.getNext();\n    var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n    setAttribute(prev, ARIA_LABEL, prevLabel);\n    setAttribute(next, ARIA_LABEL, nextLabel);\n    emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n  }\n\n  return {\n    arrows: arrows,\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * The component for auto playing sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Autoplay component object.\r\n */\n\n\nfunction Autoplay(Splide, Components, options) {\n  var _EventInterface9 = EventInterface(Splide),\n      on = _EventInterface9.on,\n      bind = _EventInterface9.bind,\n      emit = _EventInterface9.emit;\n\n  var _Components$Elements4 = Components.Elements,\n      root = _Components$Elements4.root,\n      track = _Components$Elements4.track,\n      bar = _Components$Elements4.bar,\n      playButton = _Components$Elements4.play,\n      pauseButton = _Components$Elements4.pause;\n  var interval = RequestInterval(options.interval, Splide.go.bind(Splide, '>'), update);\n  var isPaused = interval.isPaused;\n  /**\r\n   * Indicates whether the slider is hovered or not.\r\n   */\n\n  var hovered;\n  /**\r\n   * Indicates whether one of slider elements has focus or not.\r\n   */\n\n  var focused;\n  /**\r\n   * Turns into `true` when autoplay is manually paused.\r\n   */\n\n  var paused;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    var autoplay = options.autoplay;\n\n    if (autoplay) {\n      initButton(true);\n      initButton(false);\n      listen();\n\n      if (autoplay !== 'pause') {\n        play();\n      }\n    }\n  }\n  /**\r\n   * Initializes a play/pause button.\r\n   *\r\n   * @param forPause - Determines whether to initialize a pause or play button.\r\n   */\n\n\n  function initButton(forPause) {\n    var button = forPause ? pauseButton : playButton;\n\n    if (button) {\n      if (!isHTMLButtonElement(button)) {\n        setAttribute(button, ROLE, 'button');\n      }\n\n      setAttribute(button, ARIA_CONTROLS, track.id);\n      setAttribute(button, ARIA_LABEL, options.i18n[forPause ? 'pause' : 'play']);\n      bind(button, 'click', forPause ? pause : play);\n    }\n  }\n  /**\r\n   * Listens to some events.\r\n   */\n\n\n  function listen() {\n    if (options.pauseOnHover) {\n      bind(root, 'mouseenter mouseleave', function (e) {\n        hovered = e.type === 'mouseenter';\n        autoToggle();\n      });\n    }\n\n    if (options.pauseOnFocus) {\n      bind(root, 'focusin focusout', function (e) {\n        focused = e.type === 'focusin';\n        autoToggle();\n      });\n    }\n\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n  }\n  /**\r\n   * Starts autoplay and clears all flags.\r\n   */\n\n\n  function play() {\n    if (isPaused() && Components.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = false;\n      hovered = false;\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n  /**\r\n   * Pauses autoplay.\r\n   *\r\n   * @param manual - If `true`, autoplay keeps paused until `play()` is explicitly called.\r\n   */\n\n\n  function pause(manual) {\n    if (manual === void 0) {\n      manual = true;\n    }\n\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n\n    paused = manual;\n  }\n  /**\r\n   * Toggles play/pause according to current flags.\r\n   * If autoplay is manually paused, this will do nothing.\r\n   */\n\n\n  function autoToggle() {\n    if (!paused) {\n      if (!hovered && !focused) {\n        play();\n      } else {\n        pause(false);\n      }\n    }\n  }\n  /**\r\n   * Called on every animation frame when auto playing.\r\n   *\r\n   * @param rate - The progress rate between 0 to 1.\r\n   */\n\n\n  function update(rate) {\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n\n    if (bar) {\n      style(bar, {\n        width: rate * 100 + \"%\"\n      });\n    }\n  }\n\n  return {\n    mount: mount,\n    destroy: interval.cancel,\n    play: play,\n    pause: pause,\n    isPaused: isPaused\n  };\n}\n/**\r\n * The component for setting the image as the slide background.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Cover component object.\r\n */\n\n\nfunction Cover(Splide, Components, options) {\n  var _EventInterface10 = EventInterface(Splide),\n      on = _EventInterface10.on;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, function (img, Slide) {\n        toggle(true, img, Slide);\n      });\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply.bind(null, true));\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    apply(false);\n  }\n  /**\r\n   * Sets/removes the background image to/from all slides.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   */\n\n\n  function apply(cover) {\n    Components.Slides.forEach(function (Slide) {\n      var img = child(Slide.container || Slide.slide, 'img');\n\n      if (img && img.src) {\n        toggle(cover, img, Slide);\n      }\n    });\n  }\n  /**\r\n   * Sets/removes the background image to/from the parent element.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   * @param img   - A target image element.\r\n   * @param Slide - A SlideComponent object where the image belongs.\r\n   */\n\n\n  function toggle(cover, img, Slide) {\n    Slide.rule('background', cover ? \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\" : '', true);\n    display(img, cover ? 'none' : '');\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * Triggers the bounce effect when the diff becomes less than this value.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar BOUNCE_DIFF_THRESHOLD = 10;\n/**\r\n * The duration of the bounce effect.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar BOUNCE_DURATION = 600;\n/**\r\n * The friction factor.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar FRICTION_FACTOR = 0.6;\n/**\r\n * The velocity to calculate the scroll duration.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar BASE_VELOCITY = 1.2;\n/**\r\n * The minimum duration of scroll.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar MIN_DURATION = 800;\n/**\r\n * The component for scrolling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Scroll component object.\r\n */\n\nfunction Scroll(Splide, Components, options) {\n  var _EventInterface11 = EventInterface(Splide),\n      on = _EventInterface11.on,\n      emit = _EventInterface11.emit;\n\n  var Move = Components.Move;\n  var getPosition = Move.getPosition,\n      getLimit = Move.getLimit;\n  /**\r\n   * Retains the active RequestInterval object.\r\n   */\n\n  var interval;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n  /**\r\n   * Scrolls the slider to the provided destination.\r\n   *\r\n   * @param destination        - The destination to scroll to.\r\n   * @param duration           - Optional. The scroll duration. If omitted, calculates it by the distance.\r\n   * @param suppressConstraint - Optional. Whether to suppress constraint process when the slider exceeds bounds.\r\n   */\n\n\n  function scroll(destination, duration, suppressConstraint) {\n    var start = getPosition();\n    var friction = 1;\n    duration = duration || computeDuration(abs(destination - start));\n    clear();\n    interval = RequestInterval(duration, onScrolled, function (rate) {\n      var position = getPosition();\n      var target = start + (destination - start) * easing(rate);\n      var diff = (target - getPosition()) * friction;\n      Move.translate(position + diff);\n\n      if (Splide.is(SLIDE) && !suppressConstraint && Move.isExceeded()) {\n        friction *= FRICTION_FACTOR;\n\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          bounce(Move.isExceededMin(getPosition()));\n        }\n      }\n    }, 1);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n  /**\r\n   * Triggers the bounce effect when the slider reaches bounds.\r\n   *\r\n   * @param backwards - The direction the slider is going towards.\r\n   */\n\n\n  function bounce(backwards) {\n    scroll(getLimit(!backwards), BOUNCE_DURATION, true);\n  }\n  /**\r\n   * Called when scroll ends or is canceled.\r\n   */\n\n\n  function onScrolled() {\n    emit(EVENT_SCROLLED);\n  }\n  /**\r\n   * Computes the scroll duration by the distance and the base velocity.\r\n   *\r\n   * @param distance - Distance in pixel.\r\n   *\r\n   * @return The duration for scroll.\r\n   */\n\n\n  function computeDuration(distance) {\n    return max(distance / BASE_VELOCITY, MIN_DURATION);\n  }\n  /**\r\n   * Clears the active interval.\r\n   */\n\n\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n  /**\r\n   * Cancels the active interval and emits the `scrolled` event.\r\n   */\n\n\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onScrolled();\n    }\n  }\n  /**\r\n   * The easing function.\r\n   *\r\n   * @param t - A value to ease.\r\n   *\r\n   * @return An eased value.\r\n   */\n\n\n  function easing(t) {\n    var easingFunc = options.easingFunc;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n\n  return {\n    mount: mount,\n    destroy: clear,\n    scroll: scroll,\n    cancel: cancel\n  };\n}\n/**\r\n * The power of the friction.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar FRICTION = 5;\n/**\r\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar SAMPLING_INTERVAL = 50;\n/**\r\n * Start events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar POINTER_DOWN_EVENTS = 'touchstart mousedown';\n/**\r\n * Update events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar POINTER_MOVE_EVENTS = 'touchmove mousemove';\n/**\r\n * End events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar POINTER_UP_EVENTS = 'touchend touchcancel mouseup mouseleave';\n/**\r\n * The component for dragging the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Drag component object.\r\n */\n\nfunction Drag(Splide, Components, options) {\n  var _EventInterface12 = EventInterface(Splide),\n      emit = _EventInterface12.emit,\n      bind = _EventInterface12.bind,\n      unbind = _EventInterface12.unbind;\n\n  var track = Components.Elements.track;\n  var _Components$Direction2 = Components.Direction,\n      resolve = _Components$Direction2.resolve,\n      orient = _Components$Direction2.orient;\n  var listSize = Components.Layout.listSize;\n  var _Components$Controlle = Components.Controller,\n      go = _Components$Controlle.go,\n      getEnd = _Components$Controlle.getEnd;\n  var Move = Components.Move,\n      Scroll = Components.Scroll;\n  var translate = Move.translate,\n      toIndex = Move.toIndex,\n      getPosition = Move.getPosition,\n      isExceeded = Move.isExceeded;\n  var isSlide = Splide.is(SLIDE);\n  var isFade = Splide.is(FADE);\n  var isFree = options.drag === 'free';\n  /**\r\n   * The coord where a pointer becomes active.\r\n   */\n\n  var startCoord;\n  /**\r\n   * Keeps the last time when the component detects dragging.\r\n   */\n\n  var lastTime;\n  /**\r\n   * The base slider position where the diff of coords is applied.\r\n   */\n\n  var basePosition;\n  /**\r\n   * The base coord to calculate the diff of coords.\r\n   */\n\n  var baseCoord;\n  /**\r\n   * The base time when the base position and the base coord are saved.\r\n   */\n\n  var baseTime;\n  /**\r\n   * Keeps the last TouchEvent/MouseEvent object.\r\n   */\n\n  var lastEvent;\n  /**\r\n   * Indicates whether the user is dragging the slider or not.\r\n   */\n\n  var moving;\n  /**\r\n   * Indicates whether the user drags the slider by the mouse or not.\r\n   */\n\n  var isMouse;\n  /**\r\n   * The target element to attach listeners.\r\n   */\n\n  var target;\n  /**\r\n   * Indicates whether the slider exceeds borders or not.\r\n   */\n\n  var exceeded;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    if (options.drag) {\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown);\n    }\n  }\n  /**\r\n   * Called when the user clicks or touches the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\n\n\n  function onPointerDown(e) {\n    isMouse = e.type === 'mousedown';\n    target = isMouse ? window : track;\n\n    if (!(isMouse && e.button)) {\n      if (!Move.isBusy()) {\n        bind(target, POINTER_MOVE_EVENTS, onPointerMove);\n        bind(target, POINTER_UP_EVENTS, onPointerUp);\n        Move.cancel();\n        Scroll.cancel();\n        startCoord = getCoord(e);\n      } else {\n        prevent(e);\n      }\n    }\n  }\n  /**\r\n   * Called while the user moves the pointer on the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\n\n\n  function onPointerMove(e) {\n    if (e.cancelable) {\n      var _min = options.dragMinThreshold || 15;\n\n      if (isMouse || abs(getCoord(e) - startCoord) > _min) {\n        moving = true;\n        onDrag();\n      }\n\n      if (moving) {\n        onDragging(e);\n        prevent(e, true);\n      }\n    } else {\n      onPointerUp(e);\n    }\n  }\n  /**\r\n   * Called when the user releases pointing devices.\r\n   * Be aware that the TouchEvent object provided by the `touchend` does not contain `Touch` objects,\r\n   * which means the last touch position is not available.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\n\n\n  function onPointerUp(e) {\n    unbind(target, POINTER_MOVE_EVENTS + \" \" + POINTER_UP_EVENTS);\n    moving = false;\n\n    if (lastEvent) {\n      onDragged(e);\n      lastEvent = null;\n    }\n  }\n  /**\r\n   * Called when the user starts dragging the slider.\r\n   */\n\n\n  function onDrag() {\n    bind(track, 'click', function (e) {\n      unbind(track, 'click');\n      prevent(e, true);\n    }, {\n      capture: true\n    });\n    emit(EVENT_DRAG);\n  }\n  /**\r\n   * Called while the user is dragging the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\n\n\n  function onDragging(e) {\n    var timeStamp = e.timeStamp;\n    var expired = !lastTime || timeStamp - lastTime > SAMPLING_INTERVAL;\n\n    if (expired || isExceeded() !== exceeded) {\n      basePosition = getPosition();\n      baseCoord = getCoord(e);\n      baseTime = timeStamp;\n    }\n\n    exceeded = isExceeded();\n    lastTime = timeStamp;\n    lastEvent = e;\n\n    if (!isFade) {\n      translate(basePosition + constrain(getCoord(e) - baseCoord));\n    }\n\n    emit(EVENT_DRAGGING);\n  }\n  /**\r\n   * Called when the user finishes dragging.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\n\n\n  function onDragged(e) {\n    var velocity = computeVelocity(e);\n\n    if (isFade) {\n      go(Splide.index + orient(sign(velocity)));\n    } else {\n      var destination = computeDestination(velocity);\n\n      if (isFree) {\n        Scroll.scroll(destination);\n      } else {\n        go(computeIndex(destination), true);\n      }\n    }\n\n    lastTime = 0;\n    emit(EVENT_DRAGGED);\n  }\n  /**\r\n   * Computes the drag velocity.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   *\r\n   * @return The drag velocity.\r\n   */\n\n\n  function computeVelocity(e) {\n    if (Splide.is(LOOP) || !isExceeded()) {\n      var diffCoord = getCoord(lastEvent) - baseCoord;\n      var diffTime = lastEvent.timeStamp - baseTime;\n      var isFlick = e.timeStamp - lastTime < SAMPLING_INTERVAL;\n\n      if (diffTime && isFlick) {\n        return diffCoord / diffTime;\n      }\n    }\n\n    return 0;\n  }\n  /**\r\n   * Computes the destination by the velocity and the `flickPower` option.\r\n   *\r\n   * @param velocity - The drag velocity.\r\n   *\r\n   * @return The destination.\r\n   */\n\n\n  function computeDestination(velocity) {\n    var flickPower = options.flickPower || 600;\n    return getPosition() + sign(velocity) * min(abs(velocity) * flickPower, isFree ? Infinity : listSize() * (options.flickMaxPages || 1));\n  }\n  /**\r\n   * Converts the destination to the slide index.\r\n   *\r\n   * @param destination - The target destination.\r\n   *\r\n   * @return The destination index.\r\n   */\n\n\n  function computeIndex(destination) {\n    var dest = toIndex(destination);\n    return isSlide ? clamp(dest, 0, getEnd()) : dest;\n  }\n  /**\r\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\r\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return A pageX or pageY coordinate.\r\n   */\n\n\n  function getCoord(e) {\n    return (isMouse ? e : e.touches[0])[resolve('pageX')];\n  }\n  /**\r\n   * Reduces the distance to move by the predefined friction.\r\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\r\n   *\r\n   * @param diff - Diff to constrain.\r\n   *\r\n   * @return The constrained diff.\r\n   */\n\n\n  function constrain(diff) {\n    return diff / (exceeded && isSlide ? FRICTION : 1);\n  }\n\n  return {\n    mount: mount\n  };\n}\n/**\r\n * The collection of arrow keys of IE.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar IE_ARROW_KEYS = ['Left', 'Right', 'Up', 'Down'];\n/**\r\n * The component for controlling the slider by keyboards.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Keyboard component object.\r\n */\n\nfunction Keyboard(Splide, Components, options) {\n  var _EventInterface13 = EventInterface(Splide),\n      on = _EventInterface13.on,\n      bind = _EventInterface13.bind,\n      unbind = _EventInterface13.unbind;\n\n  var root = Components.Elements.root;\n  var resolve = Components.Direction.resolve;\n  /**\r\n   * The target element of the keyboard event.\r\n   */\n\n  var target;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, function () {\n      destroy();\n      init();\n    });\n  }\n  /**\r\n   * Initializes the component.\r\n   */\n\n\n  function init() {\n    var _options$keyboard = options.keyboard,\n        keyboard = _options$keyboard === void 0 ? 'global' : _options$keyboard;\n\n    if (keyboard) {\n      if (keyboard === 'focused') {\n        target = root;\n        setAttribute(root, TAB_INDEX, 0);\n      } else {\n        target = window;\n      }\n\n      bind(target, 'keydown', function (e) {\n        var key = normalize(e.key);\n\n        if (key === resolve('ArrowLeft')) {\n          Splide.go('<');\n        } else if (key === resolve('ArrowRight')) {\n          Splide.go('>');\n        }\n      });\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    if (target) {\n      unbind(target, 'keydown');\n\n      if (isHTMLElement(target)) {\n        removeAttribute(target, TAB_INDEX);\n      }\n    }\n  }\n  /**\r\n   * Absorbs the difference of key names among browsers.\r\n   *\r\n   * @param key - A key to normalize.\r\n   *\r\n   * @return A normalized key.\r\n   */\n\n\n  function normalize(key) {\n    return includes(IE_ARROW_KEYS, key) ? \"Arrow\" + key : key;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * The data attribute for the src value.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar SRC_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-lazy\";\n/**\r\n * The data attribute for the srcset value.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar SRCSET_DATA_ATTRIBUTE = SRC_DATA_ATTRIBUTE + \"-srcset\";\n/**\r\n * The selector string for images to load.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar IMAGE_SELECTOR = \"[\" + SRC_DATA_ATTRIBUTE + \"], [\" + SRCSET_DATA_ATTRIBUTE + \"]\";\n/**\r\n * The component for lazily loading images.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An LazyLoad component object.\r\n */\n\nfunction LazyLoad(Splide, Components, options) {\n  var _EventInterface14 = EventInterface(Splide),\n      on = _EventInterface14.on,\n      off = _EventInterface14.off,\n      bind = _EventInterface14.bind,\n      emit = _EventInterface14.emit;\n\n  var isSequential = options.lazyLoad === 'sequential';\n  /**\r\n   * Stores data of images.\r\n   */\n\n  var images = [];\n  /**\r\n   * The current index of images.\r\n   */\n\n  var index = 0;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    if (options.lazyLoad) {\n      on([EVENT_MOUNTED, EVENT_REFRESH], function () {\n        destroy();\n        init();\n      });\n\n      if (!isSequential) {\n        on([EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED], observe);\n      }\n    }\n  }\n  /**\r\n   * Finds images that contain specific data attributes.\r\n   */\n\n\n  function init() {\n    Components.Slides.forEach(function (Slide) {\n      queryAll(Slide.slide, IMAGE_SELECTOR).forEach(function (img) {\n        var src = getAttribute(img, SRC_DATA_ATTRIBUTE);\n        var srcset = getAttribute(img, SRCSET_DATA_ATTRIBUTE);\n\n        if (src !== img.src || srcset !== img.srcset) {\n          var spinner = create('span', options.classes.spinner, img.parentElement);\n          setAttribute(spinner, ROLE, 'presentation');\n          images.push({\n            img: img,\n            Slide: Slide,\n            src: src,\n            srcset: srcset,\n            spinner: spinner\n          });\n          display(img, 'none');\n        }\n      });\n    });\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    index = 0;\n    images = [];\n  }\n  /**\r\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\r\n   * The last `+1` is for the current page.\r\n   */\n\n\n  function observe() {\n    images = images.filter(function (data) {\n      if (data.Slide.isWithin(Splide.index, options.perPage * ((options.preloadPages || 1) + 1))) {\n        return load(data);\n      }\n\n      return true;\n    });\n\n    if (!images.length) {\n      off(EVENT_MOVED);\n    }\n  }\n  /**\r\n   * Starts loading the image in the data.\r\n   *\r\n   * @param data - A LazyLoadImagesData object.\r\n   */\n\n\n  function load(data) {\n    var img = data.img;\n    addClass(data.Slide.slide, CLASS_LOADING);\n    bind(img, 'load error', function (e) {\n      onLoad(data, e.type === 'error');\n    });\n    ['src', 'srcset'].forEach(function (name) {\n      if (data[name]) {\n        setAttribute(img, name, data[name]);\n        removeAttribute(img, name === 'src' ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE);\n      }\n    });\n  }\n  /**\r\n   * Called when the image is loaded or any error occurs.\r\n   *\r\n   * @param data  - A LazyLoadImagesData object.\r\n   * @param error - `true` if this method is called on error.\r\n   */\n\n\n  function onLoad(data, error) {\n    var Slide = data.Slide;\n    removeClass(Slide.slide, CLASS_LOADING);\n\n    if (!error) {\n      remove(data.spinner);\n      display(data.img, '');\n      emit(EVENT_LAZYLOAD_LOADED, data.img, Slide);\n      emit(EVENT_RESIZE);\n    }\n\n    if (isSequential) {\n      loadNext();\n    }\n  }\n  /**\r\n   * Starts loading a next image.\r\n   */\n\n\n  function loadNext() {\n    if (index < images.length) {\n      load(images[index++]);\n    }\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Arrows component object.\r\n */\n\n\nfunction Pagination(Splide, Components, options) {\n  var _EventInterface15 = EventInterface(Splide),\n      on = _EventInterface15.on,\n      emit = _EventInterface15.emit,\n      bind = _EventInterface15.bind,\n      unbind = _EventInterface15.unbind;\n\n  var Slides = Components.Slides;\n  var _Components$Controlle2 = Components.Controller,\n      go = _Components$Controlle2.go,\n      toPage = _Components$Controlle2.toPage,\n      hasFocus = _Components$Controlle2.hasFocus,\n      getIndex = _Components$Controlle2.getIndex;\n  /**\r\n   * Stores all pagination items.\r\n   */\n\n  var items = [];\n  /**\r\n   * The pagination element.\r\n   */\n\n  var list;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on([EVENT_MOVE, EVENT_SCROLLED], update);\n  }\n  /**\r\n   * Initializes the pagination.\r\n   */\n\n\n  function init() {\n    destroy();\n\n    if (options.pagination && Slides.isEnough()) {\n      createPagination();\n      emit(EVENT_PAGINATION_MOUNTED, {\n        list: list,\n        items: items\n      }, getAt(Splide.index));\n      update();\n    }\n  }\n  /**\r\n   * Destroys the component.\r\n   */\n\n\n  function destroy() {\n    if (list) {\n      remove(list);\n      items.forEach(function (item) {\n        unbind(item.button, 'click');\n      });\n      empty(items);\n      list = null;\n    }\n  }\n  /**\r\n   * Creates the pagination element and appends it to the slider.\r\n   */\n\n\n  function createPagination() {\n    var length = Splide.length;\n    var classes = options.classes,\n        i18n = options.i18n,\n        perPage = options.perPage;\n    var _Components$Elements5 = Components.Elements,\n        slider = _Components$Elements5.slider,\n        root = _Components$Elements5.root;\n    var parent = options.pagination === 'slider' && slider ? slider : root;\n    var max = hasFocus() ? length : ceil(length / perPage);\n    list = create('ul', classes.pagination, parent);\n\n    var _loop = function _loop(i) {\n      var li = create('li', null, list);\n      var button = create('button', {\n        class: classes.page,\n        type: 'button'\n      }, li);\n      var controls = Slides.getIn(i).map(function (Slide) {\n        return Slide.slide.id;\n      });\n      var text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, 'click', function () {\n        go(\">\" + i);\n      });\n      setAttribute(button, ARIA_CONTROLS, controls.join(' '));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      emit(EVENT_PAGINATION_PAGE, list, li, button, i);\n      items.push({\n        li: li,\n        button: button,\n        page: i\n      });\n    };\n\n    for (var i = 0; i < max; i++) {\n      _loop(i);\n    }\n  }\n  /**\r\n   * Returns the pagination item at the specified index.\r\n   *\r\n   * @param index - An index.\r\n   *\r\n   * @return A pagination item object if available, or otherwise `undefined`.\r\n   */\n\n\n  function getAt(index) {\n    return items[toPage(index)];\n  }\n  /**\r\n   * Updates the pagination status.\r\n   */\n\n\n  function update() {\n    var prev = getAt(getIndex(true));\n    var curr = getAt(getIndex());\n\n    if (prev) {\n      removeClass(prev.button, CLASS_ACTIVE);\n      removeAttribute(prev.button, ARIA_CURRENT);\n    }\n\n    if (curr) {\n      addClass(curr.button, CLASS_ACTIVE);\n      setAttribute(curr.button, ARIA_CURRENT, true);\n    }\n\n    emit(EVENT_PAGINATION_UPDATED, {\n      list: list,\n      items: items\n    }, prev, curr);\n  }\n\n  return {\n    items: items,\n    mount: mount,\n    destroy: destroy,\n    getAt: getAt\n  };\n}\n/**\r\n * The keys for triggering the navigation slide.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar TRIGGER_KEYS = [' ', 'Enter', 'Spacebar'];\n/**\r\n * The component for syncing multiple sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Sync component object.\r\n */\n\nfunction Sync(Splide, Components, options) {\n  var splides = Splide.splides;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    if (options.isNavigation) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n  /**\r\n   * Syncs the current index among all slides.\r\n   * The `processed` array prevents recursive call of handlers.\r\n   */\n\n\n  function sync() {\n    var processed = [];\n    splides.concat(Splide).forEach(function (splide, index, instances) {\n      EventInterface(splide).on(EVENT_MOVE, function (index, prev, dest) {\n        instances.forEach(function (instance) {\n          if (instance !== splide && !includes(processed, splide)) {\n            processed.push(instance);\n            instance.go(instance.is(LOOP) ? dest : index);\n          }\n        });\n        empty(processed);\n      });\n    });\n  }\n  /**\r\n   * Makes slides clickable and moves the slider to the index of clicked slide.\r\n   */\n\n\n  function navigate() {\n    var _EventInterface16 = EventInterface(Splide),\n        on = _EventInterface16.on,\n        emit = _EventInterface16.emit;\n\n    on(EVENT_CLICK, function (Slide) {\n      Splide.go(Slide.index);\n    });\n    on(EVENT_SLIDE_KEYDOWN, function (Slide, e) {\n      if (includes(TRIGGER_KEYS, e.key)) {\n        Splide.go(Slide.index);\n        prevent(e);\n      }\n    });\n    emit(EVENT_NAVIGATION_MOUNTED, Splide.splides);\n  }\n\n  return {\n    mount: mount\n  };\n}\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\n\n\nfunction Wheel(Splide, Components, options) {\n  var _EventInterface17 = EventInterface(Splide),\n      bind = _EventInterface17.bind;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n\n  function mount() {\n    if (options.wheel) {\n      bind(Components.Elements.track, 'wheel', onWheel);\n    }\n  }\n  /**\r\n   * Called when the user rotates the mouse wheel.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\n\n\n  function onWheel(e) {\n    var deltaY = e.deltaY;\n\n    if (deltaY) {\n      Splide.go(deltaY < 0 ? '<' : '>');\n      prevent(e);\n    }\n  }\n\n  return {\n    mount: mount\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Options: Options,\n  Direction: Direction,\n  Elements: Elements,\n  Style: Style,\n  Slides: Slides,\n  Clones: Clones,\n  Layout: Layout,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel\n});\n/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar I18N = {\n  prev: 'Previous slide',\n  next: 'Next slide',\n  first: 'Go to first slide',\n  last: 'Go to last slide',\n  slideX: 'Go to slide %s',\n  pageX: 'Go to page %s',\n  play: 'Start autoplay',\n  pause: 'Pause autoplay'\n};\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\n\nvar DEFAULTS = {\n  type: 'slide',\n  speed: 400,\n  waitForTransition: true,\n  perPage: 1,\n  arrows: true,\n  pagination: true,\n  interval: 5000,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: 'cubic-bezier(.42,.65,.27,.99)',\n  drag: true,\n  direction: 'ltr',\n  slideFocus: true,\n  trimSpace: true,\n  classes: CLASSES,\n  i18n: I18N\n};\n/**\r\n * The component for the fade transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\n\nfunction Fade(Splide, Components, options) {\n  var _EventInterface18 = EventInterface(Splide),\n      on = _EventInterface18.on;\n\n  var ruleBy = Components.Style.ruleBy;\n  /**\r\n   * Called when the component is mounted.\r\n   * The nextTick disables the initial fade transition of the first slide.\r\n   */\n\n  function mount() {\n    on([EVENT_MOUNTED, EVENT_REFRESH], function () {\n      nextTick(function () {\n        Components.Slides.forEach(function (Slide) {\n          ruleBy(Slide.slide, 'transition', \"opacity \" + options.speed + \"ms \" + options.easing);\n        });\n      });\n    });\n  }\n  /**\r\n   * Starts the transition.\r\n   * Explicitly sets the track height to avoid it will collapse in Safari.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\n\n\n  function start(index, done) {\n    var track = Components.Elements.track;\n    ruleBy(track, 'height', unit(rect(track).height));\n    nextTick(function () {\n      done();\n      ruleBy(track, 'height', '');\n    });\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: noop\n  };\n}\n/**\r\n * The component for the slide transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\n\n\nfunction Slide(Splide, Components, options) {\n  var _EventInterface19 = EventInterface(Splide),\n      bind = _EventInterface19.bind;\n\n  var Move = Components.Move,\n      Controller = Components.Controller;\n  var list = Components.Elements.list;\n  /**\r\n   * Holds the `done` callback function.\r\n   */\n\n  var endCallback;\n  /**\r\n   * Called when the component is mounted.\r\n   */\n\n  function mount() {\n    bind(list, 'transitionend', function (e) {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n  /**\r\n   * Starts the transition.\r\n   * The Move component calls this method just before the slider moves.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\n\n\n  function start(index, done) {\n    var destination = Move.toPosition(index, true);\n    var position = Move.getPosition();\n    var speed = getSpeed(index);\n\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      apply(\"transform \" + speed + \"ms \" + options.easing);\n      Move.translate(destination);\n      endCallback = done;\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n  /**\r\n   * Cancels the transition.\r\n   */\n\n\n  function cancel() {\n    apply('');\n  }\n  /**\r\n   * Returns the transition speed.\r\n   *\r\n   * @param index - A destination index.\r\n   */\n\n\n  function getSpeed(index) {\n    var rewindSpeed = options.rewindSpeed;\n\n    if (Splide.is(SLIDE) && rewindSpeed) {\n      var prev = Controller.getIndex(true);\n      var end = Controller.getEnd();\n\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n  /**\r\n   * Applies the transition CSS property to the list element.\r\n   *\r\n   * @param transition - A transition CSS value.\r\n   */\n\n\n  function apply(transition) {\n    Components.Style.ruleBy(list, 'transition', transition);\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: cancel\n  };\n}\n/**\r\n * The frontend class for the Splide slider.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar Splide = /*#__PURE__*/function () {\n  /**\r\n   * The Splide constructor.\r\n   *\r\n   * @param target  - The selector for the target element, or the element itself.\r\n   * @param options - Optional. An object with options.\r\n   */\n  function Splide(target, options) {\n    /**\r\n     * The EventBusObject object.\r\n     */\n    this.event = EventBus();\n    /**\r\n     * The collection of all component objects.\r\n     */\n\n    this.Components = {};\n    /**\r\n     * The StateObject object.\r\n     */\n\n    this.state = State(CREATED);\n    /**\r\n     * Splide instances to sync with.\r\n     */\n\n    this.splides = [];\n    /**\r\n     * The collection of options.\r\n     */\n\n    this.opts = {};\n    /**\r\n     * The collection of extensions.\r\n     */\n\n    this.Extensions = {};\n    var root = isString(target) ? query(document, target) : target;\n    assert(root, root + \" is invalid.\");\n    this.root = root;\n    merge(DEFAULTS, Splide.defaults);\n    merge(merge(this.opts, DEFAULTS), options || {});\n  }\n  /**\r\n   * Initializes the instance.\r\n   *\r\n   * @param Extensions - Optional. An object with extensions.\r\n   * @param Transition - Optional. A Transition component.\r\n   *\r\n   * @return `this`\r\n   */\n\n\n  var _proto = Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this3 = this;\n\n    this.state.set(CREATED);\n    this.Transition = Transition || this.Transition || (this.is(FADE) ? Fade : Slide);\n    this.Extensions = Extensions || this.Extensions;\n    var Constructors = assign({}, ComponentConstructors, this.Extensions, {\n      Transition: this.Transition\n    });\n    var Components = this.Components;\n    forOwn(Constructors, function (Component, key) {\n      var component = Component(_this3, _this3.Components, _this3.opts);\n      Components[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components, function (component) {\n      component.mount && component.mount();\n    });\n    forOwn(Components, function (component) {\n      component.mounted && component.mounted();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    this.state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  }\n  /**\r\n   * Syncs the slider with the provided one.\r\n   * This method must be called before the `mount()`.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var primary   = new Splide();\r\n   * var secondary = new Splide();\r\n   *\r\n   * primary.sync( secondary );\r\n   * primary.mount();\r\n   * secondary.mount();\r\n   * ```\r\n   *\r\n   * @param splide - A Splide instance to sync with.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.sync = function sync(splide) {\n    this.splides.push(splide);\n    splide.splides.push(this);\n    return this;\n  }\n  /**\r\n   * Moves the slider with the following control pattern.\r\n   *\r\n   * | Pattern | Description |\r\n   * |---|---|\r\n   * | `i` | Goes to the slide `i` |\r\n   * | `'+${i}'` | Increments the slide index by `i` |\r\n   * | `'-${i}'` | Decrements the slide index by `i` |\r\n   * | `'>'` | Goes to the next page |\r\n   * | `'<'` | Goes to the previous page |\r\n   * | `>${i}` | Goes to the page `i` |\r\n   *\r\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\r\n   * because they respect `perPage` and `perMove` options.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Goes to the slide 1:\r\n   * splide.go( 1 );\r\n   *\r\n   * // Increments the index:\r\n   * splide.go( '+2' );\r\n   *\r\n   * // Goes to the next page:\r\n   * splide.go( '>' );\r\n   *\r\n   * // Goes to the page 2:\r\n   * splide.go( '>2' );\r\n   * ```\r\n   *\r\n   * @param control\r\n   */\n  ;\n\n  _proto.go = function go(control) {\n    this.Components.Controller.go(control);\n  }\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Listens to a single event:\r\n   * splide.on( 'move', function() {} );\r\n   *\r\n   * // Listens to multiple events:\r\n   * splide.on( 'move resize', function() {} );\r\n   *\r\n   * // Appends a namespace:\r\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\r\n   * ```\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   * @param callback - A callback function.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.on = function on(events, callback) {\n    this.event.on(events, callback);\n    return this;\n  }\n  /**\r\n   * Removes the registered all handlers for the specified event or events.\r\n   * If you want to only remove a particular handler, use namespace to identify it.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Removes all handlers assigned to \"move\":\r\n   * splide.off( 'move' );\r\n   *\r\n   * // Only removes handlers that belong to the specified namespace:\r\n   * splide.off( 'move.myNamespace' );\r\n   * ```\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.off = function off(events) {\n    this.event.off(events);\n    return this;\n  }\n  /**\r\n   * Emits an event and triggers registered handlers.\r\n   *\r\n   * @param event - An event name to emit.\r\n   * @param args  - Optional. Any number of arguments to pass to handlers.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.emit = function emit(event) {\n    var _this$event;\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    (_this$event = this.event).emit.apply(_this$event, [event].concat(args));\n\n    return this;\n  }\n  /**\r\n   * Inserts a slide at the specified position.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   * splide.mount();\r\n   *\r\n   * // Adds the slide by the HTML:\r\n   * splide.add( '<li></li> );\r\n   *\r\n   * // or adds the element:\r\n   * splide.add( document.createElement( 'li' ) );\r\n   * ```\r\n   *\r\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\r\n   * @param index  - Optional. An index to insert a slide at.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.add = function add(slides, index) {\n    this.Components.Slides.add(slides, index);\n    return this;\n  }\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\n  ;\n\n  _proto.remove = function remove(matcher) {\n    this.Components.Slides.remove(matcher);\n    return this;\n  }\n  /**\r\n   * Checks the slider type.\r\n   *\r\n   * @param type - A type to test.\r\n   *\r\n   * @return `true` if the type matches the current one, or otherwise `false`.\r\n   */\n  ;\n\n  _proto.is = function is(type) {\n    return this.opts.type === type;\n  }\n  /**\r\n   * Refreshes the slider.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.refresh = function refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  }\n  /**\r\n   * Destroys the slider.\r\n   *\r\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\r\n   *\r\n   * @return `this`\r\n   */\n  ;\n\n  _proto.destroy = function destroy(completely) {\n    var event = this.event,\n        state = this.state;\n\n    if (state.is(CREATED)) {\n      // Postpones destruction requested before the slider becomes ready.\n      event.on(EVENT_READY, this.destroy.bind(this, completely), this);\n    } else {\n      forOwn(this.Components, function (component) {\n        component.destroy && component.destroy(completely);\n      });\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      empty(this.splides);\n      state.set(DESTROYED);\n    }\n\n    return this;\n  }\n  /**\r\n   * Returns options.\r\n   *\r\n   * @return An object with the latest options.\r\n   */\n  ;\n\n  _createClass(Splide, [{\n    key: \"options\",\n    get: function get() {\n      return this.opts;\n    }\n    /**\r\n     * Merges options to the current options and emits `updated` event.\r\n     *\r\n     * @param options - An object with new options.\r\n     */\n    ,\n    set: function set(options) {\n      var opts = this.opts;\n      merge(opts, options);\n\n      if (!this.state.is(CREATED)) {\n        this.emit(EVENT_UPDATED, opts);\n      }\n    }\n    /**\r\n     * Returns the number of slides without clones.\r\n     *\r\n     * @return The number of slides.\r\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.Components.Slides.getLength(true);\n    }\n    /**\r\n     * Returns the active slide index.\r\n     *\r\n     * @return The active slide index.\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.Components.Controller.getIndex();\n    }\n  }]);\n\n  return Splide;\n}();\n/**\r\n * Changes the default options for all Splide instances.\r\n */\n\n\nSplide.defaults = {};\n/**\r\n * The collection of state numbers.\r\n */\n\nSplide.STATES = STATES;\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_AUTOPLAY, CLASS_CLONE, CLASS_CONTAINER, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PAUSE, CLASS_PLAY, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SLIDER, CLASS_SPINNER, CLASS_TRACK, CLASS_VISIBLE, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_PAGE, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBus, EventInterface, RequestInterval, STATUS_CLASSES, Splide, State, Throttle, Splide as default };\n","/**\n * Checks if the given subject is an object or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an object, or otherwise `false`.\n */\nexport function isObject( subject: unknown ): subject is object {\n  return ! isNull( subject ) && typeof subject === 'object';\n}\n\n/**\n * Checks if the given subject is an array or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an array, or otherwise `false`.\n */\nexport function isArray<T>( subject: unknown ): subject is T[] {\n  return Array.isArray( subject );\n}\n\n/**\n * Checks if the given subject is a function or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a function, or otherwise `false`.\n */\nexport function isFunction( subject: unknown ): subject is ( ...args: any[] ) => any {\n  return typeof subject === 'function';\n}\n\n/**\n * Checks if the given subject is a string or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a string, or otherwise `false`.\n */\nexport function isString( subject: unknown ): subject is string {\n  return typeof subject === 'string';\n}\n\n/**\n * Checks if the given subject is `undefined` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `undefined`, or otherwise `false`.\n */\nexport function isUndefined( subject: unknown ): subject is undefined {\n  return typeof subject === 'undefined';\n}\n\n/**\n * Checks if the given subject is `null` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `null`, or otherwise `false`.\n */\nexport function isNull( subject: unknown ): subject is null {\n  return subject === null;\n}\n\n/**\n * Checks if the given subject is an HTMLElement or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\n */\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\n  return subject instanceof HTMLElement;\n}\n\n/**\n * Checks if the given subject is an HTMLButtonElement or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\n */\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\n  return subject instanceof HTMLButtonElement;\n}\n","import { isArray } from '../../type/type';\n\n\n/**\n * Push the provided value to an array if the value is not an array.\n *\n * @param value - A value to push.\n *\n * @return An array containing the value, or the value itself if it is already an array.\n */\nexport function toArray<T>( value: T | T[] ): T[] {\n  return isArray( value ) ? value : [ value ];\n}\n","import { toArray } from '../toArray/toArray';\n\n\n/**\n * The extended `Array#forEach` method that accepts a single value as an argument.\n *\n * @param values   - A value or values to iterate over.\n * @param iteratee - An iteratee function.\n */\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\n  toArray( values ).forEach( iteratee );\n}\n","export { empty }    from './empty/empty';\nexport { forEach }  from './forEach/forEach';\nexport { includes } from './includes/includes';\nexport { push }     from './push/push';\nexport { toArray }  from './toArray/toArray';\n\nexport const arrayProto = Array.prototype;\n","import { arrayProto } from '../../array';\r\n\r\n\r\n/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return arrayProto.slice.call( arrayLike, start, end );\r\n}\r\n","import { slice } from '../slice/slice';\n\n\n/**\n * The find method for an array or array-like object, works in IE.\n * This method is not performant for a huge array.\n *\n * @param arrayLike - An array-like object.\n * @param predicate - The predicate function to test each element in the object.\n *\n * @return A found value if available, or otherwise `undefined`.\n */\nexport function find<T>(\n  arrayLike: ArrayLike<T>,\n  predicate: ( value: T, index: number, array: T[] ) => any\n): T | undefined {\n  return slice( arrayLike ).filter( predicate )[ 0 ];\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Toggles the provided class or classes by following the `add` boolean.\n *\n * @param elm     - An element whose classes are toggled.\n * @param classes - A class or class names.\n * @param add     - Whether to add or remove a class.\n */\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\n  if ( elm ) {\n    forEach( classes, name => {\n      if ( name ) {\n        elm.classList[ add ? 'add' : 'remove' ]( name );\n      }\n    } );\n  }\n}\n","import { toggleClass } from '../toggleClass/toggleClass';\n\n\n/**\n * Adds classes to the element.\n *\n * @param elm     - An element to add classes to.\n * @param classes - Classes to add.\n */\nexport function addClass( elm: Element, classes: string | string[] ): void {\n  toggleClass( elm, classes, true );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Appends children to the parent element.\n *\n * @param parent   - A parent element.\n * @param children - A child or children to append to the parent.\n */\nexport function append( parent: Element, children: Node | Node[] ): void {\n  forEach( children, parent.appendChild.bind( parent ) );\n}\n","/**\n * Checks if the element can be selected by the provided selector or not.\n *\n * @param elm      - An element to check.\n * @param selector - A selector to test.\n *\n * @return `true` if the selector matches the element, or otherwise `false`.\n */\nexport function matches( elm: Element, selector: string ): boolean {\n  return ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\n}\n","import { slice } from '../../arrayLike';\nimport { matches } from '../matches/matches';\n\n\n/**\n * Finds children that has the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - A selector to filter children.\n *\n * @return An array with filtered children.\n */\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector: string ): E[] {\n  return parent ? slice( parent.children ).filter( child => matches( child, selector ) ) as E[] : [];\n}\n","import { children } from '../children/children';\n\n\n/**\n * Returns a child element that matches the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - A selector to filter children.\n *\n * @return A matched child element if available, or otherwise `undefined`.\n */\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\n}\n","/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes the value and key as arguments.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>(\n  object: T,\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void\n): T {\n  if ( object ) {\n    const keys = Object.keys( object );\n\n    for ( let i = 0; i < keys.length; i++ ) {\n      const key = keys[ i ];\n\n      if ( key !== '__proto__' ) {\n        if ( iteratee( object[ key ], key ) === false ) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Removes attributes from the element.\n *\n * @param elm   - An element.\n * @param attrs - An attribute or attributes to remove.\n */\nexport function removeAttribute( elm: Element, attrs: string | string[] ): void {\n  if ( elm ) {\n    forEach( attrs, attr => {\n      elm.removeAttribute( attr );\n    } );\n  }\n}\n","import { forOwn } from '../../object';\nimport { isNull, isObject } from '../../type/type';\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\n\n\nexport function setAttribute( elm: Element, attr: string, value: string | number | boolean ): void;\nexport function setAttribute( elm: Element, attrs: Record<string, string | number | boolean> ): void;\n\nexport function setAttribute(\n  elm: Element,\n  attrs: string | Record<string, string | number | boolean>,\n  value?: string | number | boolean\n): void {\n  if ( isObject( attrs ) ) {\n    forOwn( attrs, ( value, name ) => {\n      setAttribute( elm, name, value );\n    } );\n  } else {\n    isNull( value ) ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\n  }\n}\n","import { isArray, isString } from '../../type/type';\nimport { addClass } from '../addClass/addClass';\nimport { append } from '../append/append';\nimport { setAttribute } from '../setAttribute/setAttribute';\n\n\n/**\n * Creates a HTML element.\n *\n * @param tag    - A tag name.\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\n * @param parent - Optional. A parent element where the created element is appended.\n */\nexport function create<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  attrs?: Record<string, string | number | boolean> | string | string[],\n  parent?: HTMLElement\n): HTMLElementTagNameMap[ K ] {\n  const elm = document.createElement( tag );\n\n  if ( attrs ) {\n    if ( isString( attrs ) || isArray( attrs ) ) {\n      addClass( elm, attrs );\n    } else {\n      setAttribute( elm, attrs );\n    }\n  }\n\n  if ( parent ) {\n    append( parent, elm );\n  }\n\n  return elm;\n}\n","import { forEach } from '../../array';\nimport { forOwn } from '../../object';\nimport { isArray, isNull, isString } from '../../type/type';\n\n\n/**\n * The union for CSS style properties, such as \"padding\", \"fontSize\", etc.\n *\n * @since 0.1.0\n */\nexport type CSSStyleProperties = Exclude<keyof CSSStyleDeclaration, number>;\n\nexport function style(\n  elms: HTMLElement | HTMLElement[],\n  styles: Record<string, string | number>\n): void;\n\nexport function style<K extends CSSStyleProperties>(\n  elms: HTMLElement,\n  styles: K\n): CSSStyleDeclaration[ K ];\n\nexport function style(\n  elms: HTMLElement,\n  styles: string\n): string;\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elms   - An element or elements to apply styles to.\n * @param styles - An object literal with styles.\n */\nexport function style<K extends CSSStyleProperties>(\n  elms: HTMLElement | HTMLElement[],\n  styles: Record<string, string | number> | K\n): CSSStyleDeclaration[ K ] | void {\n  if ( isString( styles ) ) {\n    return isArray( elms ) ? null : getComputedStyle( elms )[ styles ];\n  }\n\n  forOwn( styles, ( value, key ) => {\n    if ( ! isNull( value ) ) {\n      forEach( elms, elm => {\n        if ( elm ) {\n          elm.style[ key ] = `${ value }`;\n        }\n      } );\n    }\n  } );\n}\n","import { style } from '../style/style';\n\n\n/**\n * Sets the `display` CSS value to the element.\n *\n * @param elm     - An element to set a new value to.\n * @param display - A new `display` value.\n */\nexport function display( elm: HTMLElement, display: string ): void {\n  style( elm, { display } );\n}\n","/**\n * Returns the specified attribute value.\n *\n * @param elm  - An element.\n * @param attr - An attribute to get.\n */\nexport function getAttribute( elm: Element, attr: string ): string {\n  return elm.getAttribute( attr );\n}\n","import { slice } from '../../arrayLike';\n\n\n/**\n * Returns elements that match the provided selector.\n *\n * @param parent   - A parent element to start searching from.\n * @param selector - A selector to query.\n *\n * @return An array with matched elements.\n */\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector: string ): E[] {\n  return slice<E>( parent.querySelectorAll( selector ) );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Removes the provided node from its parent.\n *\n * @param nodes - A node or nodes to remove.\n */\nexport function remove( nodes: Node | Node[] ): void {\n  forEach( nodes, node => {\n    if ( node && node.parentNode ) {\n      node.parentNode.removeChild( node );\n    }\n  } );\n}\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","/**\n * The project code.\n *\n * @since 3.0.0\n */\nexport const PROJECT_CODE = 'splide';\n\n/**\n * The data attribute prefix.\n *\n * @since 3.0.0\n */\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\n","\n\nexport const YOUTUBE_DATA_ATTRIBUTE = 'data-splide-youtube';\nexport const VIMEO_DATA_ATTRIBUTE = 'data-splide-vimeo';\nexport const HTML_VIDEO__DATA_ATTRIBUTE = 'data-splide-html-video';\n\nexport const VIDEO_DATA_ATTRIBUTES = [\n  YOUTUBE_DATA_ATTRIBUTE,\n  VIMEO_DATA_ATTRIBUTE,\n  HTML_VIDEO__DATA_ATTRIBUTE,\n];\n\nexport const VIDEO_ATTRIBUTE_MAP = {\n  youtube: YOUTUBE_DATA_ATTRIBUTE,\n  vimeo  : VIMEO_DATA_ATTRIBUTE,\n  html   : HTML_VIDEO__DATA_ATTRIBUTE,\n};\n","export const EVENT_VIDEO_PLAY  = 'video:play';\nexport const EVENT_VIDEO_PAUSE = 'video:pause';\nexport const EVENT_VIDEO_ENDED = 'video:ended';\nexport const EVENT_VIDEO_CLICK = 'video:click';\n","/**\n * The player is not initialized.\n */\nexport const NOT_INITIALIZED = 1;\n\n/**\n * The player is not initialized.\n */\nexport const INITIALIZING = 2;\n\n/**\n * The player is not initialized.\n */\nexport const INITIALIZED = 10;\n\n/**\n * The player is being created.\n */\nexport const CREATING_PLAYER = 3;\n\n/**\n * Requested to play a video while creating a player.\n */\nexport const PENDING_PLAY = 4;\n\n/**\n * Ready to play a video.\n */\nexport const IDLE = 5;\n\n/**\n * Loading a video.\n */\nexport const LOADING = 6;\n\n/**\n * Play request has been sent to the player, but it is aborted later.\n */\nexport const PLAY_REQUEST_ABORTED = 7;\n\n/**\n * Now playing a video\n */\nexport const PLAYING = 8;\n\n/**\n * Any error has been occurred.\n */\nexport const ERROR = 9;\n","import { EventBus, EventBusCallback, State } from '@splidejs/splide';\nimport {\n  IDLE, INITIALIZED,\n  INITIALIZING,\n  LOADING,\n  NOT_INITIALIZED,\n  PENDING_PLAY,\n  PLAY_REQUEST_ABORTED,\n  PLAYING,\n} from '../constants/states';\nimport { VideoPlayerInterface } from '../types/general';\n\n\n/**\n * The abstract class for implementing a video player.\n *\n * @since 0.5.0\n */\nexport abstract class AbstractVideoPlayer<T> implements VideoPlayerInterface {\n  /**\n   * The target element where the player is mounted.\n   */\n  protected readonly target: HTMLElement;\n\n  /**\n   * The video ID or the URL itself.\n   */\n  protected videoId: string;\n\n  /**\n   * The state object.\n   */\n  protected state = State( NOT_INITIALIZED );\n\n  /**\n   * The EventBus object.\n   */\n  protected event = EventBus();\n\n  /**\n   * The player instance.\n   */\n  protected player: T;\n\n  /**\n   * The VideoPlayer constructor.\n   *\n   * @param target  - A target element where the player is mounted.\n   * @param videoId - A video ID or an URL itself.\n   */\n  protected constructor( target: HTMLElement, videoId: string ) {\n    this.target  = target;\n    this.videoId = videoId;\n\n    this.onPlay        = this.onPlay.bind( this );\n    this.onPause       = this.onPause.bind( this );\n    this.onEnded       = this.onEnded.bind( this );\n    this.onPlayerReady = this.onPlayerReady.bind( this );\n  }\n\n  /**\n   * Creates a player.\n   *\n   * @param videoId - A video ID.\n   *\n   * @return A VideoPlayerInterface object.\n   */\n  protected abstract createPlayer( videoId: string ): T;\n\n  /**\n   * Starts the video.\n   */\n  protected abstract playVideo(): void;\n\n  /**\n   * Pauses the video.\n   */\n  protected abstract pauseVideo(): void;\n\n  /**\n   * Attaches a handler to a specified event or events.\n   *\n   * @param events   - An event or events to attach a handler to.\n   * @param callback - A callback function.\n   */\n  on( events: string | string[], callback: EventBusCallback ): void {\n    this.event.on( events, callback );\n  }\n\n  /**\n   * Requests to play the video.\n   *\n   * @todo invalid ID.\n   */\n  play(): void {\n    const { state } = this;\n\n    this.event.emit( 'play' );\n\n    if ( state.is( INITIALIZING ) ) {\n      return state.set( PENDING_PLAY );\n    }\n\n    if ( state.is( INITIALIZED ) ) {\n      this.player = this.createPlayer( this.videoId );\n      return state.set( PENDING_PLAY );\n    }\n\n    if ( state.is( [ PENDING_PLAY, PLAYING ] ) ) {\n      return;\n    }\n\n    if ( state.is( IDLE ) ) {\n      state.set( LOADING );\n      this.playVideo();\n    }\n  }\n\n  /**\n   * Requests to pause the video.\n   */\n  pause(): void {\n    const { state } = this;\n\n    this.event.emit( 'pause' );\n\n    if ( state.is( PENDING_PLAY ) ) {\n      return state.set( INITIALIZING );\n    }\n\n    if ( state.is( LOADING ) ) {\n      return state.set( PLAY_REQUEST_ABORTED );\n    }\n\n    if ( state.is( PLAYING ) ) {\n      this.pauseVideo();\n      this.state.set( IDLE );\n    }\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy(): void {\n    this.event.destroy();\n  }\n\n  /**\n   * Called when the player is created.\n   */\n  protected onPlayerReady(): void {\n    const { state } = this;\n    const isPending = state.is( PENDING_PLAY );\n\n    state.set( IDLE );\n\n    if ( isPending ) {\n      this.play();\n    }\n  }\n\n  /**\n   * Called when the video starts.\n   */\n  protected onPlay(): void {\n    const { state } = this;\n    const aborted = state.is( PLAY_REQUEST_ABORTED );\n\n    state.set( PLAYING );\n\n    if ( aborted ) {\n      this.pause();\n    } else {\n      this.event.emit( 'played' );\n    }\n  }\n\n  /**\n   * Called when the video is paused.\n   */\n  protected onPause(): void {\n    this.state.set( IDLE );\n    this.event.emit( 'paused' );\n  }\n\n  /**\n   * Called when the video is ended.\n   */\n  protected onEnded(): void {\n    this.state.set( IDLE );\n    this.event.emit( 'ended' );\n  }\n}\n","import { create } from '@splidejs/splide/src/js/utils';\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\nimport { IDLE, INITIALIZED, PLAY_REQUEST_ABORTED } from '../../constants/states';\n\n\n/**\n * The wrapper class for the Vimeo player.\n *\n * @since 0.5.0\n */\nexport class HTMLVideoPlayer extends AbstractVideoPlayer<HTMLVideoElement> {\n  /**\n   * The VimeoPlayer constructor.\n   *\n   * @param target  - A target element where the player is mounted.\n   * @param videoId - A video ID or an URL itself.\n   */\n  constructor( target: HTMLElement, videoId: string ) { // todo options\n    super( target, videoId );\n    this.state.set( INITIALIZED );\n  }\n\n  /**\n   * Creates a player.\n   *\n   * @param videoId - Optional. A video ID or an URL.\n   *\n   * @return A Vimeo player instance.\n   */\n  protected createPlayer( videoId: string ): HTMLVideoElement {\n    const player = create( 'video', { src: videoId }, this.target );\n    const on     = player.addEventListener.bind( player );\n\n    on( 'play', this.onPlay );\n    on( 'pause', this.onPause );\n    on( 'ended', this.onEnded );\n    on( 'loadeddata', this.onPlayerReady ); // todo error\n\n    return player;\n  }\n\n  /**\n   * Starts the video.\n   */\n  protected playVideo(): void {\n    this.player.play().catch( () => {\n      if ( this.state.is( PLAY_REQUEST_ABORTED ) ) {\n        this.state.set( IDLE );\n      }\n    } );\n  }\n\n  /**\n   * Pauses the video.\n   */\n  protected pauseVideo(): void {\n    this.player.pause();\n  }\n\n  /**\n   * Destroys the player.\n   */\n  destroy(): void {\n    super.destroy();\n\n    const { player } = this;\n    const off = player.addEventListener.bind( player );\n\n    off( 'play', this.onPlay );\n    off( 'pause', this.onPause );\n    off( 'ended', this.onEnded );\n    off( 'loadeddata', this.onPlayerReady );\n  }\n}\n","/*! @vimeo/player v2.16.0 | (c) 2021 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nvar isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\n\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\n\nif (!isNode && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.1 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2020 Polygon Planet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n(function (self) {\n\n  if (self.WeakMap) {\n    return;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var defineProperty = function (object, name, value) {\n    if (Object.defineProperty) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n\n      defineProperty(this, '_id', genId('_WeakMap')); // ECMA-262 23.3.1.1 WeakMap([iterable])\n\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    } // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n\n\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n\n      if (!isObject(key)) {\n        return void 0;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n\n      return void 0;\n    }); // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\n\nvar npo_src = createCommonjsModule(function (module) {\n/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n(function UMD(name, context, definition) {\n  // special form of UMD for polyfilling across evironments\n  context[name] = context[name] || definition();\n\n  if ( module.exports) {\n    module.exports = context[name];\n  }\n})(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n\n  var builtInProp,\n      cycle,\n      scheduling_queue,\n      ToString = Object.prototype.toString,\n      timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n    return setImmediate(fn);\n  } : setTimeout; // dammit, IE8.\n\n  try {\n    Object.defineProperty({}, \"x\", {});\n\n    builtInProp = function builtInProp(obj, name, val, config) {\n      return Object.defineProperty(obj, name, {\n        value: val,\n        writable: true,\n        configurable: config !== false\n      });\n    };\n  } catch (err) {\n    builtInProp = function builtInProp(obj, name, val) {\n      obj[name] = val;\n      return obj;\n    };\n  } // Note: using a queue instead of array for efficiency\n\n\n  scheduling_queue = function Queue() {\n    var first, last, item;\n\n    function Item(fn, self) {\n      this.fn = fn;\n      this.self = self;\n      this.next = void 0;\n    }\n\n    return {\n      add: function add(fn, self) {\n        item = new Item(fn, self);\n\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n\n        last = item;\n        item = void 0;\n      },\n      drain: function drain() {\n        var f = first;\n        first = last = cycle = void 0;\n\n        while (f) {\n          f.fn.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  }();\n\n  function schedule(fn, self) {\n    scheduling_queue.add(fn, self);\n\n    if (!cycle) {\n      cycle = timer(scheduling_queue.drain);\n    }\n  } // promise duck typing\n\n\n  function isThenable(o) {\n    var _then,\n        o_type = typeof o;\n\n    if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n      _then = o.then;\n    }\n\n    return typeof _then == \"function\" ? _then : false;\n  }\n\n  function notify() {\n    for (var i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n\n    this.chain.length = 0;\n  } // NOTE: This is a separate function to isolate\n  // the `try..catch` so that other code can be\n  // optimized better\n\n\n  function notifyIsolated(self, cb, chain) {\n    var ret, _then;\n\n    try {\n      if (cb === false) {\n        chain.reject(self.msg);\n      } else {\n        if (cb === true) {\n          ret = self.msg;\n        } else {\n          ret = cb.call(void 0, self.msg);\n        }\n\n        if (ret === chain.promise) {\n          chain.reject(TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) {\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n\n  function resolve(msg) {\n    var _then,\n        self = this; // already triggered?\n\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    try {\n      if (_then = isThenable(msg)) {\n        schedule(function () {\n          var def_wrapper = new MakeDefWrapper(self);\n\n          try {\n            _then.call(msg, function $resolve$() {\n              resolve.apply(def_wrapper, arguments);\n            }, function $reject$() {\n              reject.apply(def_wrapper, arguments);\n            });\n          } catch (err) {\n            reject.call(def_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDefWrapper(self), err);\n    }\n  }\n\n  function reject(msg) {\n    var self = this; // already triggered?\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    self.msg = msg;\n    self.state = 2;\n\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (var idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n\n  function MakeDefWrapper(self) {\n    this.def = self;\n    this.triggered = false;\n  }\n\n  function MakeDef(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg = void 0;\n  }\n\n  function Promise(executor) {\n    if (typeof executor != \"function\") {\n      throw TypeError(\"Not a function\");\n    }\n\n    if (this.__NPO__ !== 0) {\n      throw TypeError(\"Not a promise\");\n    } // instance shadowing the inherited \"brand\"\n    // to signal an already \"initialized\" promise\n\n\n    this.__NPO__ = 1;\n    var def = new MakeDef(this);\n\n    this[\"then\"] = function then(success, failure) {\n      var o = {\n        success: typeof success == \"function\" ? success : true,\n        failure: typeof failure == \"function\" ? failure : false\n      }; // Note: `then(..)` itself can be borrowed to be used against\n      // a different promise constructor for making the chained promise,\n      // by substituting a different `this` binding.\n\n      o.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n\n        o.resolve = resolve;\n        o.reject = reject;\n      });\n      def.chain.push(o);\n\n      if (def.state !== 0) {\n        schedule(notify, def);\n      }\n\n      return o.promise;\n    };\n\n    this[\"catch\"] = function $catch$(failure) {\n      return this.then(void 0, failure);\n    };\n\n    try {\n      executor.call(void 0, function publicResolve(msg) {\n        resolve.call(def, msg);\n      }, function publicReject(msg) {\n        reject.call(def, msg);\n      });\n    } catch (err) {\n      reject.call(def, err);\n    }\n  }\n\n  var PromisePrototype = builtInProp({}, \"constructor\", Promise,\n  /*configurable=*/\n  false); // Note: Android 4 cannot use `Object.defineProperty(..)` here\n\n  Promise.prototype = PromisePrototype; // built-in \"brand\" to signal an \"uninitialized\" promise\n\n  builtInProp(PromisePrototype, \"__NPO__\", 0,\n  /*configurable=*/\n  false);\n  builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n    var Constructor = this; // spec mandated checks\n    // note: best \"isPromise\" check that's practical for now\n\n    if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n      return msg;\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      resolve(msg);\n    });\n  });\n  builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      reject(msg);\n    });\n  });\n  builtInProp(Promise, \"all\", function Promise$all(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      var len = arr.length,\n          msgs = Array(len),\n          count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  builtInProp(Promise, \"race\", function Promise$race(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n  return Promise;\n});\n});\n\n/**\n * @module lib/callbacks\n */\nvar callbackMap = new WeakMap();\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\n\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\n\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\n\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!playerCallbacks[name]) {\n    return true;\n  } // If no callback is passed, remove all callbacks for the event\n\n\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n\n  var index = playerCallbacks[name].indexOf(callback);\n\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\n\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\n\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['autopause', 'autoplay', 'background', 'byline', 'color', 'controls', 'dnt', 'height', 'id', 'keyboard', 'loop', 'maxheight', 'maxwidth', 'muted', 'playsinline', 'portrait', 'responsive', 'speed', 'texttrack', 'title', 'transparent', 'url', 'width'];\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\n\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n\n    return params;\n  }, defaults);\n}\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\n\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\n\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n\n    var url = \"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(videoUrl));\n\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n\n      try {\n        var json = JSON.parse(xhr.responseText); // Check api response for 403 on oembed\n\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n\n    xhr.send();\n  });\n}\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n\n  window.VimeoPlayerResizeEmbeds_ = true;\n\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    } // 'spacechange' is fired only on embeds with cards\n\n\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n\n    var iframes = parent.querySelectorAll('iframe');\n\n    for (var i = 0; i < iframes.length; i++) {\n      if (iframes[i].contentWindow !== event.source) {\n        continue;\n      } // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n\n\n      var space = iframes[i].parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n      break;\n    }\n  };\n\n  window.addEventListener('message', onMessage);\n}\n\n/**\n * @module lib/postmessage\n */\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\n\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n\n  return data;\n}\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {object} params The parameters to send to the player.\n * @return {void}\n */\n\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n\n  var message = {\n    method: method\n  };\n\n  if (params !== undefined) {\n    message.value = params;\n  } // IE 8 and 9 do not support passing messages, so stringify them\n\n\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\n\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n\n      callback.resolve(param);\n    } catch (e) {// empty\n    }\n  });\n}\n\n/* MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nTerms */\nfunction initializeScreenfull() {\n  var fn = function () {\n    var val;\n    var fnMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // New WebKit\n    ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit\n    ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n\n    for (; i < l; i++) {\n      val = fnMap[i];\n\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n\n        return ret;\n      }\n    }\n\n    return false;\n  }();\n\n  var eventNameMap = {\n    fullscreenchange: fn.fullscreenchange,\n    fullscreenerror: fn.fullscreenerror\n  };\n  var screenfull = {\n    request: function request(element) {\n      return new Promise(function (resolve, reject) {\n        var onFullScreenEntered = function onFullScreenEntered() {\n          screenfull.off('fullscreenchange', onFullScreenEntered);\n          resolve();\n        };\n\n        screenfull.on('fullscreenchange', onFullScreenEntered);\n        element = element || document.documentElement;\n        var returnPromise = element[fn.requestFullscreen]();\n\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenEntered).catch(reject);\n        }\n      });\n    },\n    exit: function exit() {\n      return new Promise(function (resolve, reject) {\n        if (!screenfull.isFullscreen) {\n          resolve();\n          return;\n        }\n\n        var onFullScreenExit = function onFullScreenExit() {\n          screenfull.off('fullscreenchange', onFullScreenExit);\n          resolve();\n        };\n\n        screenfull.on('fullscreenchange', onFullScreenExit);\n        var returnPromise = document[fn.exitFullscreen]();\n\n        if (returnPromise instanceof Promise) {\n          returnPromise.then(onFullScreenExit).catch(reject);\n        }\n      });\n    },\n    on: function on(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.addEventListener(eventName, callback);\n      }\n    },\n    off: function off(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.removeEventListener(eventName, callback);\n      }\n    }\n  };\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function get() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function get() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    isEnabled: {\n      enumerable: true,\n      get: function get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n  return screenfull;\n}\n\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\nvar screenfull = {};\n\nvar Player = /*#__PURE__*/function () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Player);\n\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n\n      element = element[0];\n    } // Find an element by ID\n\n\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    } // Not an element!\n\n\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    } // Already initialized an embed in this div, so grab the iframe\n\n\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n\n      if (iframe) {\n        element = iframe;\n      }\n    } // iframe url is not a Vimeo url\n\n\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    } // If there is already a player object in the map, return that\n\n\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n\n    this._window = element.ownerDocument.defaultView;\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      _this._onMessage = function (event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n\n          resolve();\n          return;\n        }\n\n        processData(_this, data);\n      };\n\n      _this._window.addEventListener('message', _this._onMessage);\n\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element); // Overwrite element with the new iframe,\n          // but store reference to the original element\n\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    }); // Store a copy of this Player in the map\n\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this); // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n\n    if (screenfull.isEnabled) {\n      var exitFullscreen = function exitFullscreen() {\n        return screenfull.exit();\n      };\n\n      screenfull.on('fullscreenchange', function () {\n        if (screenfull.isFullscreen) {\n          storeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        } else {\n          removeCallback(_this, 'event:exitFullscreen', exitFullscreen);\n        } // eslint-disable-next-line\n\n\n        _this.ready().then(function () {\n          postMessage(_this, 'fullscreenchange', screenfull.isFullscreen);\n        });\n      });\n    }\n\n    return this;\n  }\n  /**\n   * Get a promise for a method.\n   *\n   * @param {string} name The API method to call.\n   * @param {Object} [args={}] Arguments to send via postMessage.\n   * @return {Promise}\n   */\n\n\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value: function callMethod(name) {\n      var _this2 = this;\n\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get'); // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        } // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback); // If there are no callbacks left, remove the listener\n\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|object} options The id of the video or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n    /**\n     * Request that the player enters fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"requestFullscreen\",\n    value: function requestFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.request(this.element);\n      }\n\n      return this.callMethod('requestFullscreen');\n    }\n    /**\n     * Request that the player exits fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"exitFullscreen\",\n    value: function exitFullscreen() {\n      if (screenfull.isEnabled) {\n        return screenfull.exit();\n      }\n\n      return this.callMethod('exitFullscreen');\n    }\n    /**\n     * Returns true if the player is currently fullscreen.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getFullscreen\",\n    value: function getFullscreen() {\n      if (screenfull.isEnabled) {\n        return npo_src.resolve(screenfull.isFullscreen);\n      }\n\n      return this.get('fullscreen');\n    }\n    /**\n     * Request that the player enters picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"requestPictureInPicture\",\n    value: function requestPictureInPicture() {\n      return this.callMethod('requestPictureInPicture');\n    }\n    /**\n     * Request that the player exits picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"exitPictureInPicture\",\n    value: function exitPictureInPicture() {\n      return this.callMethod('exitPictureInPicture');\n    }\n    /**\n     * Returns true if the player is currently picture-in-picture.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"getPictureInPicture\",\n    value: function getPictureInPicture() {\n      return this.get('pictureInPicture');\n    }\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          // If we've added an additional wrapper div, remove that from the DOM.\n          // If not, just remove the iframe element.\n          if (_this5.element.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== _this5.element.parentNode) {\n            _this5.element.parentNode.parentNode.removeChild(_this5.element.parentNode);\n          } else {\n            _this5.element.parentNode.removeChild(_this5.element);\n          }\n        } // If the clip is private there is a case where the element stays the\n        // div element. Destroy should reset the div and remove the iframe child.\n\n\n        if (_this5.element && _this5.element.nodeName === 'DIV' && _this5.element.parentNode) {\n          _this5.element.removeAttribute('data-vimeo-initialized');\n\n          var iframe = _this5.element.querySelector('iframe');\n\n          if (iframe && iframe.parentNode) {\n            // If we've added an additional wrapper div, remove that from the DOM.\n            // If not, just remove the iframe element.\n            if (iframe.parentNode.parentNode && _this5._originalElement && _this5._originalElement !== iframe.parentNode) {\n              iframe.parentNode.parentNode.removeChild(iframe.parentNode);\n            } else {\n              iframe.parentNode.removeChild(iframe);\n            }\n          }\n        }\n\n        _this5._window.removeEventListener('message', _this5._onMessage);\n\n        resolve();\n      });\n    }\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n    /**\n     * @typedef {Object} CameraProperties\n     * @prop {number} props.yaw - Number between 0 and 360.\n     * @prop {number} props.pitch - Number between -90 and 90.\n     * @prop {number} props.roll - Number between -180 and 180.\n     * @prop {number} props.fov - The field of view in degrees.\n     */\n\n    /**\n     * A promise to get the camera properties of the player.\n     *\n     * @promise GetCameraPromise\n     * @fulfill {CameraProperties} The camera properties.\n     */\n\n    /**\n     * For 360° videos get the camera properties for this player.\n     *\n     * @return {GetCameraPromise}\n     */\n\n  }, {\n    key: \"getCameraProps\",\n    value: function getCameraProps() {\n      return this.get('cameraProps');\n    }\n    /**\n     * A promise to set the camera properties of the player.\n     *\n     * @promise SetCameraPromise\n     * @fulfill {Object} The camera was successfully set.\n     * @reject {RangeError} The range was out of bounds.\n     */\n\n    /**\n     * For 360° videos set the camera properties for this player.\n     *\n     * @param {CameraProperties} camera The camera properties\n     * @return {SetCameraPromise}\n     */\n\n  }, {\n    key: \"setCameraProps\",\n    value: function setCameraProps(camera) {\n      return this.set('cameraProps', camera);\n    }\n    /**\n     * A representation of a chapter.\n     *\n     * @typedef {Object} VimeoChapter\n     * @property {number} startTime The start time of the chapter.\n     * @property {object} title The title of the chapter.\n     * @property {number} index The place in the order of Chapters. Starts at 1.\n     */\n\n    /**\n     * A promise to get chapters for the video.\n     *\n     * @promise GetChaptersPromise\n     * @fulfill {VimeoChapter[]} The chapters for the video.\n     */\n\n    /**\n     * Get an array of all the chapters for the video.\n     *\n     * @return {GetChaptersPromise}\n     */\n\n  }, {\n    key: \"getChapters\",\n    value: function getChapters() {\n      return this.get('chapters');\n    }\n    /**\n     * A promise to get the currently active chapter.\n     *\n     * @promise GetCurrentChaptersPromise\n     * @fulfill {VimeoChapter|undefined} The current chapter for the video.\n     */\n\n    /**\n     * Get the currently active chapter for the video.\n     *\n     * @return {GetCurrentChaptersPromise}\n     */\n\n  }, {\n    key: \"getCurrentChapter\",\n    value: function getCurrentChapter() {\n      return this.get('currentChapter');\n    }\n    /**\n     * A promise to get the color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n\n    /**\n     * Get the color for this player.\n     *\n     * @return {GetColorPromise}\n     */\n\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n    /**\n     * A promise to set the color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n\n    /**\n     * Set the color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n    /**\n     * A promise to set the muted state of the player.\n     *\n     * @promise SetMutedPromise\n     * @fulfill {boolean} The muted state that was set.\n     */\n\n    /**\n     * Set the muted state of the player. When set to `true`, the player\n     * volume will be muted.\n     *\n     * @param {boolean} muted\n     * @return {SetMutedPromise}\n     */\n\n  }, {\n    key: \"setMuted\",\n    value: function setMuted(muted) {\n      return this.set('muted', muted);\n    }\n    /**\n     * A promise to get the muted state of the player.\n     *\n     * @promise GetMutedPromise\n     * @fulfill {boolean} Whether or not the player is muted.\n     */\n\n    /**\n     * Get the muted state of the player.\n     *\n     * @return {GetMutedPromise}\n     */\n\n  }, {\n    key: \"getMuted\",\n    value: function getMuted() {\n      return this.get('muted');\n    }\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0.5 to 2.\n     */\n\n    /**\n     * Get the playback rate of the player on a scale from `0.5` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0.5 or greater than 2.\n     */\n\n    /**\n     * Set the playback rate of the player on a scale from `0.5` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n    /**\n     * A promise to get the qualities available of the current video.\n     *\n     * @promise GetQualitiesPromise\n     * @fulfill {Array} The qualities of the video.\n     */\n\n    /**\n     * Get the qualities of the current video.\n     *\n     * @return {GetQualitiesPromise}\n     */\n\n  }, {\n    key: \"getQualities\",\n    value: function getQualities() {\n      return this.get('qualities');\n    }\n    /**\n     * A promise to get the current set quality of the video.\n     *\n     * @promise GetQualityPromise\n     * @fulfill {string} The current set quality.\n     */\n\n    /**\n     * Get the current set quality of the video.\n     *\n     * @return {GetQualityPromise}\n     */\n\n  }, {\n    key: \"getQuality\",\n    value: function getQuality() {\n      return this.get('quality');\n    }\n    /**\n     * A promise to set the video quality.\n     *\n     * @promise SetQualityPromise\n     * @fulfill {number} The quality was set.\n     * @reject {RangeError} The quality is not available.\n     */\n\n    /**\n     * Set a video quality.\n     *\n     * @param {string} quality\n     * @return {SetQualityPromise}\n     */\n\n  }, {\n    key: \"setQuality\",\n    value: function setQuality(quality) {\n      return this.set('quality', quality);\n    }\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n  }]);\n\n  return Player;\n}(); // Setup embed only if this is not a node environment\n\n\nif (!isNode) {\n  screenfull = initializeScreenfull();\n  initializeEmbeds();\n  resizeEmbeds();\n}\n\nexport default Player;\n","import Vimeo from '@vimeo/player';\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\nimport { IDLE, INITIALIZED, PLAY_REQUEST_ABORTED } from '../../constants/states';\n\n\n/**\n * The wrapper class for the Vimeo player.\n *\n * @since 0.5.0\n */\nexport class VimeoPlayer extends AbstractVideoPlayer<Vimeo> {\n  /**\n   * The VimeoPlayer constructor.\n   *\n   * @param target  - A target element where the player is mounted.\n   * @param videoId - A video ID or an URL itself.\n   */\n  constructor( target: HTMLElement, videoId: string ) { // todo options\n    super( target, videoId );\n    this.state.set( INITIALIZED );\n  }\n\n  /**\n   * Creates a player.\n   *\n   * @param videoId - Optional. A video ID or an URL.\n   *\n   * @return A Vimeo player instance.\n   */\n  protected createPlayer( videoId: string ): Vimeo {\n    const isURL = videoId.indexOf( 'http' ) === 0;\n\n    console.log( videoId, +videoId );\n\n    const player = new Vimeo( this.target, {\n      id : isURL ? undefined : +videoId,\n      url: isURL ? videoId : undefined,\n    } );\n\n    player.on( 'play', this.onPlay );\n    player.on( 'pause', this.onPause );\n    player.on( 'ended', this.onEnded );\n    player.ready().then( this.onPlayerReady ); // todo error\n\n    return player;\n  }\n\n  /**\n   * Starts the video.\n   */\n  protected playVideo(): void {\n    this.player.play().catch( () => {\n      if ( this.state.is( PLAY_REQUEST_ABORTED ) ) {\n        this.state.set( IDLE );\n      }\n    } );\n  }\n\n  /**\n   * Pauses the video.\n   */\n  protected pauseVideo(): void {\n    this.player.pause();\n  }\n}\n","import { isUndefined, queryAll, create, isFunction } from '@splidejs/splide/src/js/utils';\n\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady: () => void;\n  }\n}\n\n/**\n * The URL to the YouTube iframe API script.\n */\nconst YOUTUBE_API_SRC = 'http://www.youtube.com/player_api'; // todo\n\n/**\n * The class for loading the YouTube API script.\n *\n * @link https://developers.google.com/youtube/iframe_api_reference\n *\n * @since 0.5.0\n */\nexport class YouTubeIframeAPILoader {\n  /**\n   * Starts loading the YouTube API script.\n   *\n   * @param callback - A callback function that will be invoked when the API is ready.\n   */\n  load( callback: () => void ): void {\n    if ( window.YT && isFunction( window.YT.Player ) ) {\n      return callback();\n    }\n\n    this.attachCallback( callback );\n\n    if ( this.shouldLoad() ) {\n      create( 'script', { src: YOUTUBE_API_SRC }, document.head );\n    }\n  }\n\n  /**\n   * Checks if the new script tag for the YouTube API should be injected or not.\n   *\n   * @return `true` if the source\n   */\n  private shouldLoad(): boolean {\n    return ! queryAll<HTMLScriptElement>( document, 'script' ).some( script => script.src === YOUTUBE_API_SRC );\n  }\n\n  /**\n   * Attaches the callback function that will be invoked when the API is ready.\n   *\n   * @param callback - A callback function to invoke.\n   */\n  private attachCallback( callback: () => void ): void {\n    let oldCallback: () => void;\n\n    if ( ! isUndefined( window.onYouTubeIframeAPIReady ) ) {\n      oldCallback = window.onYouTubeIframeAPIReady;\n    }\n\n    window.onYouTubeIframeAPIReady = () => {\n      oldCallback && oldCallback();\n      callback();\n    };\n  }\n}\n","import { find } from '@splidejs/splide/src/js/utils';\nimport { AbstractVideoPlayer } from '../../classes/AbstractVideoPlayer';\nimport { IDLE, INITIALIZED, INITIALIZING, PENDING_PLAY } from '../../constants/states';\nimport { YouTubeIframeAPILoader } from './YouTubeIframeAPILoader';\n\n\n/**\n * The wrapper class for the YouTube player.\n *\n * @since 0.5.0\n */\nexport class YouTubePlayer extends AbstractVideoPlayer<YT.Player> {\n  /**\n   * The YouTube constructor.\n   *\n   * @param target  - A target element where the player is mounted.\n   * @param videoId - A video ID or an URL itself.\n   */\n  constructor( target: HTMLElement, videoId: string ) { //todo options\n    super( target, videoId );\n\n    this.videoId = this.parseVideoId( videoId );\n\n    if ( this.videoId ) {\n      this.state.set( INITIALIZING );\n      new YouTubeIframeAPILoader().load( this.onAPIReady.bind( this ) );\n    }\n  }\n\n  /**\n   * Called when the YouTube iframe API is ready.\n   */\n  private onAPIReady(): void {\n    const { state } = this;\n    const isPending = state.is( PENDING_PLAY );\n\n    state.set( INITIALIZED );\n\n    if ( isPending ) {\n      this.play();\n    }\n  }\n\n  /**\n   * Creates a player.\n   *\n   * @param videoId - Optional. A video ID.\n   *\n   * @return A YT.Player instance.\n   */\n  protected createPlayer( videoId: string ): YT.Player {\n    return new YT.Player( this.target, {\n      videoId,\n      events: {\n        onReady      : this.onPlayerReady.bind( this ),\n        onStateChange: this.onPlayerStateChange.bind( this ),\n      },\n    } );\n  }\n\n  /**\n   * Called when the YouTube player state is changed.\n   *\n   * @param e - A YT.OnStateChangeEvent object.\n   */\n  private onPlayerStateChange( e: YT.OnStateChangeEvent ): void {\n    const { PLAYING, PAUSED, ENDED } = YT.PlayerState;\n\n    switch ( true ) {\n      case e.data === PLAYING:\n        this.onPlay();\n        break;\n\n      case e.data === PAUSED:\n        this.onPause();\n        break;\n\n      case e.data === ENDED:\n        this.onEnded();\n        break;\n    }\n  }\n\n  /**\n   * Starts the video.\n   */\n  protected playVideo(): void {\n    this.player.playVideo();\n  }\n\n  /**\n   * Pauses the video.\n   */\n  protected pauseVideo(): void {\n    this.player.pauseVideo();\n  }\n\n  /**\n   * Parses the video ID.\n   * If it is an URL, plucks the ID from it.\n   *\n   * @param id - An ID to parse.\n   *\n   * @return A video ID if available, or otherwise `undefined`.\n   */\n  private parseVideoId( id: string ): string | undefined {\n    return id.indexOf( 'http' ) === 0 ? this.parseUrl( id ) : id;\n  }\n\n  /**\n   * Plucks the ID from the provided URL.\n   *\n   * @param url - An URL to parse.\n   *\n   * @return A video ID if available, or otherwise `undefined`.\n   */\n  private parseUrl( url: string ): string | undefined {\n    const [ , search ] = url.split( /[#?]/ );\n    const query = find( search.split( '&' ), query => query.indexOf( 'v=' ) === 0 );\n    return query && query.replace( 'v=', '' );\n  }\n}\n","import { PROJECT_CODE } from './project';\n\n\nexport const CLASS_ROOT            = PROJECT_CODE;\nexport const CLASS_SLIDER          = `${ PROJECT_CODE }__slider`;\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\nexport const CLASS_AUTOPLAY        = `${ PROJECT_CODE }__autoplay`;\nexport const CLASS_PLAY            = `${ PROJECT_CODE }__play`;\nexport const CLASS_PAUSE           = `${ PROJECT_CODE }__pause`;\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\nexport const CLASS_INITIALIZED     = 'is-initialized';\nexport const CLASS_ACTIVE          = 'is-active';\nexport const CLASS_PREV            = 'is-prev';\nexport const CLASS_NEXT            = 'is-next';\nexport const CLASS_VISIBLE         = 'is-visible';\nexport const CLASS_LOADING         = 'is-loading';\n\n/**\n * The array with all status classes.\n *\n * @since 3.0.0\n */\nexport const STATUS_CLASSES = [ CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING ];\n\n/**\n * The collection of classes for elements that Splide dynamically creates.\n *\n * @since 3.0.0\n */\nexport const CLASSES = {\n  slide     : CLASS_SLIDE,\n  clone     : CLASS_CLONE,\n  arrows    : CLASS_ARROWS,\n  arrow     : CLASS_ARROW,\n  prev      : CLASS_ARROW_PREV,\n  next      : CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page      : CLASS_PAGINATION_PAGE,\n  spinner   : CLASS_SPINNER,\n};\n","export const CLASS_VIDEO_WRAPPER     = 'splide__video';\nexport const CLASS_VIDEO_PLAY_BUTTON = `${ CLASS_VIDEO_WRAPPER }__play`;\n","import { EventBus, EventBusCallback } from '@splidejs/splide';\nimport { CLASS_CONTAINER, CLASS_SLIDE } from '@splidejs/splide/src/js/constants/classes';\nimport { create, display, remove, removeClass, child } from '@splidejs/splide/src/js/utils';\nimport { CLASS_VIDEO_PLAY_BUTTON, CLASS_VIDEO_WRAPPER } from '../constants/classes';\n\n\nexport class PlayerUI {\n  private readonly parent: HTMLElement;\n\n  private readonly modifier: string;\n\n  private readonly event = EventBus();\n\n  wrapper: HTMLDivElement;\n\n  iframeWrapper: HTMLDivElement;\n\n  playButton: HTMLButtonElement;\n\n  constructor( slide: HTMLElement ) {\n    const container = child( slide, `.${ CLASS_CONTAINER }` );\n\n    this.parent   = container || slide;\n    this.modifier = `${ container ? CLASS_CONTAINER : CLASS_SLIDE }--has-video`;\n\n    this.create();\n    this.listen();\n  }\n\n  private create(): void {\n    this.wrapper       = create( 'div', CLASS_VIDEO_WRAPPER, this.parent );\n    this.iframeWrapper = create( 'div', null, this.wrapper );\n    this.playButton    = create( 'button', { class: CLASS_VIDEO_PLAY_BUTTON, type: 'button' }, this.parent );\n  }\n\n  private listen(): void {\n    this.parent.addEventListener( 'click', () => {\n      this.event.emit( 'click' );\n    } );\n  }\n\n  destroy(): void {\n    removeClass( this.parent, this.modifier );\n    remove( [ this.wrapper, this.playButton ] );\n    this.event.destroy();\n  }\n\n  toggleButton( show?: boolean ): void {\n    display( this.playButton, show ? '' : 'none' );\n  }\n\n  toggleWrapper( show?: boolean ): void {\n    display( this.wrapper, show ? '' : 'none' );\n  }\n\n  hide(): void {\n    this.toggleButton( false );\n    this.toggleWrapper( true );\n  }\n\n  show(): void {\n    this.toggleButton( true );\n    this.toggleWrapper( false );\n  }\n\n  on( events: string | string[], callback: EventBusCallback ): void {\n    this.event.on( events, callback );\n  }\n}\n","import { EVENT_MOVE, EventInterface, EventInterfaceObject, Splide } from '@splidejs/splide';\nimport { getAttribute } from '@splidejs/splide/src/js/utils';\nimport { HTML_VIDEO__DATA_ATTRIBUTE, VIMEO_DATA_ATTRIBUTE, YOUTUBE_DATA_ATTRIBUTE } from '../constants/data-attributes';\nimport { EVENT_VIDEO_CLICK, EVENT_VIDEO_PAUSE, EVENT_VIDEO_PLAY } from '../constants/events';\nimport { HTMLVideoPlayer } from '../players/html/HTMLVideoPlayer';\nimport { VimeoPlayer } from '../players/vimeo/VimeoPlayer';\nimport { YouTubePlayer } from '../players/youtube/YouTubePlayer';\nimport { VideoPlayerConstructor, VideoPlayerInterface } from '../types/general';\nimport { PlayerUI } from './PlayerUI';\n\n\n/**\n * Switches the player constructor by the data attribute name.\n *\n * @since 0.5.0\n */\nconst VIDEO_PLAYER_MAP: Array<[ string, VideoPlayerConstructor ]> = [\n  [ YOUTUBE_DATA_ATTRIBUTE, YouTubePlayer ],\n  [ VIMEO_DATA_ATTRIBUTE, VimeoPlayer ],\n  [ HTML_VIDEO__DATA_ATTRIBUTE, HTMLVideoPlayer ],\n];\n\n/**\n * The class for the video player that connects a Splide slide with PlayerUI and VideoPlayer instances.\n *\n * @since 0.5.0\n */\nexport class Player {\n  /**\n   * The Splide instance.\n   */\n  private Splide: Splide;\n\n  /**\n   * The PlayerUI instance.\n   */\n  private ui: PlayerUI;\n\n  /**\n   * The VideoPlayer instance.\n   */\n  private player: VideoPlayerInterface;\n\n  /**\n   * The EventInterface object.\n   */\n  private event: EventInterfaceObject;\n\n  /**\n   * The Player constructor.\n   *\n   * @param Splide - A Splide instance.\n   * @param slide  - A slide element where the player is applied.\n   */\n  constructor( Splide: Splide, slide: HTMLElement ) {\n    this.Splide = Splide;\n    this.event  = EventInterface( Splide );\n\n    this.createPlayer( slide );\n\n    if ( this.player ) {\n      this.listen();\n    }\n  }\n\n  /**\n   * Creates a Player.\n   * This will fail when the slide element does not have a data attribute for a video.\n   *\n   * @param slide - A slide element.\n   */\n  private createPlayer( slide: HTMLElement ): void {\n    VIDEO_PLAYER_MAP.forEach( ( [ attr, Constructor ] ) => {\n      const id = getAttribute( slide, attr );\n\n      if ( id ) {\n        this.ui     = new PlayerUI( slide );\n        this.player = new Constructor( this.ui.iframeWrapper, id );\n      }\n    } );\n  }\n\n  /**\n   * Listens to UI, VideoPlayer and Splide events.\n   */\n  private listen(): void {\n    this.ui.on( 'click', this.onClick.bind( this ) );\n\n    this.player.on( 'play', this.onPlay.bind( this ) );\n    this.player.on( 'played', this.onPlayed.bind( this ) );\n    this.player.on( 'pause', this.onPause.bind( this ) );\n    this.player.on( 'paused', this.onPaused.bind( this ) );\n\n    this.event.on( EVENT_MOVE, this.pause.bind( this ) );\n    this.event.on( EVENT_VIDEO_CLICK, this.onVideoClick.bind( this ) );\n  }\n\n  /**\n   * Starts the video.\n   */\n  private play(): void {\n    if ( this.player ) {\n      this.player.play();\n    }\n  }\n\n  /**\n   * Pauses the video.\n   */\n  private pause(): void {\n    if ( this.player ) {\n      this.player.pause();\n    }\n  }\n\n  /**\n   * Called when the slide element is clicked.\n   */\n  private onClick(): void {\n    this.play();\n    this.event.emit( EVENT_VIDEO_CLICK, this );\n  }\n\n  /**\n   * Called when any slides that have a video are clicked.\n   *\n   * @param player - A player instance that the clicked slide has.\n   */\n  private onVideoClick( player: Player ): void {\n    if ( this !== player ) {\n      this.pause();\n    }\n  }\n\n  /**\n   * Called when the video is requested to start.\n   * The video may be loading at this moment.\n   */\n  private onPlay(): void {\n    this.ui.hide();\n  }\n\n  /**\n   * Called when the video begins.\n   */\n  private onPlayed(): void {\n    this.ui.hide();\n    this.event.emit( EVENT_VIDEO_PLAY, this );\n  }\n\n  /**\n   * Called when the video is requested to pause.\n   */\n  private onPause(): void {\n    this.ui.show();\n  }\n\n  /**\n   * Called when the video is paused.\n   */\n  private onPaused(): void {\n    this.ui.show();\n    this.event.emit( EVENT_VIDEO_PAUSE, this );\n  }\n\n  /**\n   * Destroys the instance.\n   */\n  destroy(): void {\n    if ( this.player ) {\n      this.ui.destroy();\n      this.player.destroy();\n    }\n  }\n}\n","import { BaseComponent, Components, EventInterface, Options, Splide } from '@splidejs/splide';\nimport { Player } from '../../classes/Player';\n\n\nexport interface VideoComponent extends BaseComponent {\n}\n\n/**\n * The extension for embedding videos to slides.\n *\n * @since 0.2.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Video component object.\n */\nexport function Video( Splide: Splide, Components: Components, options: Options ): BaseComponent {\n  const { on, bind } = EventInterface( Splide );\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    Components.Slides.forEach( Slide => {\n      new Player( Splide, Slide.slide );\n    } );\n  }\n\n  return {\n    mount,\n  }\n}\n","import { Video } from '../extensions';\n\n\ndeclare global {\n  interface Window {\n    splide: Record<string, any>;\n  }\n}\n\nif ( typeof window !== 'undefined' ) {\n  window.splide = window.splide || {};\n  window.splide.Extensions = window.splide.Extensions || {};\n  window.splide.Extensions.Video = Video;\n}\n"],"names":["isArray","subject","Array","toArray","value","forEach","values","iteratee","includes","array","indexOf","push","items","apply","arrayProto","prototype","slice","arrayLike","start","end","call","forOwn","object","keys","Object","i","length","key","EVENT_MOVE","EVENT_DESTROY","EventBus","handlers","on","events","callback","priority","forEachEvent","event","namespace","sort","handler1","handler2","off","eventHandlers","filter","handler","offBy","emit","_arguments","arguments","destroy","join","split","eventNS","fragments","EventInterface","Splide","listeners","bind","targets","options","target","addEventListener","unbind","listener","removeEventListener","data","State","initialState","state","set","is","states","isObject","isNull","isFunction","isString","isUndefined","find","predicate","toggleClass","elm","classes","add","name","classList","addClass","append","parent","children","appendChild","matches","selector","child","firstElementChild","removeAttribute","attrs","attr","setAttribute","String","create","tag","document","createElement","style","elms","styles","getComputedStyle","display","getAttribute","queryAll","querySelectorAll","remove","nodes","node","parentNode","removeChild","removeClass","PROJECT_CODE","YOUTUBE_DATA_ATTRIBUTE","VIMEO_DATA_ATTRIBUTE","HTML_VIDEO__DATA_ATTRIBUTE","EVENT_VIDEO_PLAY","EVENT_VIDEO_PAUSE","EVENT_VIDEO_CLICK","NOT_INITIALIZED","INITIALIZING","INITIALIZED","PENDING_PLAY","IDLE","LOADING","PLAY_REQUEST_ABORTED","PLAYING","AbstractVideoPlayer","videoId","onPlay","onPause","onEnded","onPlayerReady","play","player","createPlayer","playVideo","pause","pauseVideo","isPending","aborted","HTMLVideoPlayer","src","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","isNode","global","toString","getMethodName","prop","type","toLowerCase","concat","substr","toUpperCase","isDomElement","element","Boolean","nodeType","ownerDocument","defaultView","isInteger","isNaN","parseFloat","isFinite","Math","floor","isVimeoUrl","url","test","getVimeoUrl","oEmbedParameters","undefined","id","idOrUrl","Error","replace","arrayIndexOfSupport","postMessageSupport","window","postMessage","commonjsGlobal","globalThis","self","createCommonjsModule","fn","module","exports","WeakMap","hasOwnProperty","genId","checkInstance","entry","_id","x","methodName","prefix","rand","random","substring","npo_src","UMD","context","definition","DEF","builtInProp","cycle","scheduling_queue","ToString","timer","setImmediate","setTimeout","obj","val","config","err","Queue","first","last","item","Item","next","drain","f","schedule","isThenable","o","_then","o_type","then","notify","chain","notifyIsolated","success","failure","cb","ret","reject","msg","promise","resolve","triggered","def","def_wrapper","MakeDefWrapper","$resolve$","$reject$","iteratePromises","arr","resolver","rejecter","idx","IIFE","$resolver$","MakeDef","Promise","executor","__NPO__","constructor","extractChain","$catch$","publicResolve","publicReject","PromisePrototype","Promise$resolve","Promise$reject","Promise$all","len","msgs","count","Promise$race","callbackMap","storeCallback","playerCallbacks","get","getCallbacks","removeCallback","index","splice","shiftCallbacks","shift","swapCallbacks","oldElement","newElement","getOEmbedParameters","defaults","reduce","params","param","createEmbed","_ref","html","querySelector","div","innerHTML","firstChild","getOEmbedData","videoUrl","encodeURIComponent","xhr","XDomainRequest","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","domain_status_code","error","onerror","send","initializeEmbeds","elements","handleError","console","resizeEmbeds","VimeoPlayerResizeEmbeds_","onMessage","origin","iframes","contentWindow","source","space","parentElement","paddingBottom","bottom","parseMessageData","warn","method","message","ieVersion","navigator","userAgent","stringify","processData","callbacks","promises","e","initializeScreenfull","fnMap","l","eventNameMap","fullscreenchange","fullscreenerror","screenfull","request","onFullScreenEntered","documentElement","returnPromise","requestFullscreen","exit","isFullscreen","onFullScreenExit","exitFullscreen","eventName","defineProperties","fullscreenElement","isEnabled","fullscreenEnabled","playerMap","readyMap","Player","_this","jQuery","getElementById","nodeName","iframe","has","_window","readyPromise","_onMessage","isError","isReadyError","isReadyEvent","isPingResponse","_originalElement","ready","callMethod","_this2","args","_this3","_this4","lastCallback","loadVideo","addCuePoint","time","removeCuePoint","enableTextTrack","language","kind","disableTextTrack","getFullscreen","requestPictureInPicture","exitPictureInPicture","getPictureInPicture","unload","_this5","getAutopause","setAutopause","autopause","getBuffered","getCameraProps","setCameraProps","camera","getChapters","getCurrentChapter","getColor","setColor","color","getCuePoints","getCurrentTime","setCurrentTime","currentTime","getDuration","getEnded","getLoop","setLoop","loop","setMuted","muted","getMuted","getPaused","getPlaybackRate","setPlaybackRate","playbackRate","getPlayed","getQualities","getQuality","setQuality","quality","getSeekable","getSeeking","getTextTracks","getVideoEmbedCode","getVideoId","getVideoTitle","getVideoWidth","getVideoHeight","getVideoUrl","getVolume","setVolume","volume","VimeoPlayer","isURL","log","Vimeo","YOUTUBE_API_SRC","YouTubeIframeAPILoader","load","YT","attachCallback","shouldLoad","head","some","script","oldCallback","onYouTubeIframeAPIReady","YouTubePlayer","parseVideoId","onAPIReady","onReady","onStateChange","onPlayerStateChange","PlayerState","PAUSED","ENDED","parseUrl","search","query","CLASS_SLIDE","CLASS_CONTAINER","CLASS_VIDEO_WRAPPER","CLASS_VIDEO_PLAY_BUTTON","PlayerUI","slide","container","modifier","listen","wrapper","iframeWrapper","playButton","toggleButton","show","toggleWrapper","hide","VIDEO_PLAYER_MAP","ui","onClick","onPlayed","onPaused","onVideoClick","Video","Components","mount","Slides","Slide","splide","Extensions"],"mappings":"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"}